{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport Nav from \"@/views/inc/Nav.vue\";\nimport { computed, ref } from 'vue';\nexport default {\n  name: \"userManage\",\n  components: {\n    Nav\n  },\n\n  data() {\n    return {\n      dialogVisible: false,\n      ruleForm: {},\n      editRules: {},\n      tableData: [{\n        id: 1,\n        name: '学院1'\n      }, {\n        id: 2,\n        name: '学院2'\n      }, {\n        id: 3,\n        name: '学院3',\n        children: [{\n          id: 31,\n          name: '专业1'\n        }, {\n          id: 32,\n          name: '专业2'\n        }]\n      }, {\n        id: 4,\n        name: '学院4'\n      }]\n    };\n  },\n\n  created() {},\n\n  methods: {\n    nameCheck() {\n      const relu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\n      const re = new RegExp(relu);\n\n      if (this.value.search(re) !== -1) {} else {\n        message: '输入只能为中英文！';\n      }\n    },\n\n    editHandle(id) {\n      this.$axios.get('/sys/menu/info/' + id).then(res => {\n        this.ruleForm = res.data.data;\n        this.dialogVisible = true;\n      });\n    },\n\n    scrollToTop(node) {\n      const ChildHasError = Array.from(node.querySelectorAll('.is-error'));\n      if (!ChildHasError.length) throw new Error('有错误，但是找不到错误位置'); // 找到第一个错误位置\n\n      const FirstErrorNode = ChildHasError[0];\n    }\n\n  }\n};\nconst search = ref(''); //const filterTableData = computed(() =>\n//  tableData.filter(\n//    (data) =>\n//      !search.value ||\n//    data.name.toLowerCase().includes(search.value.toLowerCase())\n//  )\n//)\n\n/*const handleEdit = (index: number, row: User) => {\r\n    console.log(index, row)\r\n}\r\nconst handleDelete = (index: number, row: User) => {\r\n    console.log(index, row)\r\n}*/","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab3/vueadmin-vue/src/assets/js/majorManage.js"],"names":["Nav","computed","ref","name","components","data","dialogVisible","ruleForm","editRules","tableData","id","children","created","methods","nameCheck","relu","re","RegExp","value","search","message","editHandle","$axios","get","then","res","scrollToTop","node","ChildHasError","Array","from","querySelectorAll","length","Error","FirstErrorNode"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,qBAAhB;AAEA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,KAA9B;AAEA,eAAe;AACXC,EAAAA,IAAI,EAAE,YADK;AAEXC,EAAAA,UAAU,EAAC;AACPJ,IAAAA;AADO,GAFA;;AAKXK,EAAAA,IAAI,GAAE;AACF,WAAM;AACFC,MAAAA,aAAa,EAAC,KADZ;AAEFC,MAAAA,QAAQ,EAAC,EAFP;AAGFC,MAAAA,SAAS,EAAG,EAHV;AAMFC,MAAAA,SAAS,EAAC,CACN;AACIC,QAAAA,EAAE,EAAE,CADR;AAEIP,QAAAA,IAAI,EAAE;AAFV,OADM,EAKN;AACIO,QAAAA,EAAE,EAAE,CADR;AAEIP,QAAAA,IAAI,EAAE;AAFV,OALM,EASN;AACIO,QAAAA,EAAE,EAAE,CADR;AAEIP,QAAAA,IAAI,EAAE,KAFV;AAGIQ,QAAAA,QAAQ,EAAE,CACN;AACID,UAAAA,EAAE,EAAE,EADR;AAEIP,UAAAA,IAAI,EAAE;AAFV,SADM,EAKN;AACIO,UAAAA,EAAE,EAAE,EADR;AAEIP,UAAAA,IAAI,EAAE;AAFV,SALM;AAHd,OATM,EAuBN;AACIO,QAAAA,EAAE,EAAE,CADR;AAEIP,QAAAA,IAAI,EAAE;AAFV,OAvBM;AANR,KAAN;AAmCH,GAzCU;;AA0CXS,EAAAA,OAAO,GAAE,CAER,CA5CU;;AA8CXC,EAAAA,OAAO,EAAC;AACJC,IAAAA,SAAS,GAAI;AACT,YAAMC,IAAI,GAAG,0BAAb;AACA,YAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAWF,IAAX,CAAX;;AACA,UAAI,KAAKG,KAAL,CAAWC,MAAX,CAAkBH,EAAlB,MAA0B,CAAC,CAA/B,EAAiC,CAChC,CADD,MACO;AACHI,QAAAA,OAAO,EAAC;AACX;AACJ,KARG;;AASJC,IAAAA,UAAU,CAACX,EAAD,EAAI;AACV,WAAKY,MAAL,CAAYC,GAAZ,CAAgB,oBAAkBb,EAAlC,EAAsCc,IAAtC,CAA2CC,GAAG,IAAE;AAC5C,aAAKlB,QAAL,GAAckB,GAAG,CAACpB,IAAJ,CAASA,IAAvB;AACA,aAAKC,aAAL,GAAmB,IAAnB;AACH,OAHD;AAIH,KAdG;;AAeJoB,IAAAA,WAAW,CAAEC,IAAF,EAAQ;AACf,YAAMC,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAWH,IAAI,CAACI,gBAAL,CAAsB,WAAtB,CAAX,CAAtB;AACA,UAAI,CAACH,aAAa,CAACI,MAAnB,EAA2B,MAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN,CAFZ,CAGf;;AACA,YAAMC,cAAc,GAAGN,aAAa,CAAC,CAAD,CAApC;AACH;;AApBG;AA9CG,CAAf;AAqEA,MAAMT,MAAM,GAAGjB,GAAG,CAAC,EAAD,CAAlB,C,CACA;AACE;AACE;AACE;AACE;AACN;AACF;;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import Nav from \"@/views/inc/Nav.vue\";\r\n\r\nimport { computed, ref } from 'vue'\r\n\r\nexport default {\r\n    name: \"userManage\",\r\n    components:{\r\n        Nav\r\n    },\r\n    data(){\r\n        return{\r\n            dialogVisible:false,\r\n            ruleForm:{},\r\n            editRules :({\r\n\r\n            }),\r\n            tableData:[\r\n                {\r\n                    id: 1,\r\n                    name: '学院1',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    name: '学院2',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    name: '学院3',\r\n                    children: [\r\n                        {\r\n                            id: 31,\r\n                            name: '专业1',\r\n                        },\r\n                        {\r\n                            id: 32,\r\n                            name: '专业2',\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    id: 4,\r\n                    name: '学院4',\r\n                },\r\n            ]\r\n        }\r\n    },\r\n    created(){\r\n\r\n    },\r\n\r\n    methods:{\r\n        nameCheck () {\r\n            const relu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\r\n            const re = new RegExp(relu);\r\n            if (this.value.search(re) !== -1){\r\n            } else {\r\n                message:'输入只能为中英文！'\r\n            }\r\n        },\r\n        editHandle(id){\r\n            this.$axios.get('/sys/menu/info/'+id).then(res=>{\r\n                this.ruleForm=res.data.data;\r\n                this.dialogVisible=true;\r\n            })\r\n        },\r\n        scrollToTop (node) {\r\n            const ChildHasError = Array.from(node.querySelectorAll('.is-error'))\r\n            if (!ChildHasError.length) throw new Error('有错误，但是找不到错误位置')\r\n            // 找到第一个错误位置\r\n            const FirstErrorNode = ChildHasError[0]\r\n        }\r\n    }\r\n}\r\nconst search = ref('')\r\n//const filterTableData = computed(() =>\r\n  //  tableData.filter(\r\n    //    (data) =>\r\n      //      !search.value ||\r\n        //    data.name.toLowerCase().includes(search.value.toLowerCase())\r\n  //  )\r\n//)\r\n/*const handleEdit = (index: number, row: User) => {\r\n    console.log(index, row)\r\n}\r\nconst handleDelete = (index: number, row: User) => {\r\n    console.log(index, row)\r\n}*/\r\n"]},"metadata":{},"sourceType":"module"}