{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  name: \"resetpasswords\",\n\n  data() {\n    var testpassword = (rule, value, callback) => {\n      const pat0 = /^[\\w-_]{6,32}$/; //密码的规则0\n\n      const pat1 = /^[0-9]{6,32}$/; //密码的规则1\n\n      const pat2 = /^[-_]{6,32}$/; //密码的规则2\n\n      const pat3 = /^[a-zA-Z]{6,32}$/; //密码的规则3\n\n      if (pat1.test(value) || pat2.test(value) || pat3.test(value)) {\n        return callback(new Error('*密码需长度为6-32位，且字母，数字或者特殊字符（-_）至少包含两种'));\n      } else {\n        if (pat0.test(value)) {\n          this.$refs.ruleForm.validateField('pw2');\n          return callback();\n        } else {\n          return callback(new Error('*密码需长度为6-32位，且字母，数字或者特殊字符（-_）至少包含两种'));\n        }\n      }\n    };\n\n    var WhetherSame = (rule, value, callback) => {\n      if (value !== this.editRules.pw1) {\n        return callback(new Error('*请两次输入的密码保持一致'));\n      } else {\n        return callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        pw1: '',\n        pw2: ''\n      },\n      editRules: {\n        pw1: [{\n          required: true,\n          message: '请输入新密码',\n          trigger: 'blur'\n        }, {\n          validator: testpassword,\n          trigger: 'blur'\n        }],\n        pw2: [{\n          required: true,\n          message: '请再次确认密码',\n          trigger: 'blur'\n        }, {\n          validator: WhetherSame,\n          trigger: 'blur',\n          required: true\n        }]\n      }\n    };\n  },\n\n  created() {},\n\n  methods: {}\n};","map":{"version":3,"sources":["D:/git/ss2022_group16/ss2022_group16/Lab3/vueadmin-vue/src/assets/js/resetpasswords.js"],"names":["name","data","testpassword","rule","value","callback","pat0","pat1","pat2","pat3","test","Error","$refs","ruleForm","validateField","WhetherSame","editRules","pw1","pw2","required","message","trigger","validator","created","methods"],"mappings":";AAAA,eAAe;AACXA,EAAAA,IAAI,EAAE,gBADK;;AAEXC,EAAAA,IAAI,GAAE;AACF,QAAIC,YAAY,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA0B;AACzC,YAAMC,IAAI,GAAC,gBAAX,CADyC,CACb;;AAC5B,YAAMC,IAAI,GAAC,eAAX,CAFyC,CAEd;;AAC3B,YAAMC,IAAI,GAAC,cAAX,CAHyC,CAGf;;AAC1B,YAAMC,IAAI,GAAC,kBAAX,CAJyC,CAIX;;AAC9B,UAAGF,IAAI,CAACG,IAAL,CAAUN,KAAV,KAAkBI,IAAI,CAACE,IAAL,CAAUN,KAAV,CAAlB,IAAoCK,IAAI,CAACC,IAAL,CAAUN,KAAV,CAAvC,EAAwD;AACrD,eAAOC,QAAQ,CAAC,IAAIM,KAAJ,CAAU,qCAAV,CAAD,CAAf;AACF,OAFD,MAGK;AACD,YAAGL,IAAI,CAACI,IAAL,CAAUN,KAAV,CAAH,EAAoB;AAChB,eAAKQ,KAAL,CAAWC,QAAX,CAAoBC,aAApB,CAAkC,KAAlC;AACA,iBAAOT,QAAQ,EAAf;AACH,SAHD,MAIK;AACD,iBAAOA,QAAQ,CAAC,IAAIM,KAAJ,CAAU,qCAAV,CAAD,CAAf;AACH;AACJ;AACJ,KAjBD;;AAkBA,QAAII,WAAW,GAAG,CAACZ,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA0B;AACxC,UAAGD,KAAK,KAAG,KAAKY,SAAL,CAAeC,GAA1B,EAA8B;AAC1B,eAAOZ,QAAQ,CAAC,IAAIM,KAAJ,CAAU,eAAV,CAAD,CAAf;AACH,OAFD,MAGI;AACA,eAAON,QAAQ,EAAf;AACH;AACJ,KAPD;;AAQA,WAAM;AACFQ,MAAAA,QAAQ,EAAC;AACLI,QAAAA,GAAG,EAAC,EADC;AAELC,QAAAA,GAAG,EAAC;AAFC,OADP;AAKFF,MAAAA,SAAS,EAAG;AACRC,QAAAA,GAAG,EAAE,CACD;AAACE,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,OAAO,EAAE,QAA1B;AAAoCC,UAAAA,OAAO,EAAE;AAA7C,SADC,EAED;AAACC,UAAAA,SAAS,EAAEpB,YAAZ;AAAyBmB,UAAAA,OAAO,EAAE;AAAlC,SAFC,CADG;AAKRH,QAAAA,GAAG,EAAC,CACA;AAACC,UAAAA,QAAQ,EAAE,IAAX;AAAiBC,UAAAA,OAAO,EAAE,SAA1B;AAAqCC,UAAAA,OAAO,EAAE;AAA9C,SADA,EAEA;AAACC,UAAAA,SAAS,EAAEP,WAAZ;AAAwBM,UAAAA,OAAO,EAAE,MAAjC;AAAyCF,UAAAA,QAAQ,EAAE;AAAnD,SAFA;AALI;AALV,KAAN;AAgBH,GA7CU;;AA+CXI,EAAAA,OAAO,GAAE,CACR,CAhDU;;AAiDXC,EAAAA,OAAO,EAAC;AAjDG,CAAf","sourcesContent":["export default {\r\n    name: \"resetpasswords\",\r\n    data(){\r\n        var testpassword = (rule, value, callback) =>{\r\n            const pat0=/^[\\w-_]{6,32}$/;//密码的规则0\r\n            const pat1=/^[0-9]{6,32}$/;//密码的规则1\r\n            const pat2=/^[-_]{6,32}$/;//密码的规则2\r\n            const pat3=/^[a-zA-Z]{6,32}$/;//密码的规则3\r\n            if(pat1.test(value)||pat2.test(value)||pat3.test(value)){\r\n               return callback(new Error('*密码需长度为6-32位，且字母，数字或者特殊字符（-_）至少包含两种'));\r\n            }\r\n            else {\r\n                if(pat0.test(value)){\r\n                    this.$refs.ruleForm.validateField('pw2');\r\n                    return callback();\r\n                }\r\n                else {\r\n                    return callback(new Error('*密码需长度为6-32位，且字母，数字或者特殊字符（-_）至少包含两种'));\r\n                }\r\n            }\r\n        };\r\n        var WhetherSame = (rule, value, callback) =>{\r\n            if(value!==this.editRules.pw1){\r\n                return callback(new Error('*请两次输入的密码保持一致'));\r\n            }\r\n            else{\r\n                return callback();\r\n            }\r\n        };\r\n        return{\r\n            ruleForm:{\r\n                pw1:'',\r\n                pw2:''\r\n            },\r\n            editRules :({\r\n                pw1: [\r\n                    {required: true, message: '请输入新密码', trigger: 'blur' },\r\n                    {validator: testpassword,trigger: 'blur'}\r\n                ],\r\n                pw2:[\r\n                    {required: true, message: '请再次确认密码', trigger: 'blur',},\r\n                    {validator: WhetherSame,trigger: 'blur', required: true}\r\n                ],\r\n            }),\r\n        }\r\n    },\r\n\r\n    created(){\r\n    },\r\n    methods:{\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}