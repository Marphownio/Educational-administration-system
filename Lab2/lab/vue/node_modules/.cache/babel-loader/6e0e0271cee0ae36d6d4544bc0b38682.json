{"ast":null,"code":"import { defineComponent, shallowRef, computed, onBeforeUnmount, provide, toRef, useSlots, openBlock, createElementBlock, unref, createBlock, createSlots, withCtx, mergeProps, renderSlot, createCommentVNode } from 'vue';\nimport '../../../tokens/index.mjs';\nimport '../../../hooks/index.mjs';\nimport _sfc_main$1 from './upload-list2.mjs';\nimport _sfc_main$2 from './upload-content2.mjs';\nimport { useHandlers } from './use-handlers.mjs';\nimport { uploadProps } from './upload.mjs';\nimport { useDisabled } from '../../../hooks/use-common-props/index.mjs';\nimport { uploadContextKey } from '../../../tokens/upload.mjs';\nconst __default__ = {\n  name: \"ElUpload\"\n};\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: uploadProps,\n\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const disabled = useDisabled();\n    const uploadRef = shallowRef();\n    const {\n      abort,\n      submit,\n      clearFiles,\n      uploadFiles,\n      handleStart,\n      handleError,\n      handleRemove,\n      handleSuccess,\n      handleProgress\n    } = useHandlers(props, uploadRef);\n    const isPictureCard = computed(() => props.listType === \"picture-card\");\n    onBeforeUnmount(() => {\n      uploadFiles.value.forEach(({\n        url\n      }) => {\n        if (url == null ? void 0 : url.startsWith(\"blob:\")) URL.revokeObjectURL(url);\n      });\n    });\n    provide(uploadContextKey, {\n      accept: toRef(props, \"accept\")\n    });\n    expose({\n      abort,\n      submit,\n      clearFiles,\n      handleStart,\n      handleRemove\n    });\n    const slots = useSlots();\n    const uploadContentProps = computed(() => ({\n      type: props.type,\n      drag: props.drag,\n      action: props.action,\n      multiple: props.multiple,\n      withCredentials: props.withCredentials,\n      headers: props.headers,\n      method: props.method,\n      name: props.name,\n      data: props.data,\n      accept: props.accept,\n      autoUpload: props.autoUpload,\n      listType: props.listType,\n      disabled: props.disabled,\n      limit: props.limit,\n      fileList: props.fileList,\n      showFileList: props.showFileList,\n      httpRequest: props.httpRequest,\n      beforeUpload: props.beforeUpload,\n      onExceed: props.onExceed,\n      onStart: handleStart,\n      onProgress: handleProgress,\n      onSuccess: handleSuccess,\n      onError: handleError,\n      onRemove: handleRemove\n    }));\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", null, [unref(isPictureCard) && _ctx.showFileList ? (openBlock(), createBlock(_sfc_main$1, {\n        key: 0,\n        disabled: unref(disabled),\n        \"list-type\": _ctx.listType,\n        files: unref(uploadFiles),\n        \"handle-preview\": _ctx.onPreview,\n        onRemove: unref(handleRemove)\n      }, createSlots({\n        append: withCtx(() => [_ctx.listType === \"picture-card\" ? (openBlock(), createBlock(_sfc_main$2, mergeProps({\n          key: 0,\n          ref_key: \"uploadRef\",\n          ref: uploadRef\n        }, unref(uploadContentProps)), {\n          default: withCtx(() => [unref(slots).trigger ? renderSlot(_ctx.$slots, \"trigger\", {\n            key: 0\n          }) : createCommentVNode(\"v-if\", true), !unref(slots).trigger && unref(slots).default ? renderSlot(_ctx.$slots, \"default\", {\n            key: 1\n          }) : createCommentVNode(\"v-if\", true)]),\n          _: 3\n        }, 16)) : createCommentVNode(\"v-if\", true)]),\n        _: 2\n      }, [_ctx.$slots.file ? {\n        name: \"default\",\n        fn: withCtx(({\n          file\n        }) => [renderSlot(_ctx.$slots, \"file\", {\n          file\n        })])\n      } : void 0]), 1032, [\"disabled\", \"list-type\", \"files\", \"handle-preview\", \"onRemove\"])) : createCommentVNode(\"v-if\", true), _ctx.listType !== \"picture-card\" ? (openBlock(), createBlock(_sfc_main$2, mergeProps({\n        key: 1,\n        ref_key: \"uploadRef\",\n        ref: uploadRef\n      }, unref(uploadContentProps)), {\n        default: withCtx(() => [unref(slots).trigger ? renderSlot(_ctx.$slots, \"trigger\", {\n          key: 0\n        }) : createCommentVNode(\"v-if\", true), !unref(slots).trigger && unref(slots).default ? renderSlot(_ctx.$slots, \"default\", {\n          key: 1\n        }) : createCommentVNode(\"v-if\", true)]),\n        _: 3\n      }, 16)) : createCommentVNode(\"v-if\", true), _ctx.$slots.trigger ? renderSlot(_ctx.$slots, \"default\", {\n        key: 2\n      }) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"tip\"), !unref(isPictureCard) && _ctx.showFileList ? (openBlock(), createBlock(_sfc_main$1, {\n        key: 3,\n        disabled: unref(disabled),\n        \"list-type\": _ctx.listType,\n        files: unref(uploadFiles),\n        \"handle-preview\": _ctx.onPreview,\n        onRemove: unref(handleRemove)\n      }, createSlots({\n        _: 2\n      }, [_ctx.$slots.file ? {\n        name: \"default\",\n        fn: withCtx(({\n          file\n        }) => [renderSlot(_ctx.$slots, \"file\", {\n          file\n        })])\n      } : void 0]), 1032, [\"disabled\", \"list-type\", \"files\", \"handle-preview\", \"onRemove\"])) : createCommentVNode(\"v-if\", true)]);\n    };\n  }\n\n});\n\nexport { _sfc_main as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AA6EA;AAEA;AACA;AACAA,WADA;AAEAC,YAFA;AAGAC,gBAHA;AAIAC,iBAJA;AAKAC,iBALA;AAMAC,iBANA;AAOAC,kBAPA;AAQAC,mBARA;AASAC;AATA,QAUAC,6BAVA;AAYA;AAEAC;AACAP;AAAAQ;AAAA;AACA;AAAA,OADA;AACA,KAFA;AAMAC;AACAC;AADA;AAIAC;AAEAd,WAFA;AAIAC,YAJA;AAMAC,gBANA;AAQAE,iBARA;AAUAE;AAVA;AAaA;AAGA;AACAS,sBADA;AAEAC,sBAFA;AAGAC,0BAHA;AAIAC,8BAJA;AAKAC,4CALA;AAMAC,4BANA;AAOAC,0BAPA;AAQAC,sBARA;AASAC,sBATA;AAUAV,0BAVA;AAWAW,kCAXA;AAYAC,8BAZA;AAaAC,8BAbA;AAcAC,wBAdA;AAeAC,8BAfA;AAgBAC,sCAhBA;AAiBAC,oCAjBA;AAkBAC,sCAlBA;AAmBAC,8BAnBA;AAoBAC,0BApBA;AAqBAC,gCArBA;AAsBAC,8BAtBA;AAuBAC,0BAvBA;AAwBAC;AAxBA","names":["abort","submit","clearFiles","uploadFiles","handleStart","handleError","handleRemove","handleSuccess","handleProgress","useHandlers","onBeforeUnmount","url","provide","accept","expose","type","drag","action","multiple","withCredentials","headers","method","name","data","autoUpload","listType","disabled","limit","fileList","showFileList","httpRequest","beforeUpload","onExceed","onStart","onProgress","onSuccess","onError","onRemove"],"sources":["../../../../../../packages/components/upload/src/upload.vue"],"sourcesContent":["<template>\n  <div>\n    <upload-list\n      v-if=\"isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\"></slot>\n      </template>\n      <template #append>\n        <upload-content\n          v-if=\"listType === 'picture-card'\"\n          ref=\"uploadRef\"\n          v-bind=\"uploadContentProps\"\n        >\n          <slot v-if=\"slots.trigger\" name=\"trigger\" />\n          <slot v-if=\"!slots.trigger && slots.default\" />\n        </upload-content>\n      </template>\n    </upload-list>\n\n    <upload-content\n      v-if=\"listType !== 'picture-card'\"\n      ref=\"uploadRef\"\n      v-bind=\"uploadContentProps\"\n    >\n      <slot v-if=\"slots.trigger\" name=\"trigger\" />\n      <slot v-if=\"!slots.trigger && slots.default\" />\n    </upload-content>\n\n    <slot v-if=\"$slots.trigger\" />\n    <slot name=\"tip\" />\n    <upload-list\n      v-if=\"!isPictureCard && showFileList\"\n      :disabled=\"disabled\"\n      :list-type=\"listType\"\n      :files=\"uploadFiles\"\n      :handle-preview=\"onPreview\"\n      @remove=\"handleRemove\"\n    >\n      <template v-if=\"$slots.file\" #default=\"{ file }\">\n        <slot name=\"file\" :file=\"file\" />\n      </template>\n    </upload-list>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  provide,\n  onBeforeUnmount,\n  toRef,\n  shallowRef,\n  useSlots,\n} from 'vue'\nimport { uploadContextKey } from '@element-plus/tokens'\nimport { useDisabled } from '@element-plus/hooks'\n\nimport UploadList from './upload-list.vue'\nimport UploadContent from './upload-content.vue'\nimport { useHandlers } from './use-handlers'\nimport { uploadProps, type UploadFiles } from './upload'\nimport type {\n  UploadContentInstance,\n  UploadContentProps,\n} from './upload-content'\n\ndefineOptions({\n  name: 'ElUpload',\n})\n\nconst props = defineProps(uploadProps)\nconst disabled = useDisabled()\n\nconst uploadRef = shallowRef<UploadContentInstance>()\nconst {\n  abort,\n  submit,\n  clearFiles,\n  uploadFiles,\n  handleStart,\n  handleError,\n  handleRemove,\n  handleSuccess,\n  handleProgress,\n} = useHandlers(props, uploadRef)\n\nconst isPictureCard = computed(() => props.listType === 'picture-card')\n\nonBeforeUnmount(() => {\n  uploadFiles.value.forEach(({ url }) => {\n    if (url?.startsWith('blob:')) URL.revokeObjectURL(url)\n  })\n})\n\nprovide(uploadContextKey, {\n  accept: toRef(props, 'accept'),\n})\n\ndefineExpose({\n  /** @description cancel upload request */\n  abort,\n  /** @description upload the file list manually */\n  submit,\n  /** @description clear the file list  */\n  clearFiles,\n  /** @description select the file manually */\n  handleStart,\n  /** @description remove the file manually */\n  handleRemove,\n})\n\nconst slots = useSlots()\n\n// did not use `defineComponent` for performance\nconst uploadContentProps = computed<UploadContentProps>(() => ({\n  type: props.type,\n  drag: props.drag,\n  action: props.action,\n  multiple: props.multiple,\n  withCredentials: props.withCredentials,\n  headers: props.headers,\n  method: props.method,\n  name: props.name,\n  data: props.data,\n  accept: props.accept,\n  autoUpload: props.autoUpload,\n  listType: props.listType,\n  disabled: props.disabled,\n  limit: props.limit,\n  fileList: props.fileList as UploadFiles,\n  showFileList: props.showFileList,\n  httpRequest: props.httpRequest,\n  beforeUpload: props.beforeUpload,\n  onExceed: props.onExceed,\n  onStart: handleStart,\n  onProgress: handleProgress,\n  onSuccess: handleSuccess,\n  onError: handleError,\n  onRemove: handleRemove,\n}))\n</script>\n"]},"metadata":{},"sourceType":"module"}