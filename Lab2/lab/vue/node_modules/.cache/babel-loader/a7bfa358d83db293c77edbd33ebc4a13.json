{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport Nav from \"@/views/inc/Nav.vue\";\nexport default {\n  name: \"userManage\",\n  components: {\n    Nav\n  },\n\n  data() {\n    let namecheck = (rule, value, callback) => {\n      if (this.value.length === 0) {\n        callback(new Error('请输入姓名'));\n        return false;\n      } else {\n        const regu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\n        const re = new RegExp(regu);\n\n        if (this.value.search(re) === -1) {\n          callback(new Error(''));\n          return -1;\n        } else {\n          name_errorObj.style.display = \"none\";\n\n          if (nameObj.value.length > 32) {\n            name_longObj.style.display = \"inline\";\n            return -1;\n          } else {\n            name_longObj.style.display = \"none\";\n            return 1;\n          }\n        }\n      }\n    };\n\n    return {\n      dialogVisible: false,\n      ruleForm: {},\n      editRules: {\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }, {\n          validator: namecheck,\n          trigger: 'blur'\n        }],\n        id: [{\n          required: true,\n          message: '请输入学号/工号',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          message: '输入只能为数字',\n          trigger: 'change'\n        }, {}],\n        idNumber: [{\n          required: true,\n          message: '请输入身份证号',\n          trigger: 'blur'\n        }, {\n          pattern: '/(^\\\\d{15}$)|(^\\\\d{18}$)|(^\\\\d{17}(\\\\d|X|x)$)/',\n          message: '输入格式不正确，请检查输入',\n          trigger: 'blur'\n        }],\n        phoneNumber: [{\n          pattern: '^1[0-9]{10}$',\n          message: '请输入以1开头的11位数字',\n          trigger: 'blur'\n        }],\n        email: [{\n          pattern: '/^([a-zA-Z0-9]+[-_\\\\.]?)+@[a-zA-Z0-9]+\\\\.[a-z]+$/',\n          message: '邮箱格式不正确，请重新输入',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'blur'\n        }]\n      },\n      tableData: [{\n        role: '0',\n        name: 'admin',\n        id: '000000',\n        idNumber: '123456789012345678',\n        phoneNumber: '12345678901',\n        email: '12345678901@test.cn',\n        state: 1\n      }, {\n        role: '1',\n        name: 'test',\n        id: '000000',\n        idNumber: '123456789012345678',\n        phoneNumber: '12345678901',\n        email: '12345678901@test.cn',\n        state: 3\n      }]\n    };\n  },\n\n  created() {},\n\n  methods: {\n    getUserForm() {\n      this.$axios.get(\"/sys/menu/list\").then(res => {\n        this.tableData = res.data.data;\n      });\n    },\n\n    submitForm() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          //this.$axios.post('/sys/menu/'+(this.ruleForm.id?'update':'save'),this.ruleForm)\n          //.then(res=>{\n          this.$message({\n            showClose: true,\n            message: '添加成功',\n            type: 'success',\n            onClose: () => {\n              this.getUserForm();\n            } //})\n\n          });\n        } else {\n          this.$nextTick(() => {\n            this.scrollToTop(this.$refs[formName].$el);\n          });\n        }\n      });\n    },\n\n    nameCheck() {\n      const relu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\n      const re = new RegExp(relu);\n\n      if (this.value.search(re) !== -1) {} else {\n        message: '输入只能为中英文！';\n      }\n    },\n\n    editHandle(id) {\n      this.$axios.get('/sys/menu/info/' + id).then(res => {\n        this.ruleForm = res.data.data;\n        this.dialogVisible = true;\n      });\n    },\n\n    scrollToTop(node) {\n      const ChildHasError = Array.from(node.querySelectorAll('.is-error'));\n      if (!ChildHasError.length) throw new Error('有错误，但是找不到错误位置');\n    }\n\n  }\n};","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab3/vueadmin-vue/src/assets/js/usermanagement.js"],"names":["Nav","name","components","data","namecheck","rule","value","callback","length","Error","regu","re","RegExp","search","name_errorObj","style","display","nameObj","name_longObj","dialogVisible","ruleForm","editRules","required","message","trigger","validator","id","type","idNumber","pattern","phoneNumber","email","role","tableData","state","created","methods","getUserForm","$axios","get","then","res","submitForm","$refs","validate","valid","$message","showClose","onClose","$nextTick","scrollToTop","formName","$el","nameCheck","relu","editHandle","node","ChildHasError","Array","from","querySelectorAll"],"mappings":"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","sourcesContent":["import Nav from \"@/views/inc/Nav.vue\";\r\nexport default {\r\n    name: \"userManage\",\r\n    components:{\r\n        Nav\r\n    },\r\n    data(){\r\n        let namecheck=(rule,value,callback)=>{\r\n            if(this.value.length===0)\r\n            {\r\n                callback(new Error('请输入姓名'));\r\n                return false;\r\n            }\r\n            else\r\n            {\r\n                const regu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\r\n                const re = new RegExp(regu);\r\n                if (this.value.search(re) === -1){\r\n                    callback(new Error(''));\r\n                    return -1;\r\n                } else {\r\n                    name_errorObj.style.display=\"none\";\r\n                    if(nameObj.value.length>32){\r\n                        name_longObj.style.display=\"inline\";\r\n                        return -1;\r\n                    }\r\n                    else {\r\n                        name_longObj.style.display=\"none\";\r\n                        return 1;\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return{\r\n            dialogVisible:false,\r\n            ruleForm:{\r\n            },\r\n            editRules :({\r\n                name: [\r\n                    { required: true, message: '请输入姓名', trigger: 'blur' },\r\n                    {validator: namecheck,trigger: 'blur'}\r\n                ],\r\n                id: [\r\n                    {\r\n                        required: true,\r\n                        message: '请输入学号/工号',\r\n                        trigger: 'blur',\r\n                    },\r\n                    { type:'number',message:'输入只能为数字',trigger: 'change'},\r\n                    {}\r\n                ],\r\n                idNumber: [\r\n                    {\r\n                        required: true,\r\n                        message: '请输入身份证号',\r\n                        trigger: 'blur',\r\n                    },\r\n                    {pattern:'/(^\\\\d{15}$)|(^\\\\d{18}$)|(^\\\\d{17}(\\\\d|X|x)$)/',message:'输入格式不正确，请检查输入',trigger: 'blur'}\r\n                ],\r\n                phoneNumber:[\r\n                    {pattern:'^1[0-9]{10}$',message:'请输入以1开头的11位数字',trigger:'blur',}\r\n                ],\r\n                email:[\r\n                    {pattern:'/^([a-zA-Z0-9]+[-_\\\\.]?)+@[a-zA-Z0-9]+\\\\.[a-z]+$/',message:'邮箱格式不正确，请重新输入',trigger:'blur',}\r\n                ],\r\n                role: [\r\n                    {\r\n                        required: true,\r\n                        message: '请选择角色',\r\n                        trigger: 'blur',\r\n                    },\r\n                ]\r\n            }),\r\n            tableData : [\r\n                {\r\n                    role: '0',\r\n                    name: 'admin',\r\n                    id:'000000',\r\n                    idNumber:'123456789012345678',\r\n                    phoneNumber:'12345678901',\r\n                    email:'12345678901@test.cn',\r\n                    state: 1\r\n                },\r\n                {\r\n                    role: '1',\r\n                    name: 'test',\r\n                    id:'000000',\r\n                    idNumber:'123456789012345678',\r\n                    phoneNumber:'12345678901',\r\n                    email:'12345678901@test.cn',\r\n                    state:3\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created(){\r\n\r\n    },\r\n\r\n    methods:{\r\n        getUserForm(){\r\n            this.$axios.get(\"/sys/menu/list\").then(res=>{\r\n                this.tableData=res.data.data;\r\n            })\r\n        },\r\n        submitForm(){\r\n            this.$refs.ruleForm.validate(valid=>{\r\n                if(valid){\r\n                    //this.$axios.post('/sys/menu/'+(this.ruleForm.id?'update':'save'),this.ruleForm)\r\n                    //.then(res=>{\r\n                    this.$message({\r\n                            showClose: true,\r\n                            message: '添加成功',\r\n                            type: 'success',\r\n                            onClose:()=>{\r\n                                this.getUserForm()\r\n                            }\r\n                            //})\r\n                        }\r\n                    )\r\n                }\r\n                else{\r\n                    this.$nextTick(() => {\r\n                        this.scrollToTop(this.$refs[formName].$el)\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        nameCheck () {\r\n            const relu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\r\n            const re = new RegExp(relu);\r\n            if (this.value.search(re) !== -1){\r\n            } else {\r\n                message:'输入只能为中英文！'\r\n            }\r\n        },\r\n        editHandle(id){\r\n            this.$axios.get('/sys/menu/info/'+id).then(res=>{\r\n                this.ruleForm=res.data.data;\r\n                this.dialogVisible=true;\r\n            })\r\n        },\r\n        scrollToTop (node) {\r\n            const ChildHasError = Array.from(node.querySelectorAll('.is-error'))\r\n            if (!ChildHasError.length) throw new Error('有错误，但是找不到错误位置')\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}