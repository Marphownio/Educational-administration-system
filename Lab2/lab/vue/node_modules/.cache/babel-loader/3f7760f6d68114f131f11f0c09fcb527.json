{"ast":null,"code":"import { defineComponent, ref, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, renderSlot, toDisplayString, createVNode, withCtx, createTextVNode, createCommentVNode, createSlots, normalizeProps, guardReactiveProps, Fragment, renderList, createBlock } from 'vue';\nimport dayjs from 'dayjs';\nimport { ElButton, ElButtonGroup } from '../../button/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../utils/index.mjs';\nimport DateTable from './date-table2.mjs';\nimport { calendarProps, calendarEmits } from './calendar.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElCalendar\",\n  components: {\n    DateTable,\n    ElButton,\n    ElButtonGroup\n  },\n  props: calendarProps,\n  emits: calendarEmits,\n\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"calendar\");\n    const {\n      t,\n      lang\n    } = useLocale();\n    const selectedDay = ref();\n    const now = dayjs().locale(lang.value);\n    const prevMonthDayjs = computed(() => {\n      return date.value.subtract(1, \"month\").date(1);\n    });\n    const curMonthDatePrefix = computed(() => {\n      return dayjs(date.value).locale(lang.value).format(\"YYYY-MM\");\n    });\n    const nextMonthDayjs = computed(() => {\n      return date.value.add(1, \"month\").date(1);\n    });\n    const prevYearDayjs = computed(() => {\n      return date.value.subtract(1, \"year\").date(1);\n    });\n    const nextYearDayjs = computed(() => {\n      return date.value.add(1, \"year\").date(1);\n    });\n    const i18nDate = computed(() => {\n      const pickedMonth = `el.datepicker.month${date.value.format(\"M\")}`;\n      return `${date.value.year()} ${t(\"el.datepicker.year\")} ${t(pickedMonth)}`;\n    });\n    const realSelectedDay = computed({\n      get() {\n        if (!props.modelValue) return selectedDay.value;\n        return date.value;\n      },\n\n      set(val) {\n        if (!val) return;\n        selectedDay.value = val;\n        const result = val.toDate();\n        emit(\"input\", result);\n        emit(\"update:modelValue\", result);\n      }\n\n    });\n    const date = computed(() => {\n      if (!props.modelValue) {\n        if (realSelectedDay.value) {\n          return realSelectedDay.value;\n        } else if (validatedRange.value.length) {\n          return validatedRange.value[0][0];\n        }\n\n        return now;\n      } else {\n        return dayjs(props.modelValue).locale(lang.value);\n      }\n    });\n\n    const calculateValidatedDateRange = (startDayjs, endDayjs) => {\n      const firstDay = startDayjs.startOf(\"week\");\n      const lastDay = endDayjs.endOf(\"week\");\n      const firstMonth = firstDay.get(\"month\");\n      const lastMonth = lastDay.get(\"month\");\n\n      if (firstMonth === lastMonth) {\n        return [[firstDay, lastDay]];\n      } else if (firstMonth + 1 === lastMonth) {\n        const firstMonthLastDay = firstDay.endOf(\"month\");\n        const lastMonthFirstDay = lastDay.startOf(\"month\");\n        const isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, \"week\");\n        const lastMonthStartDay = isSameWeek ? lastMonthFirstDay.add(1, \"week\") : lastMonthFirstDay;\n        return [[firstDay, firstMonthLastDay], [lastMonthStartDay.startOf(\"week\"), lastDay]];\n      } else if (firstMonth + 2 === lastMonth) {\n        const firstMonthLastDay = firstDay.endOf(\"month\");\n        const secondMonthFirstDay = firstDay.add(1, \"month\").startOf(\"month\");\n        const secondMonthStartDay = firstMonthLastDay.isSame(secondMonthFirstDay, \"week\") ? secondMonthFirstDay.add(1, \"week\") : secondMonthFirstDay;\n        const secondMonthLastDay = secondMonthStartDay.endOf(\"month\");\n        const lastMonthFirstDay = lastDay.startOf(\"month\");\n        const lastMonthStartDay = secondMonthLastDay.isSame(lastMonthFirstDay, \"week\") ? lastMonthFirstDay.add(1, \"week\") : lastMonthFirstDay;\n        return [[firstDay, firstMonthLastDay], [secondMonthStartDay.startOf(\"week\"), secondMonthLastDay], [lastMonthStartDay.startOf(\"week\"), lastDay]];\n      } else {\n        debugWarn(\"ElCalendar\", \"start time and end time interval must not exceed two months\");\n        return [];\n      }\n    };\n\n    const validatedRange = computed(() => {\n      if (!props.range) return [];\n      const rangeArrDayjs = props.range.map(_ => dayjs(_).locale(lang.value));\n      const [startDayjs, endDayjs] = rangeArrDayjs;\n\n      if (startDayjs.isAfter(endDayjs)) {\n        debugWarn(\"ElCalendar\", \"end time should be greater than start time\");\n        return [];\n      }\n\n      if (startDayjs.isSame(endDayjs, \"month\")) {\n        return calculateValidatedDateRange(startDayjs, endDayjs);\n      } else {\n        if (startDayjs.add(1, \"month\").month() !== endDayjs.month()) {\n          debugWarn(\"ElCalendar\", \"start time and end time interval must not exceed two months\");\n          return [];\n        }\n\n        return calculateValidatedDateRange(startDayjs, endDayjs);\n      }\n    });\n\n    const pickDay = day => {\n      realSelectedDay.value = day;\n    };\n\n    const selectDate = type => {\n      let day;\n\n      if (type === \"prev-month\") {\n        day = prevMonthDayjs.value;\n      } else if (type === \"next-month\") {\n        day = nextMonthDayjs.value;\n      } else if (type === \"prev-year\") {\n        day = prevYearDayjs.value;\n      } else if (type === \"next-year\") {\n        day = nextYearDayjs.value;\n      } else {\n        day = now;\n      }\n\n      if (day.isSame(date.value, \"day\")) return;\n      pickDay(day);\n    };\n\n    return {\n      selectedDay,\n      curMonthDatePrefix,\n      i18nDate,\n      realSelectedDay,\n      date,\n      validatedRange,\n      pickDay,\n      selectDate,\n      t,\n      ns\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = resolveComponent(\"el-button\");\n\n  const _component_el_button_group = resolveComponent(\"el-button-group\");\n\n  const _component_date_table = resolveComponent(\"date-table\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass(_ctx.ns.b())\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"header\"))\n  }, [renderSlot(_ctx.$slots, \"header\", {\n    date: _ctx.i18nDate\n  }, () => [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"title\"))\n  }, toDisplayString(_ctx.i18nDate), 3), _ctx.validatedRange.length === 0 ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"button-group\"))\n  }, [createVNode(_component_el_button_group, null, {\n    default: withCtx(() => [createVNode(_component_el_button, {\n      size: \"small\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.selectDate(\"prev-month\"))\n    }, {\n      default: withCtx(() => [createTextVNode(toDisplayString(_ctx.t(\"el.datepicker.prevMonth\")), 1)]),\n      _: 1\n    }), createVNode(_component_el_button, {\n      size: \"small\",\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.selectDate(\"today\"))\n    }, {\n      default: withCtx(() => [createTextVNode(toDisplayString(_ctx.t(\"el.datepicker.today\")), 1)]),\n      _: 1\n    }), createVNode(_component_el_button, {\n      size: \"small\",\n      onClick: _cache[2] || (_cache[2] = $event => _ctx.selectDate(\"next-month\"))\n    }, {\n      default: withCtx(() => [createTextVNode(toDisplayString(_ctx.t(\"el.datepicker.nextMonth\")), 1)]),\n      _: 1\n    })]),\n    _: 1\n  })], 2)) : createCommentVNode(\"v-if\", true)])], 2), _ctx.validatedRange.length === 0 ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"body\"))\n  }, [createVNode(_component_date_table, {\n    date: _ctx.date,\n    \"selected-day\": _ctx.realSelectedDay,\n    onPick: _ctx.pickDay\n  }, createSlots({\n    _: 2\n  }, [_ctx.$slots.dateCell ? {\n    name: \"dateCell\",\n    fn: withCtx(data => [renderSlot(_ctx.$slots, \"dateCell\", normalizeProps(guardReactiveProps(data)))])\n  } : void 0]), 1032, [\"date\", \"selected-day\", \"onPick\"])], 2)) : (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: normalizeClass(_ctx.ns.e(\"body\"))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.validatedRange, (range_, index) => {\n    return openBlock(), createBlock(_component_date_table, {\n      key: index,\n      date: range_[0],\n      \"selected-day\": _ctx.realSelectedDay,\n      range: range_,\n      \"hide-header\": index !== 0,\n      onPick: _ctx.pickDay\n    }, createSlots({\n      _: 2\n    }, [_ctx.$slots.dateCell ? {\n      name: \"dateCell\",\n      fn: withCtx(data => [renderSlot(_ctx.$slots, \"dateCell\", normalizeProps(guardReactiveProps(data)))])\n    } : void 0]), 1032, [\"date\", \"selected-day\", \"range\", \"hide-header\", \"onPick\"]);\n  }), 128))], 2))], 2);\n}\n\nvar Calendar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Calendar as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","DateTable","ElButton","ElButtonGroup","props","emits","setup","emit","ns","useNamespace","t","lang","useLocale","selectedDay","dayjs","computed","date","subtract","locale","value","format","add","pickedMonth","year","realSelectedDay","get","set","val","result","modelValue","length","startDayjs","endDayjs","startOf","endOf","firstDay","lastDay","firstMonth","lastMonth","firstMonthLastDay","lastMonthFirstDay","lastMonthStartDay","secondMonthFirstDay","isSame","secondMonthStartDay","secondMonthLastDay","debugWarn","range","map","_","rangeArrDayjs","isAfter","calculateValidatedDateRange","month","day","type","prevMonthDayjs","nextMonthDayjs","prevYearDayjs","nextYearDayjs","pickDay","curMonthDatePrefix","i18nDate","validatedRange","selectDate","_createElementBlock","class","_normalizeClass","_ctx","b","_createElementVNode","e","_renderSlot","_toDisplayString","_openBlock","key","_createVNode","default","size","onClick","_cache","openBlock","onPick","_createSlots","dateCell","fn","data","_normalizeProps","_Fragment","_renderList","range_","index","_createBlock"],"sources":["../../../../../../packages/components/calendar/src/calendar.vue"],"sourcesContent":["<template>\n  <div :class=\"ns.b()\">\n    <div :class=\"ns.e('header')\">\n      <slot name=\"header\" :date=\"i18nDate\">\n        <div :class=\"ns.e('title')\">{{ i18nDate }}</div>\n        <div v-if=\"validatedRange.length === 0\" :class=\"ns.e('button-group')\">\n          <el-button-group>\n            <el-button size=\"small\" @click=\"selectDate('prev-month')\">\n              {{ t('el.datepicker.prevMonth') }}\n            </el-button>\n            <el-button size=\"small\" @click=\"selectDate('today')\">\n              {{ t('el.datepicker.today') }}\n            </el-button>\n            <el-button size=\"small\" @click=\"selectDate('next-month')\">\n              {{ t('el.datepicker.nextMonth') }}\n            </el-button>\n          </el-button-group>\n        </div>\n      </slot>\n    </div>\n    <div v-if=\"validatedRange.length === 0\" :class=\"ns.e('body')\">\n      <date-table :date=\"date\" :selected-day=\"realSelectedDay\" @pick=\"pickDay\">\n        <template v-if=\"$slots.dateCell\" #dateCell=\"data\">\n          <slot name=\"dateCell\" v-bind=\"data\"></slot>\n        </template>\n      </date-table>\n    </div>\n    <div v-else :class=\"ns.e('body')\">\n      <date-table\n        v-for=\"(range_, index) in validatedRange\"\n        :key=\"index\"\n        :date=\"range_[0]\"\n        :selected-day=\"realSelectedDay\"\n        :range=\"range_\"\n        :hide-header=\"index !== 0\"\n        @pick=\"pickDay\"\n      >\n        <template v-if=\"$slots.dateCell\" #dateCell=\"data\">\n          <slot name=\"dateCell\" v-bind=\"data\"></slot>\n        </template>\n      </date-table>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { ref, computed, defineComponent } from 'vue'\nimport dayjs from 'dayjs'\nimport { ElButton, ElButtonGroup } from '@element-plus/components/button'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport { debugWarn } from '@element-plus/utils'\nimport DateTable from './date-table.vue'\nimport { calendarProps, calendarEmits } from './calendar'\n\nimport type { ComputedRef } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\ntype DateType =\n  | 'prev-month'\n  | 'next-month'\n  | 'prev-year'\n  | 'next-year'\n  | 'today'\n\nexport default defineComponent({\n  name: 'ElCalendar',\n\n  components: {\n    DateTable,\n    ElButton,\n    ElButtonGroup,\n  },\n\n  props: calendarProps,\n  emits: calendarEmits,\n\n  setup(props, { emit }) {\n    const ns = useNamespace('calendar')\n\n    const { t, lang } = useLocale()\n    const selectedDay = ref<Dayjs>()\n    const now = dayjs().locale(lang.value)\n\n    const prevMonthDayjs = computed(() => {\n      return date.value.subtract(1, 'month').date(1)\n    })\n    const curMonthDatePrefix = computed(() => {\n      return dayjs(date.value).locale(lang.value).format('YYYY-MM')\n    })\n\n    const nextMonthDayjs = computed(() => {\n      return date.value.add(1, 'month').date(1)\n    })\n\n    const prevYearDayjs = computed(() => {\n      return date.value.subtract(1, 'year').date(1)\n    })\n\n    const nextYearDayjs = computed(() => {\n      return date.value.add(1, 'year').date(1)\n    })\n\n    const i18nDate = computed(() => {\n      const pickedMonth = `el.datepicker.month${date.value.format('M')}`\n      return `${date.value.year()} ${t('el.datepicker.year')} ${t(pickedMonth)}`\n    })\n\n    const realSelectedDay = computed<Dayjs | undefined>({\n      get() {\n        if (!props.modelValue) return selectedDay.value\n        return date.value\n      },\n      set(val) {\n        if (!val) return\n        selectedDay.value = val\n        const result = val.toDate()\n\n        emit('input', result)\n        emit('update:modelValue', result)\n      },\n    })\n\n    const date: ComputedRef<Dayjs> = computed(() => {\n      if (!props.modelValue) {\n        if (realSelectedDay.value) {\n          return realSelectedDay.value\n        } else if (validatedRange.value.length) {\n          return validatedRange.value[0][0]\n        }\n        return now\n      } else {\n        return dayjs(props.modelValue).locale(lang.value)\n      }\n    })\n\n    // https://github.com/element-plus/element-plus/issues/3155\n    // Calculate the validate date range according to the start and end dates\n    const calculateValidatedDateRange = (\n      startDayjs: Dayjs,\n      endDayjs: Dayjs\n    ): [Dayjs, Dayjs][] => {\n      const firstDay = startDayjs.startOf('week')\n      const lastDay = endDayjs.endOf('week')\n      const firstMonth = firstDay.get('month')\n      const lastMonth = lastDay.get('month')\n\n      // Current mouth\n      if (firstMonth === lastMonth) {\n        return [[firstDay, lastDay]]\n      }\n      // Two adjacent months\n      else if (firstMonth + 1 === lastMonth) {\n        const firstMonthLastDay = firstDay.endOf('month')\n        const lastMonthFirstDay = lastDay.startOf('month')\n\n        // Whether the last day of the first month and the first day of the last month is in the same week\n        const isSameWeek = firstMonthLastDay.isSame(lastMonthFirstDay, 'week')\n        const lastMonthStartDay = isSameWeek\n          ? lastMonthFirstDay.add(1, 'week')\n          : lastMonthFirstDay\n\n        return [\n          [firstDay, firstMonthLastDay],\n          [lastMonthStartDay.startOf('week'), lastDay],\n        ]\n      }\n      // Three consecutive months (compatible: 2021-01-30 to 2021-02-28)\n      else if (firstMonth + 2 === lastMonth) {\n        const firstMonthLastDay = firstDay.endOf('month')\n        const secondMonthFirstDay = firstDay.add(1, 'month').startOf('month')\n\n        // Whether the last day of the first month and the second month is in the same week\n        const secondMonthStartDay = firstMonthLastDay.isSame(\n          secondMonthFirstDay,\n          'week'\n        )\n          ? secondMonthFirstDay.add(1, 'week')\n          : secondMonthFirstDay\n\n        const secondMonthLastDay = secondMonthStartDay.endOf('month')\n        const lastMonthFirstDay = lastDay.startOf('month')\n\n        // Whether the last day of the second month and the last day of the last month is in the same week\n        const lastMonthStartDay = secondMonthLastDay.isSame(\n          lastMonthFirstDay,\n          'week'\n        )\n          ? lastMonthFirstDay.add(1, 'week')\n          : lastMonthFirstDay\n\n        return [\n          [firstDay, firstMonthLastDay],\n          [secondMonthStartDay.startOf('week'), secondMonthLastDay],\n          [lastMonthStartDay.startOf('week'), lastDay],\n        ]\n      }\n      // Other cases\n      else {\n        debugWarn(\n          'ElCalendar',\n          'start time and end time interval must not exceed two months'\n        )\n        return []\n      }\n    }\n\n    // if range is valid, we get a two-digit array\n    const validatedRange = computed(() => {\n      if (!props.range) return []\n      const rangeArrDayjs = props.range.map((_) => dayjs(_).locale(lang.value))\n      const [startDayjs, endDayjs] = rangeArrDayjs\n      if (startDayjs.isAfter(endDayjs)) {\n        debugWarn('ElCalendar', 'end time should be greater than start time')\n        return []\n      }\n      if (startDayjs.isSame(endDayjs, 'month')) {\n        // same month\n        return calculateValidatedDateRange(startDayjs, endDayjs)\n      } else {\n        // two months\n        if (startDayjs.add(1, 'month').month() !== endDayjs.month()) {\n          debugWarn(\n            'ElCalendar',\n            'start time and end time interval must not exceed two months'\n          )\n          return []\n        }\n        return calculateValidatedDateRange(startDayjs, endDayjs)\n      }\n    })\n\n    const pickDay = (day: Dayjs) => {\n      realSelectedDay.value = day\n    }\n\n    const selectDate = (type: DateType) => {\n      let day: Dayjs\n      if (type === 'prev-month') {\n        day = prevMonthDayjs.value\n      } else if (type === 'next-month') {\n        day = nextMonthDayjs.value\n      } else if (type === 'prev-year') {\n        day = prevYearDayjs.value\n      } else if (type === 'next-year') {\n        day = nextYearDayjs.value\n      } else {\n        day = now\n      }\n\n      if (day.isSame(date.value, 'day')) return\n      pickDay(day)\n    }\n\n    return {\n      selectedDay,\n      curMonthDatePrefix,\n      i18nDate,\n      realSelectedDay,\n      date,\n      validatedRange,\n      pickDay,\n      selectDate,\n      t,\n\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}