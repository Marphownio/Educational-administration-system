{"ast":null,"code":"import { defineComponent, inject, ref, computed, watch, onMounted, onUpdated, h } from 'vue';\nimport { NOOP, capitalize } from '@vue/shared';\nimport { useDocumentVisibility, useWindowFocus, useResizeObserver } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport { ArrowLeft, ArrowRight, Close } from '@element-plus/icons-vue';\nimport '../../../tokens/index.mjs';\nimport TabBar from './tab-bar2.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { tabsRootContextKey } from '../../../tokens/tabs.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\nconst tabNavProps = buildProps({\n  panes: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  currentName: {\n    type: [String, Number],\n    default: \"\"\n  },\n  editable: Boolean,\n  onTabClick: {\n    type: definePropType(Function),\n    default: NOOP\n  },\n  onTabRemove: {\n    type: definePropType(Function),\n    default: NOOP\n  },\n  type: {\n    type: String,\n    values: [\"card\", \"border-card\", \"\"],\n    default: \"\"\n  },\n  stretch: Boolean\n});\nconst COMPONENT_NAME = \"ElTabNav\";\nvar TabNav = defineComponent({\n  name: COMPONENT_NAME,\n  props: tabNavProps,\n\n  setup(props, {\n    expose\n  }) {\n    const visibility = useDocumentVisibility();\n    const focused = useWindowFocus();\n    const rootTabs = inject(tabsRootContextKey);\n    if (!rootTabs) throwError(COMPONENT_NAME, `ElTabNav must be nested inside ElTabs`);\n    const scrollable = ref(false);\n    const navOffset = ref(0);\n    const isFocus = ref(false);\n    const focusable = ref(true);\n    const navScroll$ = ref();\n    const nav$ = ref();\n    const el$ = ref();\n    const sizeName = computed(() => [\"top\", \"bottom\"].includes(rootTabs.props.tabPosition) ? \"width\" : \"height\");\n    const navStyle = computed(() => {\n      const dir = sizeName.value === \"width\" ? \"X\" : \"Y\";\n      return {\n        transform: `translate${dir}(-${navOffset.value}px)`\n      };\n    });\n\n    const scrollPrev = () => {\n      if (!navScroll$.value) return;\n      const containerSize = navScroll$.value[`offset${capitalize(sizeName.value)}`];\n      const currentOffset = navOffset.value;\n      if (!currentOffset) return;\n      const newOffset = currentOffset > containerSize ? currentOffset - containerSize : 0;\n      navOffset.value = newOffset;\n    };\n\n    const scrollNext = () => {\n      if (!navScroll$.value || !nav$.value) return;\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`];\n      const containerSize = navScroll$.value[`offset${capitalize(sizeName.value)}`];\n      const currentOffset = navOffset.value;\n      if (navSize - currentOffset <= containerSize) return;\n      const newOffset = navSize - currentOffset > containerSize * 2 ? currentOffset + containerSize : navSize - containerSize;\n      navOffset.value = newOffset;\n    };\n\n    const scrollToActiveTab = () => {\n      const nav = nav$.value;\n      if (!scrollable.value || !el$.value || !navScroll$.value || !nav) return;\n      const activeTab = el$.value.querySelector(\".is-active\");\n      if (!activeTab) return;\n      const navScroll = navScroll$.value;\n      const isHorizontal = [\"top\", \"bottom\"].includes(rootTabs.props.tabPosition);\n      const activeTabBounding = activeTab.getBoundingClientRect();\n      const navScrollBounding = navScroll.getBoundingClientRect();\n      const maxOffset = isHorizontal ? nav.offsetWidth - navScrollBounding.width : nav.offsetHeight - navScrollBounding.height;\n      const currentOffset = navOffset.value;\n      let newOffset = currentOffset;\n\n      if (isHorizontal) {\n        if (activeTabBounding.left < navScrollBounding.left) {\n          newOffset = currentOffset - (navScrollBounding.left - activeTabBounding.left);\n        }\n\n        if (activeTabBounding.right > navScrollBounding.right) {\n          newOffset = currentOffset + activeTabBounding.right - navScrollBounding.right;\n        }\n      } else {\n        if (activeTabBounding.top < navScrollBounding.top) {\n          newOffset = currentOffset - (navScrollBounding.top - activeTabBounding.top);\n        }\n\n        if (activeTabBounding.bottom > navScrollBounding.bottom) {\n          newOffset = currentOffset + (activeTabBounding.bottom - navScrollBounding.bottom);\n        }\n      }\n\n      newOffset = Math.max(newOffset, 0);\n      navOffset.value = Math.min(newOffset, maxOffset);\n    };\n\n    const update = () => {\n      if (!nav$.value || !navScroll$.value) return;\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`];\n      const containerSize = navScroll$.value[`offset${capitalize(sizeName.value)}`];\n      const currentOffset = navOffset.value;\n\n      if (containerSize < navSize) {\n        const currentOffset2 = navOffset.value;\n        scrollable.value = scrollable.value || {};\n        scrollable.value.prev = currentOffset2;\n        scrollable.value.next = currentOffset2 + containerSize < navSize;\n\n        if (navSize - currentOffset2 < containerSize) {\n          navOffset.value = navSize - containerSize;\n        }\n      } else {\n        scrollable.value = false;\n\n        if (currentOffset > 0) {\n          navOffset.value = 0;\n        }\n      }\n    };\n\n    const changeTab = e => {\n      const code = e.code;\n      const {\n        up,\n        down,\n        left,\n        right\n      } = EVENT_CODE;\n      if (![up, down, left, right].includes(code)) return;\n      const tabList = Array.from(e.currentTarget.querySelectorAll(\"[role=tab]\"));\n      const currentIndex = tabList.indexOf(e.target);\n      let nextIndex;\n\n      if (code === left || code === up) {\n        if (currentIndex === 0) {\n          nextIndex = tabList.length - 1;\n        } else {\n          nextIndex = currentIndex - 1;\n        }\n      } else {\n        if (currentIndex < tabList.length - 1) {\n          nextIndex = currentIndex + 1;\n        } else {\n          nextIndex = 0;\n        }\n      }\n\n      tabList[nextIndex].focus();\n      tabList[nextIndex].click();\n      setFocus();\n    };\n\n    const setFocus = () => {\n      if (focusable.value) isFocus.value = true;\n    };\n\n    const removeFocus = () => isFocus.value = false;\n\n    watch(visibility, visibility2 => {\n      if (visibility2 === \"hidden\") {\n        focusable.value = false;\n      } else if (visibility2 === \"visible\") {\n        setTimeout(() => focusable.value = true, 50);\n      }\n    });\n    watch(focused, focused2 => {\n      if (focused2) {\n        setTimeout(() => focusable.value = true, 50);\n      } else {\n        focusable.value = false;\n      }\n    });\n    useResizeObserver(el$, update);\n    onMounted(() => setTimeout(() => scrollToActiveTab(), 0));\n    onUpdated(() => update());\n    expose({\n      scrollToActiveTab,\n      removeFocus\n    });\n    return () => {\n      const scrollBtn = scrollable.value ? [h(\"span\", {\n        class: [\"el-tabs__nav-prev\", scrollable.value.prev ? \"\" : \"is-disabled\"],\n        onClick: scrollPrev\n      }, [h(ElIcon, {}, {\n        default: () => h(ArrowLeft)\n      })]), h(\"span\", {\n        class: [\"el-tabs__nav-next\", scrollable.value.next ? \"\" : \"is-disabled\"],\n        onClick: scrollNext\n      }, [h(ElIcon, {}, {\n        default: () => h(ArrowRight)\n      })])] : null;\n      const tabs = props.panes.map((pane, index) => {\n        var _a, _b;\n\n        const tabName = pane.props.name || pane.index || `${index}`;\n        const closable = pane.isClosable || props.editable;\n        pane.index = `${index}`;\n        const btnClose = closable ? h(ElIcon, {\n          class: \"is-icon-close\",\n          onClick: ev => props.onTabRemove(pane, ev)\n        }, {\n          default: () => h(Close)\n        }) : null;\n        const tabLabelContent = ((_b = (_a = pane.instance.slots).label) == null ? void 0 : _b.call(_a)) || pane.props.label;\n        const tabindex = pane.active ? 0 : -1;\n        return h(\"div\", {\n          class: {\n            \"el-tabs__item\": true,\n            [`is-${rootTabs.props.tabPosition}`]: true,\n            \"is-active\": pane.active,\n            \"is-disabled\": pane.props.disabled,\n            \"is-closable\": closable,\n            \"is-focus\": isFocus\n          },\n          id: `tab-${tabName}`,\n          key: `tab-${tabName}`,\n          \"aria-controls\": `pane-${tabName}`,\n          role: \"tab\",\n          \"aria-selected\": pane.active,\n          ref: `tab-${tabName}`,\n          tabindex,\n          onFocus: () => setFocus(),\n          onBlur: () => removeFocus(),\n          onClick: ev => {\n            removeFocus();\n            props.onTabClick(pane, tabName, ev);\n          },\n          onKeydown: ev => {\n            if (closable && (ev.code === EVENT_CODE.delete || ev.code === EVENT_CODE.backspace)) {\n              props.onTabRemove(pane, ev);\n            }\n          }\n        }, [tabLabelContent, btnClose]);\n      });\n      return h(\"div\", {\n        ref: el$,\n        class: [\"el-tabs__nav-wrap\", scrollable.value ? \"is-scrollable\" : \"\", `is-${rootTabs.props.tabPosition}`]\n      }, [scrollBtn, h(\"div\", {\n        class: \"el-tabs__nav-scroll\",\n        ref: navScroll$\n      }, [h(\"div\", {\n        class: [\"el-tabs__nav\", `is-${rootTabs.props.tabPosition}`, props.stretch && [\"top\", \"bottom\"].includes(rootTabs.props.tabPosition) ? \"is-stretch\" : \"\"],\n        ref: nav$,\n        style: navStyle.value,\n        role: \"tablist\",\n        onKeydown: changeTab\n      }, [!props.type ? h(TabBar, {\n        tabs: [...props.panes]\n      }) : null, tabs])])]);\n    };\n  }\n\n});\nexport { TabNav as default, tabNavProps };","map":{"version":3,"mappings":"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","names":["tabNavProps","buildProps","panes","type","definePropType","Array","default","mutable","currentName","String","Number","editable","Boolean","onTabClick","Function","NOOP","onTabRemove","values","stretch","COMPONENT_NAME","defineComponent","name","props","setup","expose","visibility","useDocumentVisibility","focused","useWindowFocus","rootTabs","inject","tabsRootContextKey","throwError","scrollable","ref","navOffset","isFocus","focusable","navScroll$","nav$","el$","sizeName","computed","includes","tabPosition","navStyle","dir","value","transform","scrollPrev","containerSize","capitalize","currentOffset","newOffset","scrollNext","navSize","scrollToActiveTab","nav","activeTab","querySelector","navScroll","isHorizontal","activeTabBounding","getBoundingClientRect","navScrollBounding","maxOffset","offsetWidth","width","offsetHeight","height","left","right","top","bottom","Math","max","min","update","currentOffset2","prev","next","changeTab","e","code","up","down","EVENT_CODE","tabList","from","currentTarget","querySelectorAll","currentIndex","indexOf","target","nextIndex","length","focus","click","setFocus","removeFocus","watch","visibility2","setTimeout","focused2","useResizeObserver","onMounted","onUpdated","scrollBtn","h","class","onClick","ElIcon","ArrowLeft","ArrowRight","tabs","map","pane","index","_a","_b","tabName","closable","isClosable","btnClose","ev","Close","tabLabelContent","instance","slots","label","call","tabindex","active","disabled","id","key","role","onFocus","onBlur","onKeydown","delete","backspace","style","TabBar"],"sources":["../../../../../../packages/components/tabs/src/tab-nav.ts"],"sourcesContent":["import {\n  h,\n  defineComponent,\n  ref,\n  inject,\n  computed,\n  onUpdated,\n  onMounted,\n  watch,\n} from 'vue'\nimport { NOOP, capitalize } from '@vue/shared'\nimport {\n  useResizeObserver,\n  useDocumentVisibility,\n  useWindowFocus,\n} from '@vueuse/core'\nimport {\n  buildProps,\n  definePropType,\n  mutable,\n  throwError,\n} from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft, ArrowRight, Close } from '@element-plus/icons-vue'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport TabBar from './tab-bar.vue'\nimport type { ExtractPropTypes, CSSProperties } from 'vue'\nimport type { TabsPaneContext } from '@element-plus/tokens'\nexport interface Scrollable {\n  next?: boolean\n  prev?: number\n}\n\nexport const tabNavProps = buildProps({\n  panes: {\n    type: definePropType<TabsPaneContext[]>(Array),\n    default: () => mutable([] as const),\n  },\n  currentName: {\n    type: [String, Number],\n    default: '',\n  },\n  editable: Boolean,\n  onTabClick: {\n    type: definePropType<\n      (tab: TabsPaneContext, tabName: string | number, ev: Event) => void\n    >(Function),\n    default: NOOP,\n  },\n  onTabRemove: {\n    type: definePropType<(tab: TabsPaneContext, ev: Event) => void>(Function),\n    default: NOOP,\n  },\n  type: {\n    type: String,\n    values: ['card', 'border-card', ''],\n    default: '',\n  },\n  stretch: Boolean,\n} as const)\n\nexport type TabNavProps = ExtractPropTypes<typeof tabNavProps>\n\nconst COMPONENT_NAME = 'ElTabNav'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: tabNavProps,\n\n  setup(props, { expose }) {\n    const visibility = useDocumentVisibility()\n    const focused = useWindowFocus()\n\n    const rootTabs = inject(tabsRootContextKey)\n    if (!rootTabs)\n      throwError(COMPONENT_NAME, `ElTabNav must be nested inside ElTabs`)\n\n    const scrollable = ref<false | Scrollable>(false)\n    const navOffset = ref(0)\n    const isFocus = ref(false)\n    const focusable = ref(true)\n\n    const navScroll$ = ref<HTMLDivElement>()\n    const nav$ = ref<HTMLDivElement>()\n    const el$ = ref<HTMLDivElement>()\n\n    const sizeName = computed(() =>\n      ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n        ? 'width'\n        : 'height'\n    )\n    const navStyle = computed<CSSProperties>(() => {\n      const dir = sizeName.value === 'width' ? 'X' : 'Y'\n      return {\n        transform: `translate${dir}(-${navOffset.value}px)`,\n      }\n    })\n\n    const scrollPrev = () => {\n      if (!navScroll$.value) return\n\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (!currentOffset) return\n\n      const newOffset =\n        currentOffset > containerSize ? currentOffset - containerSize : 0\n\n      navOffset.value = newOffset\n    }\n\n    const scrollNext = () => {\n      if (!navScroll$.value || !nav$.value) return\n\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (navSize - currentOffset <= containerSize) return\n\n      const newOffset =\n        navSize - currentOffset > containerSize * 2\n          ? currentOffset + containerSize\n          : navSize - containerSize\n\n      navOffset.value = newOffset\n    }\n\n    const scrollToActiveTab = () => {\n      const nav = nav$.value\n      if (!scrollable.value || !el$.value || !navScroll$.value || !nav) return\n\n      const activeTab = el$.value.querySelector('.is-active')\n      if (!activeTab) return\n\n      const navScroll = navScroll$.value\n      const isHorizontal = ['top', 'bottom'].includes(\n        rootTabs.props.tabPosition\n      )\n      const activeTabBounding = activeTab.getBoundingClientRect()\n      const navScrollBounding = navScroll.getBoundingClientRect()\n      const maxOffset = isHorizontal\n        ? nav.offsetWidth - navScrollBounding.width\n        : nav.offsetHeight - navScrollBounding.height\n      const currentOffset = navOffset.value\n      let newOffset = currentOffset\n\n      if (isHorizontal) {\n        if (activeTabBounding.left < navScrollBounding.left) {\n          newOffset =\n            currentOffset - (navScrollBounding.left - activeTabBounding.left)\n        }\n        if (activeTabBounding.right > navScrollBounding.right) {\n          newOffset =\n            currentOffset + activeTabBounding.right - navScrollBounding.right\n        }\n      } else {\n        if (activeTabBounding.top < navScrollBounding.top) {\n          newOffset =\n            currentOffset - (navScrollBounding.top - activeTabBounding.top)\n        }\n        if (activeTabBounding.bottom > navScrollBounding.bottom) {\n          newOffset =\n            currentOffset +\n            (activeTabBounding.bottom - navScrollBounding.bottom)\n        }\n      }\n      newOffset = Math.max(newOffset, 0)\n      navOffset.value = Math.min(newOffset, maxOffset)\n    }\n\n    const update = () => {\n      if (!nav$.value || !navScroll$.value) return\n\n      const navSize = nav$.value[`offset${capitalize(sizeName.value)}`]\n      const containerSize =\n        navScroll$.value[`offset${capitalize(sizeName.value)}`]\n      const currentOffset = navOffset.value\n\n      if (containerSize < navSize) {\n        const currentOffset = navOffset.value\n        scrollable.value = scrollable.value || {}\n        scrollable.value.prev = currentOffset\n        scrollable.value.next = currentOffset + containerSize < navSize\n        if (navSize - currentOffset < containerSize) {\n          navOffset.value = navSize - containerSize\n        }\n      } else {\n        scrollable.value = false\n        if (currentOffset > 0) {\n          navOffset.value = 0\n        }\n      }\n    }\n\n    const changeTab = (e: KeyboardEvent) => {\n      const code = e.code\n\n      const { up, down, left, right } = EVENT_CODE\n      if (![up, down, left, right].includes(code)) return\n\n      // 左右上下键更换tab\n      const tabList = Array.from(\n        (e.currentTarget as HTMLDivElement).querySelectorAll<HTMLDivElement>(\n          '[role=tab]'\n        )\n      )\n      const currentIndex = tabList.indexOf(e.target as HTMLDivElement)\n\n      let nextIndex: number\n      if (code === left || code === up) {\n        // left\n        if (currentIndex === 0) {\n          // first\n          nextIndex = tabList.length - 1\n        } else {\n          nextIndex = currentIndex - 1\n        }\n      } else {\n        // right\n        if (currentIndex < tabList.length - 1) {\n          // not last\n          nextIndex = currentIndex + 1\n        } else {\n          nextIndex = 0\n        }\n      }\n      tabList[nextIndex].focus() // 改变焦点元素\n      tabList[nextIndex].click() // 选中下一个tab\n      setFocus()\n    }\n\n    const setFocus = () => {\n      if (focusable.value) isFocus.value = true\n    }\n    const removeFocus = () => (isFocus.value = false)\n\n    watch(visibility, (visibility) => {\n      if (visibility === 'hidden') {\n        focusable.value = false\n      } else if (visibility === 'visible') {\n        setTimeout(() => (focusable.value = true), 50)\n      }\n    })\n    watch(focused, (focused) => {\n      if (focused) {\n        setTimeout(() => (focusable.value = true), 50)\n      } else {\n        focusable.value = false\n      }\n    })\n\n    useResizeObserver(el$, update)\n\n    onMounted(() => setTimeout(() => scrollToActiveTab(), 0))\n    onUpdated(() => update())\n\n    expose({\n      scrollToActiveTab,\n      removeFocus,\n    })\n\n    return () => {\n      const scrollBtn = scrollable.value\n        ? [\n            h(\n              'span',\n              {\n                class: [\n                  'el-tabs__nav-prev',\n                  scrollable.value.prev ? '' : 'is-disabled',\n                ],\n                onClick: scrollPrev,\n              },\n              [h(ElIcon, {}, { default: () => h(ArrowLeft) })]\n            ),\n            h(\n              'span',\n              {\n                class: [\n                  'el-tabs__nav-next',\n                  scrollable.value.next ? '' : 'is-disabled',\n                ],\n                onClick: scrollNext,\n              },\n              [h(ElIcon, {}, { default: () => h(ArrowRight) })]\n            ),\n          ]\n        : null\n\n      const tabs = props.panes.map((pane, index) => {\n        const tabName = pane.props.name || pane.index || `${index}`\n        const closable = pane.isClosable || props.editable\n        pane.index = `${index}`\n\n        const btnClose = closable\n          ? h(\n              ElIcon,\n              {\n                class: 'is-icon-close',\n                onClick: (ev: MouseEvent) => props.onTabRemove(pane, ev),\n              },\n              { default: () => h(Close) }\n            )\n          : null\n\n        const tabLabelContent =\n          pane.instance.slots.label?.() || pane.props.label\n        const tabindex = pane.active ? 0 : -1\n\n        return h(\n          'div',\n          {\n            class: {\n              'el-tabs__item': true,\n              [`is-${rootTabs.props.tabPosition}`]: true,\n              'is-active': pane.active,\n              'is-disabled': pane.props.disabled,\n              'is-closable': closable,\n              'is-focus': isFocus,\n            },\n            id: `tab-${tabName}`,\n            key: `tab-${tabName}`,\n            'aria-controls': `pane-${tabName}`,\n            role: 'tab',\n            'aria-selected': pane.active,\n            ref: `tab-${tabName}`,\n            tabindex,\n            onFocus: () => setFocus(),\n            onBlur: () => removeFocus(),\n            onClick: (ev: MouseEvent) => {\n              removeFocus()\n              props.onTabClick(pane, tabName, ev)\n            },\n            onKeydown: (ev: KeyboardEvent) => {\n              if (\n                closable &&\n                (ev.code === EVENT_CODE.delete ||\n                  ev.code === EVENT_CODE.backspace)\n              ) {\n                props.onTabRemove(pane, ev)\n              }\n            },\n          },\n          [tabLabelContent, btnClose]\n        )\n      })\n\n      return h(\n        'div',\n        {\n          ref: el$,\n          class: [\n            'el-tabs__nav-wrap',\n            scrollable.value ? 'is-scrollable' : '',\n            `is-${rootTabs.props.tabPosition}`,\n          ],\n        },\n        [\n          scrollBtn,\n          h(\n            'div',\n            {\n              class: 'el-tabs__nav-scroll',\n              ref: navScroll$,\n            },\n            [\n              h(\n                'div',\n                {\n                  class: [\n                    'el-tabs__nav',\n                    `is-${rootTabs.props.tabPosition}`,\n                    props.stretch &&\n                    ['top', 'bottom'].includes(rootTabs.props.tabPosition)\n                      ? 'is-stretch'\n                      : '',\n                  ],\n                  ref: nav$,\n                  style: navStyle.value,\n                  role: 'tablist',\n                  onKeydown: changeTab,\n                },\n                [\n                  !props.type\n                    ? h(TabBar, {\n                        tabs: [...props.panes],\n                      })\n                    : null,\n                  tabs,\n                ]\n              ),\n            ]\n          ),\n        ]\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}