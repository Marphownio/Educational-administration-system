{"ast":null,"code":"import { defineComponent, getCurrentInstance, inject, ref, computed, watch, reactive, markRaw, withDirectives, openBlock, createElementBlock, renderSlot, vShow, createCommentVNode } from 'vue';\nimport { eagerComputed } from '@vueuse/core';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport { tabPaneProps } from './tab-pane.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { tabsRootContextKey } from '../../../tokens/tabs.mjs';\nimport { throwError } from '../../../utils/error.mjs';\nconst COMPONENT_NAME = \"ElTabPane\";\n\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  props: tabPaneProps,\n\n  setup(props) {\n    const instance = getCurrentInstance();\n    const tabsRoot = inject(tabsRootContextKey);\n    if (!tabsRoot) throwError(COMPONENT_NAME, `must use with ElTabs`);\n    const index = ref();\n    const loaded = ref(false);\n    const isClosable = computed(() => props.closable || tabsRoot.props.closable);\n    const active = eagerComputed(() => tabsRoot.currentName.value === (props.name || index.value));\n    const paneName = computed(() => props.name || index.value);\n    const shouldBeRender = eagerComputed(() => !props.lazy || loaded.value || active.value);\n    watch(active, val => {\n      if (val) loaded.value = true;\n    });\n    tabsRoot.updatePaneState(reactive({\n      uid: instance.uid,\n      instance: markRaw(instance),\n      props,\n      paneName,\n      active,\n      index,\n      isClosable\n    }));\n    return {\n      active,\n      paneName,\n      shouldBeRender\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"id\", \"aria-hidden\", \"aria-labelledby\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _ctx.shouldBeRender ? withDirectives((openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    id: `pane-${_ctx.paneName}`,\n    class: \"el-tab-pane\",\n    role: \"tabpanel\",\n    \"aria-hidden\": !_ctx.active,\n    \"aria-labelledby\": `tab-${_ctx.paneName}`\n  }, [renderSlot(_ctx.$slots, \"default\")], 8, _hoisted_1)), [[vShow, _ctx.active]]) : createCommentVNode(\"v-if\", true);\n}\n\nvar TabPane = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { TabPane as default };","map":{"version":3,"mappings":";;;;;;;;AA6BA,MAAMA,cAAiB,cAAvB;;AAEA,MAAKC,YAAaC,eAAa;AAC7BC,MAAM,gBADuB;AAE7BC,OAAO,cAFsB;;AAG7BC,QAAMD,KAAN,EAAa;AACX,UAAME,QAAW,uBAAjB;AACA,UAAMC,WAAWC,MAAO,oBAAxB;AACA,QAAI,CAACD,QAAL,EAAeE,WAAWT,cAAX,EAA2B,sBAA3B;AAEf,UAAMU,KAAQ,QAAd;AACA,UAAMC,SAASC,GAAI,OAAnB;AACA,UAAMC,aAAaC,QAAS,OAAMV,KAAM,SAAN,IAAkBG,SAASH,KAAT,CAAeW,QAAvC,CAA5B;AACM,mBAASC,cACb,MAAMT,SAASU,WAAT,CAAqBC,KAArB,MAAgCd,MAAMD,IAAN,IAAcO,KAAM,MAApD,CADO,CAAT;AAGN,UAAMS,QAAW,YAAS,MAAMf,MAAMD,IAAN,IAAcO,KAAM,MAAnC,CAAjB;AACM,2BAAiBM,cACrB,MAAM,CAACZ,MAAMgB,IAAP,IAAeT,OAAOO,KAAtB,IAA+BG,MAAO,MADvB,CAAjB;AAIAC,kBAASC,GAAD,IAAS;AACjB,eAAKZ,OAAOO,KAAP,GAAe,IAAf;AAAe,KADpB;AAINX,aAASiB,eAAT,CACEC,QAAS;AACPC,WAAKpB,QAAS,IADP;AAEPA,gBAAUqB,OAAQ,UAFX;AAGPvB,WAHO;AAIPe,cAJO;AAKPE,YALO;AAMPX,WANO;AAOPG;AAPO,MADX;AAYO;AACLQ,YADK;AAELF,cAFK;AAGLS;AAHK;AAGL;;AAtCyB,EAA/B;;;;;AA7BU,4DADRC,kBAUM;AAAAC;AAPHC,QAAY,uBAOT;AANJC,SAAM,eAMF;AALJC,QAAK,YAKD;AAJH,mBAAW,CAAGC,WAIX;AAHH,uBAAwB;AAGrB,KAHqB,CAEzBC,UAAa,wBAFY,CAGrB,EADS,CACT,EADSC,UACT,CATE,GAQO,CAPL,oBAOK,CARP,IACEC,gCADF","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","props","setup","instance","tabsRoot","inject","throwError","index","loaded","ref","isClosable","computed","closable","eagerComputed","currentName","value","paneName","lazy","active","watch","val","updatePaneState","reactive","uid","markRaw","shouldBeRender","_createElementBlock","key","id","class","role","_ctx","_renderSlot","_hoisted_1","_createCommentVNode"],"sources":["../../../../../../packages/components/tabs/src/tab-pane.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"shouldBeRender\"\n    v-show=\"active\"\n    :id=\"`pane-${paneName}`\"\n    class=\"el-tab-pane\"\n    role=\"tabpanel\"\n    :aria-hidden=\"!active\"\n    :aria-labelledby=\"`tab-${paneName}`\"\n  >\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  computed,\n  inject,\n  getCurrentInstance,\n  watch,\n  markRaw,\n  reactive,\n} from 'vue'\nimport { eagerComputed } from '@vueuse/core'\nimport { tabsRootContextKey } from '@element-plus/tokens'\nimport { throwError } from '@element-plus/utils'\nimport { tabPaneProps } from './tab-pane'\n\nconst COMPONENT_NAME = 'ElTabPane'\n\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  props: tabPaneProps,\n  setup(props) {\n    const instance = getCurrentInstance()!\n    const tabsRoot = inject(tabsRootContextKey)\n    if (!tabsRoot) throwError(COMPONENT_NAME, `must use with ElTabs`)\n\n    const index = ref<string>()\n    const loaded = ref(false)\n    const isClosable = computed(() => props.closable || tabsRoot.props.closable)\n    const active = eagerComputed(\n      () => tabsRoot.currentName.value === (props.name || index.value)\n    )\n    const paneName = computed(() => props.name || index.value)\n    const shouldBeRender = eagerComputed(\n      () => !props.lazy || loaded.value || active.value\n    )\n\n    watch(active, (val) => {\n      if (val) loaded.value = true\n    })\n\n    tabsRoot.updatePaneState(\n      reactive({\n        uid: instance.uid,\n        instance: markRaw(instance),\n        props,\n        paneName,\n        active,\n        index,\n        isClosable,\n      })\n    )\n\n    return {\n      active,\n      paneName,\n      shouldBeRender,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}