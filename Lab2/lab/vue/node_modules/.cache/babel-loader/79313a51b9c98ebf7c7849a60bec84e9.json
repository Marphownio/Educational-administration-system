{"ast":null,"code":"import baseIteratee from './_baseIteratee.js';\nimport basePullAt from './_basePullAt.js';\n/**\r\n * Removes all elements from `array` that `predicate` returns truthy for\r\n * and returns an array of the removed elements. The predicate is invoked\r\n * with three arguments: (value, index, array).\r\n *\r\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\r\n * to pull elements from an array by value.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Array\r\n * @param {Array} array The array to modify.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the new array of removed elements.\r\n * @example\r\n *\r\n * var array = [1, 2, 3, 4];\r\n * var evens = _.remove(array, function(n) {\r\n *   return n % 2 == 0;\r\n * });\r\n *\r\n * console.log(array);\r\n * // => [1, 3]\r\n *\r\n * console.log(evens);\r\n * // => [2, 4]\r\n */\n\nfunction remove(array, predicate) {\n  var result = [];\n\n  if (!(array && array.length)) {\n    return result;\n  }\n\n  var index = -1,\n      indexes = [],\n      length = array.length;\n  predicate = baseIteratee(predicate, 3);\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n\n  basePullAt(array, indexes);\n  return result;\n}\n\nexport default remove;","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab2/lab/vue/node_modules/lodash-es/remove.js"],"names":["baseIteratee","basePullAt","remove","array","predicate","result","length","index","indexes","value","push"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,SAAvB,EAAkC;AAChC,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAI,EAAEF,KAAK,IAAIA,KAAK,CAACG,MAAjB,CAAJ,EAA8B;AAC5B,WAAOD,MAAP;AACD;;AACD,MAAIE,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,OAAO,GAAG,EADd;AAAA,MAEIF,MAAM,GAAGH,KAAK,CAACG,MAFnB;AAIAF,EAAAA,SAAS,GAAGJ,YAAY,CAACI,SAAD,EAAY,CAAZ,CAAxB;;AACA,SAAO,EAAEG,KAAF,GAAUD,MAAjB,EAAyB;AACvB,QAAIG,KAAK,GAAGN,KAAK,CAACI,KAAD,CAAjB;;AACA,QAAIH,SAAS,CAACK,KAAD,EAAQF,KAAR,EAAeJ,KAAf,CAAb,EAAoC;AAClCE,MAAAA,MAAM,CAACK,IAAP,CAAYD,KAAZ;AACAD,MAAAA,OAAO,CAACE,IAAR,CAAaH,KAAb;AACD;AACF;;AACDN,EAAAA,UAAU,CAACE,KAAD,EAAQK,OAAR,CAAV;AACA,SAAOH,MAAP;AACD;;AAED,eAAeH,MAAf","sourcesContent":["import baseIteratee from './_baseIteratee.js';\r\nimport basePullAt from './_basePullAt.js';\r\n\r\n/**\r\n * Removes all elements from `array` that `predicate` returns truthy for\r\n * and returns an array of the removed elements. The predicate is invoked\r\n * with three arguments: (value, index, array).\r\n *\r\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\r\n * to pull elements from an array by value.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 2.0.0\r\n * @category Array\r\n * @param {Array} array The array to modify.\r\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\r\n * @returns {Array} Returns the new array of removed elements.\r\n * @example\r\n *\r\n * var array = [1, 2, 3, 4];\r\n * var evens = _.remove(array, function(n) {\r\n *   return n % 2 == 0;\r\n * });\r\n *\r\n * console.log(array);\r\n * // => [1, 3]\r\n *\r\n * console.log(evens);\r\n * // => [2, 4]\r\n */\r\nfunction remove(array, predicate) {\r\n  var result = [];\r\n  if (!(array && array.length)) {\r\n    return result;\r\n  }\r\n  var index = -1,\r\n      indexes = [],\r\n      length = array.length;\r\n\r\n  predicate = baseIteratee(predicate, 3);\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    if (predicate(value, index, array)) {\r\n      result.push(value);\r\n      indexes.push(index);\r\n    }\r\n  }\r\n  basePullAt(array, indexes);\r\n  return result;\r\n}\r\n\r\nexport default remove;\r\n"]},"metadata":{},"sourceType":"module"}