{"ast":null,"code":"import baseFlatten from './_baseFlatten.js';\nimport toInteger from './toInteger.js';\n/**\r\n * Recursively flatten `array` up to `depth` times.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.4.0\r\n * @category Array\r\n * @param {Array} array The array to flatten.\r\n * @param {number} [depth=1] The maximum recursion depth.\r\n * @returns {Array} Returns the new flattened array.\r\n * @example\r\n *\r\n * var array = [1, [2, [3, [4]], 5]];\r\n *\r\n * _.flattenDepth(array, 1);\r\n * // => [1, 2, [3, [4]], 5]\r\n *\r\n * _.flattenDepth(array, 2);\r\n * // => [1, 2, 3, [4], 5]\r\n */\n\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return [];\n  }\n\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nexport default flattenDepth;","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab2/lab/vue/node_modules/lodash-es/flattenDepth.js"],"names":["baseFlatten","toInteger","flattenDepth","array","depth","length","undefined"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoC;AAClC,MAAIC,MAAM,GAAGF,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACE,MAAvC;;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,EAAP;AACD;;AACDD,EAAAA,KAAK,GAAGA,KAAK,KAAKE,SAAV,GAAsB,CAAtB,GAA0BL,SAAS,CAACG,KAAD,CAA3C;AACA,SAAOJ,WAAW,CAACG,KAAD,EAAQC,KAAR,CAAlB;AACD;;AAED,eAAeF,YAAf","sourcesContent":["import baseFlatten from './_baseFlatten.js';\r\nimport toInteger from './toInteger.js';\r\n\r\n/**\r\n * Recursively flatten `array` up to `depth` times.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.4.0\r\n * @category Array\r\n * @param {Array} array The array to flatten.\r\n * @param {number} [depth=1] The maximum recursion depth.\r\n * @returns {Array} Returns the new flattened array.\r\n * @example\r\n *\r\n * var array = [1, [2, [3, [4]], 5]];\r\n *\r\n * _.flattenDepth(array, 1);\r\n * // => [1, 2, [3, [4]], 5]\r\n *\r\n * _.flattenDepth(array, 2);\r\n * // => [1, 2, 3, [4], 5]\r\n */\r\nfunction flattenDepth(array, depth) {\r\n  var length = array == null ? 0 : array.length;\r\n  if (!length) {\r\n    return [];\r\n  }\r\n  depth = depth === undefined ? 1 : toInteger(depth);\r\n  return baseFlatten(array, depth);\r\n}\r\n\r\nexport default flattenDepth;\r\n"]},"metadata":{},"sourceType":"module"}