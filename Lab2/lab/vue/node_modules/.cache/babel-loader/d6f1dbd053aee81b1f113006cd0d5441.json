{"ast":null,"code":"import baseLodash from './_baseLodash.js';\nimport wrapperClone from './_wrapperClone.js';\n/**\r\n * Creates a clone of the chain sequence planting `value` as the wrapped value.\r\n *\r\n * @name plant\r\n * @memberOf _\r\n * @since 3.2.0\r\n * @category Seq\r\n * @param {*} value The value to plant.\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * var wrapped = _([1, 2]).map(square);\r\n * var other = wrapped.plant([3, 4]);\r\n *\r\n * other.value();\r\n * // => [9, 16]\r\n *\r\n * wrapped.value();\r\n * // => [1, 4]\r\n */\n\nfunction wrapperPlant(value) {\n  var result,\n      parent = this;\n\n  while (parent instanceof baseLodash) {\n    var clone = wrapperClone(parent);\n    clone.__index__ = 0;\n    clone.__values__ = undefined;\n\n    if (result) {\n      previous.__wrapped__ = clone;\n    } else {\n      result = clone;\n    }\n\n    var previous = clone;\n    parent = parent.__wrapped__;\n  }\n\n  previous.__wrapped__ = value;\n  return result;\n}\n\nexport default wrapperPlant;","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab2/lab/vue/node_modules/lodash-es/plant.js"],"names":["baseLodash","wrapperClone","wrapperPlant","value","result","parent","clone","__index__","__values__","undefined","previous","__wrapped__"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAIC,MAAJ;AAAA,MACIC,MAAM,GAAG,IADb;;AAGA,SAAOA,MAAM,YAAYL,UAAzB,EAAqC;AACnC,QAAIM,KAAK,GAAGL,YAAY,CAACI,MAAD,CAAxB;AACAC,IAAAA,KAAK,CAACC,SAAN,GAAkB,CAAlB;AACAD,IAAAA,KAAK,CAACE,UAAN,GAAmBC,SAAnB;;AACA,QAAIL,MAAJ,EAAY;AACVM,MAAAA,QAAQ,CAACC,WAAT,GAAuBL,KAAvB;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,GAAGE,KAAT;AACD;;AACD,QAAII,QAAQ,GAAGJ,KAAf;AACAD,IAAAA,MAAM,GAAGA,MAAM,CAACM,WAAhB;AACD;;AACDD,EAAAA,QAAQ,CAACC,WAAT,GAAuBR,KAAvB;AACA,SAAOC,MAAP;AACD;;AAED,eAAeF,YAAf","sourcesContent":["import baseLodash from './_baseLodash.js';\r\nimport wrapperClone from './_wrapperClone.js';\r\n\r\n/**\r\n * Creates a clone of the chain sequence planting `value` as the wrapped value.\r\n *\r\n * @name plant\r\n * @memberOf _\r\n * @since 3.2.0\r\n * @category Seq\r\n * @param {*} value The value to plant.\r\n * @returns {Object} Returns the new `lodash` wrapper instance.\r\n * @example\r\n *\r\n * function square(n) {\r\n *   return n * n;\r\n * }\r\n *\r\n * var wrapped = _([1, 2]).map(square);\r\n * var other = wrapped.plant([3, 4]);\r\n *\r\n * other.value();\r\n * // => [9, 16]\r\n *\r\n * wrapped.value();\r\n * // => [1, 4]\r\n */\r\nfunction wrapperPlant(value) {\r\n  var result,\r\n      parent = this;\r\n\r\n  while (parent instanceof baseLodash) {\r\n    var clone = wrapperClone(parent);\r\n    clone.__index__ = 0;\r\n    clone.__values__ = undefined;\r\n    if (result) {\r\n      previous.__wrapped__ = clone;\r\n    } else {\r\n      result = clone;\r\n    }\r\n    var previous = clone;\r\n    parent = parent.__wrapped__;\r\n  }\r\n  previous.__wrapped__ = value;\r\n  return result;\r\n}\r\n\r\nexport default wrapperPlant;\r\n"]},"metadata":{},"sourceType":"module"}