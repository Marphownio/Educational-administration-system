{"ast":null,"code":"import baseIteratee from './_baseIteratee.js';\nimport baseSum from './_baseSum.js';\n/**\r\n * This method is like `_.sum` except that it accepts `iteratee` which is\r\n * invoked for each element in `array` to generate the value to be summed.\r\n * The iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {number} Returns the sum.\r\n * @example\r\n *\r\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\r\n *\r\n * _.sumBy(objects, function(o) { return o.n; });\r\n * // => 20\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.sumBy(objects, 'n');\r\n * // => 20\r\n */\n\nfunction sumBy(array, iteratee) {\n  return array && array.length ? baseSum(array, baseIteratee(iteratee, 2)) : 0;\n}\n\nexport default sumBy;","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab2/lab/vue/node_modules/lodash-es/sumBy.js"],"names":["baseIteratee","baseSum","sumBy","array","iteratee","length"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,oBAAzB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,SAAQD,KAAK,IAAIA,KAAK,CAACE,MAAhB,GACHJ,OAAO,CAACE,KAAD,EAAQH,YAAY,CAACI,QAAD,EAAW,CAAX,CAApB,CADJ,GAEH,CAFJ;AAGD;;AAED,eAAeF,KAAf","sourcesContent":["import baseIteratee from './_baseIteratee.js';\r\nimport baseSum from './_baseSum.js';\r\n\r\n/**\r\n * This method is like `_.sum` except that it accepts `iteratee` which is\r\n * invoked for each element in `array` to generate the value to be summed.\r\n * The iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Math\r\n * @param {Array} array The array to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\r\n * @returns {number} Returns the sum.\r\n * @example\r\n *\r\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\r\n *\r\n * _.sumBy(objects, function(o) { return o.n; });\r\n * // => 20\r\n *\r\n * // The `_.property` iteratee shorthand.\r\n * _.sumBy(objects, 'n');\r\n * // => 20\r\n */\r\nfunction sumBy(array, iteratee) {\r\n  return (array && array.length)\r\n    ? baseSum(array, baseIteratee(iteratee, 2))\r\n    : 0;\r\n}\r\n\r\nexport default sumBy;\r\n"]},"metadata":{},"sourceType":"module"}