{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, normalizeStyle, renderSlot, createCommentVNode } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { dividerProps } from './divider.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElDivider\",\n  props: dividerProps,\n\n  setup(props) {\n    const ns = useNamespace(\"divider\");\n    const dividerStyle = computed(() => {\n      return {\n        \"--el-border-style\": props.borderStyle\n      };\n    });\n    return {\n      ns,\n      dividerStyle\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.m(_ctx.direction)]),\n    style: normalizeStyle(_ctx.dividerStyle)\n  }, [_ctx.$slots.default && _ctx.direction !== \"vertical\" ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass([_ctx.ns.e(\"text\"), _ctx.ns.is(_ctx.contentPosition)])\n  }, [renderSlot(_ctx.$slots, \"default\")], 2)) : createCommentVNode(\"v-if\", true)], 6);\n}\n\nvar Divider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Divider as default };","map":{"version":3,"mappings":";;;;;;AAkBA,MAAKA,YAAaC,eAAa;AAC7BC,MAAM,aADuB;AAE7BC,OAAO,cAFsB;;AAI7BC,QAAMD,KAAN,EAAa;AACX,UAAME,KAAKC,YAAa,WAAxB;AAEM,yBAAeC,SAAS,MAAM;AAC3B;AACL,6BAAqBJ,KAAM;AADtB;AACsB,KAFV,CAAf;AAMC;AACLE,QADK;AAELG;AAFK;AAEL;;AAfyB,EAA/B;;;sBAjBEC,kBAOM;AAPAC,SAAK,kBAAGC,IAAG,GAAH,CAAGC,CAAH,EAAH,EAAWD,QAAGE,CAAH,CAAKF,cAAL,CAAX,EAOL;AAPmCG,WAAKC,cAAE;AAO1C,KAP0C,CAEtCJ,IAAO,OAAP,CAAOK,OAAP,IAAkBL,IAAS,UAAT,KAAS,UAA3B,IAA2BM,aADnCR,kBAKM;AAAAS;AAHHR,WAAKS,cAAG,UAAGC,CAAH,CAAI,MAAJ,GAAcT,QAAGU,EAAH,CAAMV,oBAAN,CAAd;AAGL,KAHyB,CAE7BW,UAAa,wBAFgB,CAGzB,EADS,CACT,CAJE,IAGOC,gCAL+B,CAO1C","names":["_sfc_main","defineComponent","name","props","setup","ns","useNamespace","computed","dividerStyle","_createElementBlock","class","_ctx","b","m","style","_normalizeStyle","default","_openBlock","key","_normalizeClass","e","is","_renderSlot","_createCommentVNode"],"sources":["../../../../../../packages/components/divider/src/divider.vue"],"sourcesContent":["<template>\n  <div :class=\"[ns.b(), ns.m(direction)]\" :style=\"dividerStyle\">\n    <div\n      v-if=\"$slots.default && direction !== 'vertical'\"\n      :class=\"[ns.e('text'), ns.is(contentPosition)]\"\n    >\n      <slot></slot>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport { dividerProps } from './divider'\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElDivider',\n  props: dividerProps,\n\n  setup(props) {\n    const ns = useNamespace('divider')\n\n    const dividerStyle = computed(() => {\n      return {\n        '--el-border-style': props.borderStyle,\n      } as CSSProperties\n    })\n\n    return {\n      ns,\n      dividerStyle,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}