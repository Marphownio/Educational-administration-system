{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport LodashWrapper from './_LodashWrapper.js';\nimport flatRest from './_flatRest.js';\nimport getData from './_getData.js';\nimport getFuncName from './_getFuncName.js';\nimport isArray from './isArray.js';\nimport isLaziable from './_isLaziable.js';\n/** Error message constants. */\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/** Used to compose bitmasks for function metadata. */\n\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n/**\r\n * Creates a `_.flow` or `_.flowRight` function.\r\n *\r\n * @private\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new flow function.\r\n */\n\nfunction createFlow(fromRight) {\n  return flatRest(function (funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n\n    while (index--) {\n      var func = funcs[index];\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n\n    index = wrapper ? index : length;\n\n    while (++index < length) {\n      func = funcs[index];\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);\n      }\n    }\n\n    return function () {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n\n      return result;\n    };\n  });\n}\n\nexport default createFlow;","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab2/lab/vue/node_modules/lodash-es/_createFlow.js"],"names":["LodashWrapper","flatRest","getData","getFuncName","isArray","isLaziable","FUNC_ERROR_TEXT","WRAP_CURRY_FLAG","WRAP_PARTIAL_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","createFlow","fromRight","funcs","length","index","prereq","prototype","thru","reverse","func","TypeError","wrapper","funcName","data","undefined","apply","args","arguments","value","plant","result","call"],"mappings":"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","sourcesContent":["import LodashWrapper from './_LodashWrapper.js';\r\nimport flatRest from './_flatRest.js';\r\nimport getData from './_getData.js';\r\nimport getFuncName from './_getFuncName.js';\r\nimport isArray from './isArray.js';\r\nimport isLaziable from './_isLaziable.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/** Used to compose bitmasks for function metadata. */\r\nvar WRAP_CURRY_FLAG = 8,\r\n    WRAP_PARTIAL_FLAG = 32,\r\n    WRAP_ARY_FLAG = 128,\r\n    WRAP_REARG_FLAG = 256;\r\n\r\n/**\r\n * Creates a `_.flow` or `_.flowRight` function.\r\n *\r\n * @private\r\n * @param {boolean} [fromRight] Specify iterating from right to left.\r\n * @returns {Function} Returns the new flow function.\r\n */\r\nfunction createFlow(fromRight) {\r\n  return flatRest(function(funcs) {\r\n    var length = funcs.length,\r\n        index = length,\r\n        prereq = LodashWrapper.prototype.thru;\r\n\r\n    if (fromRight) {\r\n      funcs.reverse();\r\n    }\r\n    while (index--) {\r\n      var func = funcs[index];\r\n      if (typeof func != 'function') {\r\n        throw new TypeError(FUNC_ERROR_TEXT);\r\n      }\r\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\r\n        var wrapper = new LodashWrapper([], true);\r\n      }\r\n    }\r\n    index = wrapper ? index : length;\r\n    while (++index < length) {\r\n      func = funcs[index];\r\n\r\n      var funcName = getFuncName(func),\r\n          data = funcName == 'wrapper' ? getData(func) : undefined;\r\n\r\n      if (data && isLaziable(data[0]) &&\r\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\r\n            !data[4].length && data[9] == 1\r\n          ) {\r\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\r\n      } else {\r\n        wrapper = (func.length == 1 && isLaziable(func))\r\n          ? wrapper[funcName]()\r\n          : wrapper.thru(func);\r\n      }\r\n    }\r\n    return function() {\r\n      var args = arguments,\r\n          value = args[0];\r\n\r\n      if (wrapper && args.length == 1 && isArray(value)) {\r\n        return wrapper.plant(value).value();\r\n      }\r\n      var index = 0,\r\n          result = length ? funcs[index].apply(this, args) : value;\r\n\r\n      while (++index < length) {\r\n        result = funcs[index].call(this, result);\r\n      }\r\n      return result;\r\n    };\r\n  });\r\n}\r\n\r\nexport default createFlow;\r\n"]},"metadata":{},"sourceType":"module"}