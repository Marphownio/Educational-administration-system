{"ast":null,"code":"import { defineComponent, computed, ref, nextTick, watch, onMounted, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, renderSlot, createElementVNode, toDisplayString, mergeProps, Fragment, createBlock, withCtx, createCommentVNode } from 'vue';\nimport { isString } from '@vue/shared';\nimport { isBoolean, isClient, useThrottleFn, useEventListener } from '@vueuse/core';\nimport '../../../hooks/index.mjs';\nimport { ElImageViewer } from '../../image-viewer/index.mjs';\nimport '../../../utils/index.mjs';\nimport { imageProps, imageEmits } from './image.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useDeprecated } from '../../../hooks/use-deprecated/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useAttrs } from '../../../hooks/use-attrs/index.mjs';\nimport { isInContainer } from '../../../utils/dom/position.mjs';\nimport { isElement } from '../../../utils/types.mjs';\nimport { getScrollContainer } from '../../../utils/dom/scroll.mjs';\nlet prevOverflow = \"\";\n\nconst _sfc_main = defineComponent({\n  name: \"ElImage\",\n  components: {\n    ImageViewer: ElImageViewer\n  },\n  inheritAttrs: false,\n  props: imageProps,\n  emits: imageEmits,\n\n  setup(props, {\n    emit,\n    attrs: rawAttrs\n  }) {\n    useDeprecated({\n      scope: \"el-image\",\n      from: \"append-to-body\",\n      replacement: \"preview-teleported\",\n      version: \"2.2.0\",\n      ref: \"https://element-plus.org/en-US/component/image.html#image-attributess\"\n    }, computed(() => isBoolean(props.appendToBody)));\n    const {\n      t\n    } = useLocale();\n    const ns = useNamespace(\"image\");\n    const attrs = useAttrs();\n    const hasLoadError = ref(false);\n    const loading = ref(true);\n    const imgWidth = ref(0);\n    const imgHeight = ref(0);\n    const showViewer = ref(false);\n    const container = ref();\n\n    const _scrollContainer = ref();\n\n    let stopScrollListener;\n    let stopWheelListener;\n    const containerStyle = computed(() => rawAttrs.style);\n    const imageStyle = computed(() => {\n      const {\n        fit\n      } = props;\n\n      if (isClient && fit) {\n        return {\n          objectFit: fit\n        };\n      }\n\n      return {};\n    });\n    const preview = computed(() => {\n      const {\n        previewSrcList\n      } = props;\n      return Array.isArray(previewSrcList) && previewSrcList.length > 0;\n    });\n    const teleported = computed(() => {\n      return props.appendToBody || props.previewTeleported;\n    });\n    const imageIndex = computed(() => {\n      const {\n        previewSrcList,\n        initialIndex\n      } = props;\n      let previewIndex = initialIndex;\n\n      if (initialIndex > previewSrcList.length - 1) {\n        previewIndex = 0;\n      }\n\n      return previewIndex;\n    });\n\n    const loadImage = () => {\n      if (!isClient) return;\n      loading.value = true;\n      hasLoadError.value = false;\n      const img = new Image();\n      const currentImageSrc = props.src;\n      img.addEventListener(\"load\", e => {\n        if (currentImageSrc !== props.src) {\n          return;\n        }\n\n        handleLoad(e, img);\n      });\n      img.addEventListener(\"error\", e => {\n        if (currentImageSrc !== props.src) {\n          return;\n        }\n\n        handleError(e);\n      });\n      Object.entries(attrs.value).forEach(([key, value]) => {\n        if (key.toLowerCase() === \"onload\") return;\n        img.setAttribute(key, value);\n      });\n      img.src = currentImageSrc;\n    };\n\n    function handleLoad(e, img) {\n      imgWidth.value = img.width;\n      imgHeight.value = img.height;\n      loading.value = false;\n      hasLoadError.value = false;\n    }\n\n    function handleError(event) {\n      loading.value = false;\n      hasLoadError.value = true;\n      emit(\"error\", event);\n    }\n\n    function handleLazyLoad() {\n      if (isInContainer(container.value, _scrollContainer.value)) {\n        loadImage();\n        removeLazyLoadListener();\n      }\n    }\n\n    const lazyLoadHandler = useThrottleFn(handleLazyLoad, 200);\n\n    async function addLazyLoadListener() {\n      var _a;\n\n      if (!isClient) return;\n      await nextTick();\n      const {\n        scrollContainer\n      } = props;\n\n      if (isElement(scrollContainer)) {\n        _scrollContainer.value = scrollContainer;\n      } else if (isString(scrollContainer) && scrollContainer !== \"\") {\n        _scrollContainer.value = (_a = document.querySelector(scrollContainer)) != null ? _a : void 0;\n      } else if (container.value) {\n        _scrollContainer.value = getScrollContainer(container.value);\n      }\n\n      if (_scrollContainer.value) {\n        stopScrollListener = useEventListener(_scrollContainer, \"scroll\", lazyLoadHandler);\n        setTimeout(() => handleLazyLoad(), 100);\n      }\n    }\n\n    function removeLazyLoadListener() {\n      if (!isClient || !_scrollContainer.value || !lazyLoadHandler) return;\n      stopScrollListener();\n      _scrollContainer.value = void 0;\n    }\n\n    function wheelHandler(e) {\n      if (!e.ctrlKey) return;\n\n      if (e.deltaY < 0) {\n        e.preventDefault();\n        return false;\n      } else if (e.deltaY > 0) {\n        e.preventDefault();\n        return false;\n      }\n    }\n\n    function clickHandler() {\n      if (!preview.value) return;\n      stopWheelListener = useEventListener(\"wheel\", wheelHandler, {\n        passive: false\n      });\n      prevOverflow = document.body.style.overflow;\n      document.body.style.overflow = \"hidden\";\n      showViewer.value = true;\n    }\n\n    function closeViewer() {\n      stopWheelListener == null ? void 0 : stopWheelListener();\n      document.body.style.overflow = prevOverflow;\n      showViewer.value = false;\n      emit(\"close\");\n    }\n\n    function switchViewer(val) {\n      emit(\"switch\", val);\n    }\n\n    watch(() => props.src, () => {\n      if (props.lazy) {\n        loading.value = true;\n        hasLoadError.value = false;\n        removeLazyLoadListener();\n        addLazyLoadListener();\n      } else {\n        loadImage();\n      }\n    });\n    onMounted(() => {\n      if (props.lazy) {\n        addLazyLoadListener();\n      } else {\n        loadImage();\n      }\n    });\n    return {\n      attrs,\n      loading,\n      hasLoadError,\n      showViewer,\n      containerStyle,\n      imageStyle,\n      preview,\n      imageIndex,\n      container,\n      ns,\n      teleported,\n      clickHandler,\n      closeViewer,\n      switchViewer,\n      t\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"src\"];\nconst _hoisted_2 = {\n  key: 0\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_image_viewer = resolveComponent(\"image-viewer\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"container\",\n    class: normalizeClass([_ctx.ns.b(), _ctx.$attrs.class]),\n    style: normalizeStyle(_ctx.containerStyle)\n  }, [_ctx.loading ? renderSlot(_ctx.$slots, \"placeholder\", {\n    key: 0\n  }, () => [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"placeholder\"))\n  }, null, 2)]) : _ctx.hasLoadError ? renderSlot(_ctx.$slots, \"error\", {\n    key: 1\n  }, () => [createElementVNode(\"div\", {\n    class: normalizeClass(_ctx.ns.e(\"error\"))\n  }, toDisplayString(_ctx.t(\"el.image.error\")), 3)]) : (openBlock(), createElementBlock(\"img\", mergeProps({\n    key: 2\n  }, _ctx.attrs, {\n    src: _ctx.src,\n    style: _ctx.imageStyle,\n    class: [_ctx.ns.e(\"inner\"), _ctx.preview ? _ctx.ns.e(\"preview\") : \"\"],\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.clickHandler && _ctx.clickHandler(...args))\n  }), null, 16, _hoisted_1)), _ctx.preview ? (openBlock(), createElementBlock(Fragment, {\n    key: 3\n  }, [_ctx.showViewer ? (openBlock(), createBlock(_component_image_viewer, {\n    key: 0,\n    \"z-index\": _ctx.zIndex,\n    \"initial-index\": _ctx.imageIndex,\n    \"url-list\": _ctx.previewSrcList,\n    \"hide-on-click-modal\": _ctx.hideOnClickModal,\n    teleported: _ctx.teleported,\n    onClose: _ctx.closeViewer,\n    onSwitch: _ctx.switchViewer\n  }, {\n    default: withCtx(() => [_ctx.$slots.viewer ? (openBlock(), createElementBlock(\"div\", _hoisted_2, [renderSlot(_ctx.$slots, \"viewer\")])) : createCommentVNode(\"v-if\", true)]),\n    _: 3\n  }, 8, [\"z-index\", \"initial-index\", \"url-list\", \"hide-on-click-modal\", \"teleported\", \"onClose\", \"onSwitch\"])) : createCommentVNode(\"v-if\", true)], 2112)) : createCommentVNode(\"v-if\", true)], 6);\n}\n\nvar Image$1 = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Image$1 as default };","map":{"version":3,"mappings":"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","names":["prevOverflow","_sfc_main","defineComponent","name","components","ImageViewer","inheritAttrs","props","emits","setup","emit","attrs","rawAttrs","useDeprecated","scope","from","replacement","version","ref","computed","isBoolean","t","useLocale","ns","useNamespace","hasLoadError","loading","imgWidth","imgHeight","showViewer","container","_scrollContainer","fit","isClient","objectFit","previewSrcList","Array","length","appendToBody","initialIndex","previewIndex","loadImage","value","img","Image","currentImageSrc","e","src","handleLoad","handleError","Object","entries","forEach","key","toLowerCase","setAttribute","event","isInContainer","removeLazyLoadListener","useThrottleFn","handleLazyLoad","_a","nextTick","scrollContainer","stopScrollListener","setTimeout","wheelHandler","clickHandler","stopWheelListener","passive","style","overflow","document","switchViewer","val","watch","lazy","addLazyLoadListener","onMounted","containerStyle","imageStyle","preview","imageIndex","teleported","closeViewer","_openBlock","class","_normalizeClass","_ctx","_renderSlot","_createElementVNode","_toDisplayString","onClick","_hoisted_1","onClose","onSwitch","default","viewer","_withCtx"],"sources":["../../../../../../packages/components/image/src/image.vue"],"sourcesContent":["<template>\n  <div ref=\"container\" :class=\"[ns.b(), $attrs.class]\" :style=\"containerStyle\">\n    <slot v-if=\"loading\" name=\"placeholder\">\n      <div :class=\"ns.e('placeholder')\"></div>\n    </slot>\n    <slot v-else-if=\"hasLoadError\" name=\"error\">\n      <div :class=\"ns.e('error')\">{{ t('el.image.error') }}</div>\n    </slot>\n    <img\n      v-else\n      v-bind=\"attrs\"\n      :src=\"src\"\n      :style=\"imageStyle\"\n      :class=\"[ns.e('inner'), preview ? ns.e('preview') : '']\"\n      @click=\"clickHandler\"\n    />\n    <template v-if=\"preview\">\n      <image-viewer\n        v-if=\"showViewer\"\n        :z-index=\"zIndex\"\n        :initial-index=\"imageIndex\"\n        :url-list=\"previewSrcList\"\n        :hide-on-click-modal=\"hideOnClickModal\"\n        :teleported=\"teleported\"\n        @close=\"closeViewer\"\n        @switch=\"switchViewer\"\n      >\n        <div v-if=\"$slots.viewer\">\n          <slot name=\"viewer\" />\n        </div>\n      </image-viewer>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, onMounted, watch, nextTick } from 'vue'\nimport { isString } from '@vue/shared'\nimport {\n  useEventListener,\n  useThrottleFn,\n  isClient,\n  isBoolean,\n} from '@vueuse/core'\nimport {\n  useAttrs,\n  useLocale,\n  useNamespace,\n  useDeprecated,\n} from '@element-plus/hooks'\nimport ImageViewer from '@element-plus/components/image-viewer'\nimport {\n  getScrollContainer,\n  isInContainer,\n  isElement,\n} from '@element-plus/utils'\nimport { imageEmits, imageProps } from './image'\n\nimport type { CSSProperties, StyleValue } from 'vue'\n\nlet prevOverflow = ''\n\nexport default defineComponent({\n  name: 'ElImage',\n  components: {\n    ImageViewer,\n  },\n  inheritAttrs: false,\n\n  props: imageProps,\n  emits: imageEmits,\n\n  setup(props, { emit, attrs: rawAttrs }) {\n    useDeprecated(\n      {\n        scope: 'el-image',\n        from: 'append-to-body',\n        replacement: 'preview-teleported',\n        version: '2.2.0',\n        ref: 'https://element-plus.org/en-US/component/image.html#image-attributess',\n      },\n      computed(() => isBoolean(props.appendToBody))\n    )\n\n    const { t } = useLocale()\n    const ns = useNamespace('image')\n\n    const attrs = useAttrs()\n    const hasLoadError = ref(false)\n    const loading = ref(true)\n    const imgWidth = ref(0)\n    const imgHeight = ref(0)\n    const showViewer = ref(false)\n    const container = ref<HTMLElement>()\n\n    const _scrollContainer = ref<HTMLElement | Window>()\n    let stopScrollListener: () => void\n    let stopWheelListener: () => void\n\n    const containerStyle = computed(() => rawAttrs.style as StyleValue)\n\n    const imageStyle = computed<CSSProperties>(() => {\n      const { fit } = props\n      if (isClient && fit) {\n        return { objectFit: fit }\n      }\n      return {}\n    })\n\n    const preview = computed(() => {\n      const { previewSrcList } = props\n      return Array.isArray(previewSrcList) && previewSrcList.length > 0\n    })\n\n    const teleported = computed(() => {\n      return props.appendToBody || props.previewTeleported\n    })\n\n    const imageIndex = computed(() => {\n      const { previewSrcList, initialIndex } = props\n      let previewIndex = initialIndex\n      if (initialIndex > previewSrcList.length - 1) {\n        previewIndex = 0\n      }\n      return previewIndex\n    })\n\n    const loadImage = () => {\n      if (!isClient) return\n\n      // reset status\n      loading.value = true\n      hasLoadError.value = false\n\n      const img = new Image()\n      const currentImageSrc = props.src\n\n      // load & error callbacks are only responsible for currentImageSrc\n      img.addEventListener('load', (e) => {\n        if (currentImageSrc !== props.src) {\n          return\n        }\n        handleLoad(e, img)\n      })\n      img.addEventListener('error', (e) => {\n        if (currentImageSrc !== props.src) {\n          return\n        }\n        handleError(e)\n      })\n\n      // bind html attrs\n      // so it can behave consistently\n      Object.entries(attrs.value).forEach(([key, value]) => {\n        // avoid onload to be overwritten\n        if (key.toLowerCase() === 'onload') return\n        img.setAttribute(key, value as string)\n      })\n      img.src = currentImageSrc\n    }\n\n    function handleLoad(e: Event, img: HTMLImageElement) {\n      imgWidth.value = img.width\n      imgHeight.value = img.height\n      loading.value = false\n      hasLoadError.value = false\n    }\n\n    function handleError(event: Event) {\n      loading.value = false\n      hasLoadError.value = true\n      emit('error', event)\n    }\n\n    function handleLazyLoad() {\n      if (isInContainer(container.value, _scrollContainer.value)) {\n        loadImage()\n        removeLazyLoadListener()\n      }\n    }\n\n    const lazyLoadHandler = useThrottleFn(handleLazyLoad, 200)\n\n    async function addLazyLoadListener() {\n      if (!isClient) return\n\n      await nextTick()\n\n      const { scrollContainer } = props\n      if (isElement(scrollContainer)) {\n        _scrollContainer.value = scrollContainer\n      } else if (isString(scrollContainer) && scrollContainer !== '') {\n        _scrollContainer.value =\n          document.querySelector<HTMLElement>(scrollContainer) ?? undefined\n      } else if (container.value) {\n        _scrollContainer.value = getScrollContainer(container.value)\n      }\n\n      if (_scrollContainer.value) {\n        stopScrollListener = useEventListener(\n          _scrollContainer,\n          'scroll',\n          lazyLoadHandler\n        )\n        setTimeout(() => handleLazyLoad(), 100)\n      }\n    }\n\n    function removeLazyLoadListener() {\n      if (!isClient || !_scrollContainer.value || !lazyLoadHandler) return\n\n      stopScrollListener()\n      _scrollContainer.value = undefined\n    }\n\n    function wheelHandler(e: WheelEvent) {\n      if (!e.ctrlKey) return\n\n      if (e.deltaY < 0) {\n        e.preventDefault()\n        return false\n      } else if (e.deltaY > 0) {\n        e.preventDefault()\n        return false\n      }\n    }\n\n    function clickHandler() {\n      // don't show viewer when preview is false\n      if (!preview.value) return\n\n      stopWheelListener = useEventListener('wheel', wheelHandler, {\n        passive: false,\n      })\n\n      // prevent body scroll\n      prevOverflow = document.body.style.overflow\n      document.body.style.overflow = 'hidden'\n      showViewer.value = true\n    }\n\n    function closeViewer() {\n      stopWheelListener?.()\n      document.body.style.overflow = prevOverflow\n      showViewer.value = false\n      emit('close')\n    }\n\n    function switchViewer(val: number) {\n      emit('switch', val)\n    }\n\n    watch(\n      () => props.src,\n      () => {\n        if (props.lazy) {\n          // reset status\n          loading.value = true\n          hasLoadError.value = false\n          removeLazyLoadListener()\n          addLazyLoadListener()\n        } else {\n          loadImage()\n        }\n      }\n    )\n\n    onMounted(() => {\n      if (props.lazy) {\n        addLazyLoadListener()\n      } else {\n        loadImage()\n      }\n    })\n\n    return {\n      attrs,\n      loading,\n      hasLoadError,\n      showViewer,\n      containerStyle,\n      imageStyle,\n      preview,\n      imageIndex,\n      container,\n      ns,\n      teleported,\n\n      clickHandler,\n      closeViewer,\n      switchViewer,\n      t,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}