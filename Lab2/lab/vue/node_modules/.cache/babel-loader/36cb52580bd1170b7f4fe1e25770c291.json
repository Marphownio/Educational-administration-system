{"ast":null,"code":"const composeRefs = (...refs) => {\n  return el => {\n    refs.forEach(ref => {\n      ref.value = el;\n    });\n  };\n};\n\nexport { composeRefs };","map":{"version":3,"mappings":"AAAY,MAACA,WAAW,GAAG,CAAC,GAAGC,IAAJ,KAAa;AACtC,SAAQC,EAAD,IAAQ;AACbD,QAAI,CAACE,OAAL,CAAcC,GAAD,IAAS;AACpBA,SAAG,CAACC,KAAJ,GAAYH,EAAZ;AACD,KAFD;AAGD,GAJD;AAKF,CANY","names":["composeRefs","refs","el","forEach","ref","value"],"sources":["../../../../../packages/utils/vue/refs.ts"],"sourcesContent":["import type { ComponentPublicInstance, Ref } from 'vue'\n\nexport const composeRefs = (...refs: Ref<HTMLElement | undefined>[]) => {\n  return (el: Element | ComponentPublicInstance | null) => {\n    refs.forEach((ref) => {\n      ref.value = el as HTMLElement | undefined\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}