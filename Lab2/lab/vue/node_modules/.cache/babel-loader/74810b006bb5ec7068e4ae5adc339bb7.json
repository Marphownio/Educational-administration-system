{"ast":null,"code":"import { defineComponent, openBlock, createBlock, Transition, mergeProps, withCtx, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { addClass, removeClass, hasClass } from '../../../utils/dom/style.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElMenuCollapseTransition\",\n\n  setup() {\n    const listeners = {\n      onBeforeEnter: el => el.style.opacity = \"0.2\",\n\n      onEnter(el, done) {\n        addClass(el, \"el-opacity-transition\");\n        el.style.opacity = \"1\";\n        done();\n      },\n\n      onAfterEnter(el) {\n        removeClass(el, \"el-opacity-transition\");\n        el.style.opacity = \"\";\n      },\n\n      onBeforeLeave(el) {\n        if (!el.dataset) {\n          ;\n          el.dataset = {};\n        }\n\n        if (hasClass(el, \"el-menu--collapse\")) {\n          removeClass(el, \"el-menu--collapse\");\n          el.dataset.oldOverflow = el.style.overflow;\n          el.dataset.scrollWidth = el.clientWidth.toString();\n          addClass(el, \"el-menu--collapse\");\n        } else {\n          addClass(el, \"el-menu--collapse\");\n          el.dataset.oldOverflow = el.style.overflow;\n          el.dataset.scrollWidth = el.clientWidth.toString();\n          removeClass(el, \"el-menu--collapse\");\n        }\n\n        el.style.width = `${el.scrollWidth}px`;\n        el.style.overflow = \"hidden\";\n      },\n\n      onLeave(el) {\n        addClass(el, \"horizontal-collapse-transition\");\n        el.style.width = `${el.dataset.scrollWidth}px`;\n      }\n\n    };\n    return {\n      listeners\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(Transition, mergeProps({\n    mode: \"out-in\"\n  }, _ctx.listeners), {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 16);\n}\n\nvar ElMenuCollapseTransition = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { ElMenuCollapseTransition as default };","map":{"version":3,"mappings":";;;;;AAWA,MAAKA,YAAaC,eAAa;AAC7BC,MAAM,4BADuB;;AAE7BC,OAAQ;AACN,UAAMC,SAAY;AAChBC,mBAAe,EAACC,EAAD,IAASA,GAAGC,KAAH,CAASC,OAAT,GAAmB,KAD3B;;AAEhBC,cAAQH,EAAR,EAAYI,IAAZ,EAAkB;AAChBC,iBAASL,EAAT,EAAa,uBAAb;AACAA,WAAGC,KAAH,CAASC,OAAT,GAAmB,GAAnB;AACAE;AAAA,OALc;;AAQhBE,mBAAaN,EAAb,EAAiB;AACfO,oBAAYP,EAAZ,EAAgB,uBAAhB;AACAA,WAAGC,KAAH,CAASC,OAAT,GAAmB,EAAnB;AAAmB,OAVL;;AAahBM,oBAAcR,EAAd,EAAkB;AACZ,aAACA,GAAGS,OAAJ,EAAa;AACf;AAAET,aAAWS,OAAX,GAAqB,EAArB;AAAqB;;AAGrB,qBAAST,EAAT,EAAa,mBAAb,GAAmC;AACrCO,sBAAYP,EAAZ,EAAgB,mBAAhB;AACGA,qBAAQU,WAAR,GAAsBV,GAAGC,KAAH,CAASU,QAA/B;AACAX,qBAAQY,WAAR,GAAsBZ,GAAGa,WAAH,CAAeC,QAAf,EAAtB;AACHT,mBAASL,EAAT,EAAa,mBAAb;AACK,SALH,MAKG;AACLK,mBAASL,EAAT,EAAa,mBAAb;AACGA,qBAAQU,WAAR,GAAsBV,GAAGC,KAAH,CAASU,QAA/B;AACAX,qBAAQY,WAAR,GAAsBZ,GAAGa,WAAH,CAAeC,QAAf,EAAtB;AACHP,sBAAYP,EAAZ,EAAgB,mBAAhB;AAAgB;;AAGfA,iBAAMe,KAAN,GAAc,GAAGf,EAAG,gBAApB;AACHA,WAAGC,KAAH,CAASU,QAAT,GAAoB,QAApB;AAAoB,OA/BN;;AAkChBK,cAAQhB,EAAR,EAAyB;AACvBK,iBAASL,EAAT,EAAa,gCAAb;AACAA,WAAGC,KAAH,CAASc,KAAT,GAAoB,MAAGN,OAAH,CAAWG,eAA/B;AAA+B;;AApCjB,KAAlB;AAwCO;AACLd;AADK;AACL;;AA5CyB,EAA/B;;;AAVE,kCAEamB,UAFb,aAEa;AAFDC,UAAK;AAEJ,GAFb,EAAkCC,IAAS,UAA3C,GAA2C;AAAAC,qBACzC,MAAQ,CAARC,UAAQ,yBADiC;AACjCC;AADiC,GAA3C","names":["_sfc_main","defineComponent","name","setup","listeners","onBeforeEnter","el","style","opacity","onEnter","done","addClass","onAfterEnter","removeClass","onBeforeLeave","dataset","oldOverflow","overflow","scrollWidth","clientWidth","toString","width","onLeave","_Transition","mode","_ctx","default","_renderSlot","_"],"sources":["../../../../../../packages/components/menu/src/menu-collapse-transition.vue"],"sourcesContent":["<template>\n  <transition mode=\"out-in\" v-bind=\"listeners\">\n    <slot />\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\nimport { addClass, removeClass, hasClass } from '@element-plus/utils'\n\nimport type { TransitionProps, BaseTransitionProps } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMenuCollapseTransition',\n  setup() {\n    const listeners = {\n      onBeforeEnter: (el) => (el.style.opacity = '0.2'),\n      onEnter(el, done) {\n        addClass(el, 'el-opacity-transition')\n        el.style.opacity = '1'\n        done()\n      },\n\n      onAfterEnter(el) {\n        removeClass(el, 'el-opacity-transition')\n        el.style.opacity = ''\n      },\n\n      onBeforeLeave(el) {\n        if (!el.dataset) {\n          ;(el as any).dataset = {}\n        }\n\n        if (hasClass(el, 'el-menu--collapse')) {\n          removeClass(el, 'el-menu--collapse')\n          el.dataset.oldOverflow = el.style.overflow\n          el.dataset.scrollWidth = el.clientWidth.toString()\n          addClass(el, 'el-menu--collapse')\n        } else {\n          addClass(el, 'el-menu--collapse')\n          el.dataset.oldOverflow = el.style.overflow\n          el.dataset.scrollWidth = el.clientWidth.toString()\n          removeClass(el, 'el-menu--collapse')\n        }\n\n        el.style.width = `${el.scrollWidth}px`\n        el.style.overflow = 'hidden'\n      },\n\n      onLeave(el: HTMLElement) {\n        addClass(el, 'horizontal-collapse-transition')\n        el.style.width = `${el.dataset.scrollWidth}px`\n      },\n    } as BaseTransitionProps<HTMLElement> as TransitionProps\n\n    return {\n      listeners,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}