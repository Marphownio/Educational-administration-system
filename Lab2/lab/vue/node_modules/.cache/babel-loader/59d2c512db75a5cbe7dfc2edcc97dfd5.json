{"ast":null,"code":"import { defineComponent, ref, computed, onMounted, watch, resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, createCommentVNode, resolveDynamicComponent, renderSlot, createElementBlock, toDisplayString, Fragment, withModifiers, createVNode, vShow } from 'vue';\nimport { useTimeoutFn, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElBadge } from '../../badge/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { messageProps, messageEmits } from './message.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { TypeComponents, TypeComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElMessage\",\n  components: {\n    ElBadge,\n    ElIcon,\n    ...TypeComponents\n  },\n  props: messageProps,\n  emits: messageEmits,\n\n  setup(props) {\n    const ns = useNamespace(\"message\");\n    const visible = ref(false);\n    const badgeType = ref(props.type ? props.type === \"error\" ? \"danger\" : props.type : \"info\");\n    let stopTimer = void 0;\n    const typeClass = computed(() => {\n      const type = props.type;\n      return {\n        [ns.bm(\"icon\", type)]: type && TypeComponentsMap[type]\n      };\n    });\n    const iconComponent = computed(() => {\n      return props.icon || TypeComponentsMap[props.type] || \"\";\n    });\n    const customStyle = computed(() => ({\n      top: `${props.offset}px`,\n      zIndex: props.zIndex\n    }));\n\n    function startTimer() {\n      if (props.duration > 0) {\n        ;\n        ({\n          stop: stopTimer\n        } = useTimeoutFn(() => {\n          if (visible.value) close();\n        }, props.duration));\n      }\n    }\n\n    function clearTimer() {\n      stopTimer == null ? void 0 : stopTimer();\n    }\n\n    function close() {\n      visible.value = false;\n    }\n\n    function keydown({\n      code\n    }) {\n      if (code === EVENT_CODE.esc) {\n        if (visible.value) {\n          close();\n        }\n      } else {\n        startTimer();\n      }\n    }\n\n    onMounted(() => {\n      startTimer();\n      visible.value = true;\n    });\n    watch(() => props.repeatNum, () => {\n      clearTimer();\n      startTimer();\n    });\n    useEventListener(document, \"keydown\", keydown);\n    return {\n      ns,\n      typeClass,\n      iconComponent,\n      customStyle,\n      visible,\n      badgeType,\n      close,\n      clearTimer,\n      startTimer\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = [\"innerHTML\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_badge = resolveComponent(\"el-badge\");\n\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_close = resolveComponent(\"close\");\n\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.ns.b(\"fade\"),\n    onBeforeLeave: _ctx.onClose,\n    onAfterLeave: _cache[2] || (_cache[2] = $event => _ctx.$emit(\"destroy\"))\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n      id: _ctx.id,\n      class: normalizeClass([_ctx.ns.b(), {\n        [_ctx.ns.m(_ctx.type)]: _ctx.type && !_ctx.icon\n      }, _ctx.ns.is(\"center\", _ctx.center), _ctx.ns.is(\"closable\", _ctx.showClose), _ctx.customClass]),\n      style: normalizeStyle(_ctx.customStyle),\n      role: \"alert\",\n      onMouseenter: _cache[0] || (_cache[0] = (...args) => _ctx.clearTimer && _ctx.clearTimer(...args)),\n      onMouseleave: _cache[1] || (_cache[1] = (...args) => _ctx.startTimer && _ctx.startTimer(...args))\n    }, [_ctx.repeatNum > 1 ? (openBlock(), createBlock(_component_el_badge, {\n      key: 0,\n      value: _ctx.repeatNum,\n      type: _ctx.badgeType,\n      class: normalizeClass(_ctx.ns.e(\"badge\"))\n    }, null, 8, [\"value\", \"type\", \"class\"])) : createCommentVNode(\"v-if\", true), _ctx.iconComponent ? (openBlock(), createBlock(_component_el_icon, {\n      key: 1,\n      class: normalizeClass([_ctx.ns.e(\"icon\"), _ctx.typeClass])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\", {}, () => [!_ctx.dangerouslyUseHTMLString ? (openBlock(), createElementBlock(\"p\", {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"content\"))\n    }, toDisplayString(_ctx.message), 3)) : (openBlock(), createElementBlock(Fragment, {\n      key: 1\n    }, [createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), createElementVNode(\"p\", {\n      class: normalizeClass(_ctx.ns.e(\"content\")),\n      innerHTML: _ctx.message\n    }, null, 10, _hoisted_2)], 2112))]), _ctx.showClose ? (openBlock(), createBlock(_component_el_icon, {\n      key: 2,\n      class: normalizeClass(_ctx.ns.e(\"closeBtn\")),\n      onClick: withModifiers(_ctx.close, [\"stop\"])\n    }, {\n      default: withCtx(() => [createVNode(_component_close)]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 46, _hoisted_1), [[vShow, _ctx.visible]])]),\n    _: 3\n  }, 8, [\"name\", \"onBeforeLeave\"]);\n}\n\nvar MessageConstructor = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { MessageConstructor as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElBadge","ElIcon","props","emits","setup","ns","useNamespace","visible","ref","type","stopTimer","computed","TypeComponentsMap","top","zIndex","duration","stop","useTimeoutFn","close","value","code","EVENT_CODE","esc","startTimer","onMounted","watch","clearTimer","useEventListener","document","keydown","typeClass","iconComponent","customStyle","badgeType","_createBlock","_ctx","b","onBeforeLeave","onAfterLeave","_cache","_createElementVNode","id","class","m","is","style","_normalizeStyle","role","onMouseenter","onMouseleave","openBlock","key","_normalizeClass","e","_createCommentVNode","_resolveDynamicComponent","_","_renderSlot","_createElementBlock","_toDisplayString","innerHTML","_hoisted_2","onClick","_withModifiers","_createVNode"],"sources":["../../../../../../packages/components/message/src/message.vue"],"sourcesContent":["<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      :class=\"[\n        ns.b(),\n        { [ns.m(type)]: type && !icon },\n        ns.is('center', center),\n        ns.is('closable', showClose),\n        customClass,\n      ]\"\n      :style=\"customStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n    >\n      <el-badge\n        v-if=\"repeatNum > 1\"\n        :value=\"repeatNum\"\n        :type=\"badgeType\"\n        :class=\"ns.e('badge')\"\n      >\n      </el-badge>\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <slot>\n        <p v-if=\"!dangerouslyUseHTMLString\" :class=\"ns.e('content')\">\n          {{ message }}\n        </p>\n        <!-- Caution here, message could've been compromised, never use user's input as message -->\n        <p v-else :class=\"ns.e('content')\" v-html=\"message\"></p>\n      </slot>\n      <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n        <close />\n      </el-icon>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, onMounted, watch } from 'vue'\nimport { useEventListener, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport ElBadge from '@element-plus/components/badge'\nimport { ElIcon } from '@element-plus/components/icon'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport { messageEmits, messageProps } from './message'\nimport type { BadgeProps } from '@element-plus/components/badge'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMessage',\n\n  components: {\n    ElBadge,\n    ElIcon,\n    ...TypeComponents,\n  },\n\n  props: messageProps,\n  emits: messageEmits,\n\n  setup(props) {\n    const ns = useNamespace('message')\n    const visible = ref(false)\n    const badgeType = ref<BadgeProps['type']>(\n      props.type ? (props.type === 'error' ? 'danger' : props.type) : 'info'\n    )\n    let stopTimer: (() => void) | undefined = undefined\n\n    const typeClass = computed(() => {\n      const type = props.type\n      return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n    })\n\n    const iconComponent = computed(() => {\n      return props.icon || TypeComponentsMap[props.type] || ''\n    })\n\n    const customStyle = computed<CSSProperties>(() => ({\n      top: `${props.offset}px`,\n      zIndex: props.zIndex,\n    }))\n\n    function startTimer() {\n      if (props.duration > 0) {\n        ;({ stop: stopTimer } = useTimeoutFn(() => {\n          if (visible.value) close()\n        }, props.duration))\n      }\n    }\n\n    function clearTimer() {\n      stopTimer?.()\n    }\n\n    function close() {\n      visible.value = false\n    }\n\n    function keydown({ code }: KeyboardEvent) {\n      if (code === EVENT_CODE.esc) {\n        // press esc to close the message\n        if (visible.value) {\n          close()\n        }\n      } else {\n        startTimer() // resume timer\n      }\n    }\n\n    onMounted(() => {\n      startTimer()\n      visible.value = true\n    })\n\n    watch(\n      () => props.repeatNum,\n      () => {\n        clearTimer()\n        startTimer()\n      }\n    )\n\n    useEventListener(document, 'keydown', keydown)\n\n    return {\n      ns,\n      typeClass,\n      iconComponent,\n      customStyle,\n      visible,\n      badgeType,\n\n      close,\n      clearTimer,\n      startTimer,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}