{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\n/** Error message constants. */\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\r\n * Creates a function that iterates over `pairs` and invokes the corresponding\r\n * function of the first predicate to return truthy. The predicate-function\r\n * pairs are invoked with the `this` binding and arguments of the created\r\n * function.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {Array} pairs The predicate-function pairs.\r\n * @returns {Function} Returns the new composite function.\r\n * @example\r\n *\r\n * var func = _.cond([\r\n *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\r\n *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\r\n *   [_.stubTrue,                      _.constant('no match')]\r\n * ]);\r\n *\r\n * func({ 'a': 1, 'b': 2 });\r\n * // => 'matches A'\r\n *\r\n * func({ 'a': 0, 'b': 1 });\r\n * // => 'matches B'\r\n *\r\n * func({ 'a': '1', 'b': '2' });\r\n * // => 'no match'\r\n */\n\nfunction cond(pairs) {\n  var length = pairs == null ? 0 : pairs.length,\n      toIteratee = baseIteratee;\n  pairs = !length ? [] : arrayMap(pairs, function (pair) {\n    if (typeof pair[1] != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n\n    return [toIteratee(pair[0]), pair[1]];\n  });\n  return baseRest(function (args) {\n    var index = -1;\n\n    while (++index < length) {\n      var pair = pairs[index];\n\n      if (apply(pair[0], this, args)) {\n        return apply(pair[1], this, args);\n      }\n    }\n  });\n}\n\nexport default cond;","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab2/lab/vue/node_modules/lodash-es/cond.js"],"names":["apply","arrayMap","baseIteratee","baseRest","FUNC_ERROR_TEXT","cond","pairs","length","toIteratee","pair","TypeError","args","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA;;AACA,IAAIC,eAAe,GAAG,qBAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MAAIC,MAAM,GAAGD,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACC,MAAvC;AAAA,MACIC,UAAU,GAAGN,YADjB;AAGAI,EAAAA,KAAK,GAAG,CAACC,MAAD,GAAU,EAAV,GAAeN,QAAQ,CAACK,KAAD,EAAQ,UAASG,IAAT,EAAe;AACpD,QAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,IAAkB,UAAtB,EAAkC;AAChC,YAAM,IAAIC,SAAJ,CAAcN,eAAd,CAAN;AACD;;AACD,WAAO,CAACI,UAAU,CAACC,IAAI,CAAC,CAAD,CAAL,CAAX,EAAsBA,IAAI,CAAC,CAAD,CAA1B,CAAP;AACD,GAL8B,CAA/B;AAOA,SAAON,QAAQ,CAAC,UAASQ,IAAT,EAAe;AAC7B,QAAIC,KAAK,GAAG,CAAC,CAAb;;AACA,WAAO,EAAEA,KAAF,GAAUL,MAAjB,EAAyB;AACvB,UAAIE,IAAI,GAAGH,KAAK,CAACM,KAAD,CAAhB;;AACA,UAAIZ,KAAK,CAACS,IAAI,CAAC,CAAD,CAAL,EAAU,IAAV,EAAgBE,IAAhB,CAAT,EAAgC;AAC9B,eAAOX,KAAK,CAACS,IAAI,CAAC,CAAD,CAAL,EAAU,IAAV,EAAgBE,IAAhB,CAAZ;AACD;AACF;AACF,GARc,CAAf;AASD;;AAED,eAAeN,IAAf","sourcesContent":["import apply from './_apply.js';\r\nimport arrayMap from './_arrayMap.js';\r\nimport baseIteratee from './_baseIteratee.js';\r\nimport baseRest from './_baseRest.js';\r\n\r\n/** Error message constants. */\r\nvar FUNC_ERROR_TEXT = 'Expected a function';\r\n\r\n/**\r\n * Creates a function that iterates over `pairs` and invokes the corresponding\r\n * function of the first predicate to return truthy. The predicate-function\r\n * pairs are invoked with the `this` binding and arguments of the created\r\n * function.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Util\r\n * @param {Array} pairs The predicate-function pairs.\r\n * @returns {Function} Returns the new composite function.\r\n * @example\r\n *\r\n * var func = _.cond([\r\n *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\r\n *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\r\n *   [_.stubTrue,                      _.constant('no match')]\r\n * ]);\r\n *\r\n * func({ 'a': 1, 'b': 2 });\r\n * // => 'matches A'\r\n *\r\n * func({ 'a': 0, 'b': 1 });\r\n * // => 'matches B'\r\n *\r\n * func({ 'a': '1', 'b': '2' });\r\n * // => 'no match'\r\n */\r\nfunction cond(pairs) {\r\n  var length = pairs == null ? 0 : pairs.length,\r\n      toIteratee = baseIteratee;\r\n\r\n  pairs = !length ? [] : arrayMap(pairs, function(pair) {\r\n    if (typeof pair[1] != 'function') {\r\n      throw new TypeError(FUNC_ERROR_TEXT);\r\n    }\r\n    return [toIteratee(pair[0]), pair[1]];\r\n  });\r\n\r\n  return baseRest(function(args) {\r\n    var index = -1;\r\n    while (++index < length) {\r\n      var pair = pairs[index];\r\n      if (apply(pair[0], this, args)) {\r\n        return apply(pair[1], this, args);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default cond;\r\n"]},"metadata":{},"sourceType":"module"}