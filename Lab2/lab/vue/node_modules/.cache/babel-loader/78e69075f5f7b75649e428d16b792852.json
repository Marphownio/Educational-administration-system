{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport Nav from \"@/views/inc/Nav.vue\";\nexport default {\n  name: \"userManage\",\n  components: {\n    Nav\n  },\n\n  data() {\n    let namecheck = (rule, value, callback) => {\n      if (value.length === 0) {\n        callback(new Error('请输入姓名'));\n        return false;\n      }\n\n      const relu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\n      const re = new RegExp(relu);\n\n      if (value.search(re) === -1) {\n        callback(new Error('姓名输入只能为中英文'));\n        return false;\n      } else {\n        if (this.value.length > 32) {\n          callback(new Error('仅支持32字符以内输入'));\n          return false;\n        } else {\n          return true;\n        }\n      }\n    };\n\n    return {\n      dialogVisible: false,\n      ruleForm: {},\n      editRules: {\n        name: [{\n          validator: namecheck,\n          trigger: 'blur'\n        }],\n        id: [{\n          required: true,\n          message: '请输入学号/工号',\n          trigger: 'blur'\n        }, {\n          type: 'number',\n          message: '输入只能为数字',\n          trigger: 'change'\n        }],\n        idNumber: [{\n          required: true,\n          message: '请输入身份证号',\n          trigger: 'blur'\n        }, {\n          pattern: '/(^\\\\d{15}$)|(^\\\\d{18}$)|(^\\\\d{17}(\\\\d|X|x)$)/',\n          message: '输入格式不正确，请检查输入',\n          trigger: 'blur'\n        }],\n        phoneNumber: [{\n          pattern: '^1[0-9]{10}$',\n          message: '请输入以1开头的11位数字',\n          trigger: 'blur'\n        }],\n        email: [{\n          pattern: '/^([a-zA-Z0-9]+[-_\\\\.]?)+@[a-zA-Z0-9]+\\\\.[a-z]+$/',\n          message: '邮箱格式不正确，请重新输入',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'blur'\n        }]\n      },\n      tableData: [{\n        role: '0',\n        name: 'admin',\n        id: '000000',\n        idNumber: '123456789012345678',\n        phoneNumber: '12345678901',\n        email: '12345678901@test.cn',\n        state: 1\n      }, {\n        role: '1',\n        name: 'test',\n        id: '000000',\n        idNumber: '123456789012345678',\n        phoneNumber: '12345678901',\n        email: '12345678901@test.cn',\n        state: 3\n      }]\n    };\n  },\n\n  created() {},\n\n  methods: {\n    getUserForm() {\n      this.$axios.get(\"/sys/menu/list\").then(res => {\n        this.tableData = res.data.data;\n      });\n    },\n\n    submitForm() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          //this.$axios.post('/sys/menu/'+(this.ruleForm.id?'update':'save'),this.ruleForm)\n          //.then(res=>{\n          this.$message({\n            showClose: true,\n            message: '添加成功',\n            type: 'success',\n            onClose: () => {\n              this.getUserForm();\n            } //})\n\n          });\n        } else {\n          this.$nextTick(() => {\n            this.scrollToTop(this.$refs[formName].$el);\n          });\n        }\n      });\n    },\n\n    editHandle(id) {\n      this.$axios.get('/sys/menu/info/' + id).then(res => {\n        this.ruleForm = res.data.data;\n        this.dialogVisible = true;\n      });\n    },\n\n    scrollToTop(node) {\n      const ChildHasError = Array.from(node.querySelectorAll('.is-error'));\n      if (!ChildHasError.length) throw new Error('有错误，但是找不到错误位置');\n    }\n\n  }\n};","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab3/vueadmin-vue/src/assets/js/usermanagement.js"],"names":["Nav","name","components","data","namecheck","rule","value","callback","length","Error","relu","re","RegExp","search","dialogVisible","ruleForm","editRules","validator","trigger","id","required","message","type","idNumber","pattern","phoneNumber","email","role","tableData","state","created","methods","getUserForm","$axios","get","then","res","submitForm","$refs","validate","valid","$message","showClose","onClose","$nextTick","scrollToTop","formName","$el","editHandle","node","ChildHasError","Array","from","querySelectorAll"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,qBAAhB;AAEA,eAAe;AACXC,EAAAA,IAAI,EAAE,YADK;AAEXC,EAAAA,UAAU,EAAC;AACPF,IAAAA;AADO,GAFA;;AAKXG,EAAAA,IAAI,GAAE;AACF,QAAIC,SAAS,GAAC,CAACC,IAAD,EAAMC,KAAN,EAAYC,QAAZ,KAAuB;AACjC,UAAGD,KAAK,CAACE,MAAN,KAAe,CAAlB,EACA;AACID,QAAAA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,OAAV,CAAD,CAAR;AACA,eAAO,KAAP;AACH;;AACD,YAAMC,IAAI,GAAG,0BAAb;AACA,YAAMC,EAAE,GAAG,IAAIC,MAAJ,CAAWF,IAAX,CAAX;;AACA,UAAIJ,KAAK,CAACO,MAAN,CAAaF,EAAb,MAAqB,CAAC,CAA1B,EAA4B;AACxBJ,QAAAA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,YAAV,CAAD,CAAR;AACA,eAAO,KAAP;AACH,OAHD,MAGO;AACH,YAAG,KAAKH,KAAL,CAAWE,MAAX,GAAkB,EAArB,EAAwB;AACpBD,UAAAA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,aAAV,CAAD,CAAR;AACA,iBAAO,KAAP;AACH,SAHD,MAIK;AACD,iBAAO,IAAP;AACC;AACJ;AAER,KArBD;;AAsBA,WAAM;AACFK,MAAAA,aAAa,EAAC,KADZ;AAEFC,MAAAA,QAAQ,EAAC,EAFP;AAIFC,MAAAA,SAAS,EAAG;AACRf,QAAAA,IAAI,EAAE,CACF;AAAEgB,UAAAA,SAAS,EAAEb,SAAb;AAAuBc,UAAAA,OAAO,EAAE;AAAhC,SADE,CADE;AAIRC,QAAAA,EAAE,EAAE,CACA;AACIC,UAAAA,QAAQ,EAAE,IADd;AAEIC,UAAAA,OAAO,EAAE,UAFb;AAGIH,UAAAA,OAAO,EAAE;AAHb,SADA,EAMA;AAAEI,UAAAA,IAAI,EAAC,QAAP;AAAgBD,UAAAA,OAAO,EAAC,SAAxB;AAAkCH,UAAAA,OAAO,EAAE;AAA3C,SANA,CAJI;AAYRK,QAAAA,QAAQ,EAAE,CACN;AACIH,UAAAA,QAAQ,EAAE,IADd;AAEIC,UAAAA,OAAO,EAAE,SAFb;AAGIH,UAAAA,OAAO,EAAE;AAHb,SADM,EAMN;AAACM,UAAAA,OAAO,EAAC,gDAAT;AAA0DH,UAAAA,OAAO,EAAC,eAAlE;AAAkFH,UAAAA,OAAO,EAAE;AAA3F,SANM,CAZF;AAoBRO,QAAAA,WAAW,EAAC,CACR;AAACD,UAAAA,OAAO,EAAC,cAAT;AAAwBH,UAAAA,OAAO,EAAC,eAAhC;AAAgDH,UAAAA,OAAO,EAAC;AAAxD,SADQ,CApBJ;AAuBRQ,QAAAA,KAAK,EAAC,CACF;AAACF,UAAAA,OAAO,EAAC,mDAAT;AAA6DH,UAAAA,OAAO,EAAC,eAArE;AAAqFH,UAAAA,OAAO,EAAC;AAA7F,SADE,CAvBE;AA0BRS,QAAAA,IAAI,EAAE,CACF;AACIP,UAAAA,QAAQ,EAAE,IADd;AAEIC,UAAAA,OAAO,EAAE,OAFb;AAGIH,UAAAA,OAAO,EAAE;AAHb,SADE;AA1BE,OAJV;AAsCFU,MAAAA,SAAS,EAAG,CACR;AACID,QAAAA,IAAI,EAAE,GADV;AAEI1B,QAAAA,IAAI,EAAE,OAFV;AAGIkB,QAAAA,EAAE,EAAC,QAHP;AAIII,QAAAA,QAAQ,EAAC,oBAJb;AAKIE,QAAAA,WAAW,EAAC,aALhB;AAMIC,QAAAA,KAAK,EAAC,qBANV;AAOIG,QAAAA,KAAK,EAAE;AAPX,OADQ,EAUR;AACIF,QAAAA,IAAI,EAAE,GADV;AAEI1B,QAAAA,IAAI,EAAE,MAFV;AAGIkB,QAAAA,EAAE,EAAC,QAHP;AAIII,QAAAA,QAAQ,EAAC,oBAJb;AAKIE,QAAAA,WAAW,EAAC,aALhB;AAMIC,QAAAA,KAAK,EAAC,qBANV;AAOIG,QAAAA,KAAK,EAAC;AAPV,OAVQ;AAtCV,KAAN;AA2DH,GAvFU;;AAwFXC,EAAAA,OAAO,GAAE,CAER,CA1FU;;AA4FXC,EAAAA,OAAO,EAAC;AACJC,IAAAA,WAAW,GAAE;AACT,WAAKC,MAAL,CAAYC,GAAZ,CAAgB,gBAAhB,EAAkCC,IAAlC,CAAuCC,GAAG,IAAE;AACxC,aAAKR,SAAL,GAAeQ,GAAG,CAACjC,IAAJ,CAASA,IAAxB;AACH,OAFD;AAGH,KALG;;AAMJkC,IAAAA,UAAU,GAAE;AACR,WAAKC,KAAL,CAAWvB,QAAX,CAAoBwB,QAApB,CAA6BC,KAAK,IAAE;AAChC,YAAGA,KAAH,EAAS;AACL;AACA;AACA,eAAKC,QAAL,CAAc;AACNC,YAAAA,SAAS,EAAE,IADL;AAENrB,YAAAA,OAAO,EAAE,MAFH;AAGNC,YAAAA,IAAI,EAAE,SAHA;AAINqB,YAAAA,OAAO,EAAC,MAAI;AACR,mBAAKX,WAAL;AACH,aANK,CAON;;AAPM,WAAd;AAUH,SAbD,MAcI;AACA,eAAKY,SAAL,CAAe,MAAM;AACjB,iBAAKC,WAAL,CAAiB,KAAKP,KAAL,CAAWQ,QAAX,EAAqBC,GAAtC;AACH,WAFD;AAGH;AACJ,OApBD;AAqBH,KA5BG;;AA6BJC,IAAAA,UAAU,CAAC7B,EAAD,EAAI;AACV,WAAKc,MAAL,CAAYC,GAAZ,CAAgB,oBAAkBf,EAAlC,EAAsCgB,IAAtC,CAA2CC,GAAG,IAAE;AAC5C,aAAKrB,QAAL,GAAcqB,GAAG,CAACjC,IAAJ,CAASA,IAAvB;AACA,aAAKW,aAAL,GAAmB,IAAnB;AACH,OAHD;AAIH,KAlCG;;AAmCJ+B,IAAAA,WAAW,CAAEI,IAAF,EAAQ;AACf,YAAMC,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAWH,IAAI,CAACI,gBAAL,CAAsB,WAAtB,CAAX,CAAtB;AACA,UAAI,CAACH,aAAa,CAAC1C,MAAnB,EAA2B,MAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AAC9B;;AAtCG;AA5FG,CAAf","sourcesContent":["import Nav from \"@/views/inc/Nav.vue\";\r\n\r\nexport default {\r\n    name: \"userManage\",\r\n    components:{\r\n        Nav\r\n    },\r\n    data(){\r\n        let namecheck=(rule,value,callback)=>{\r\n            if(value.length===0)\r\n            {\r\n                callback(new Error('请输入姓名'));\r\n                return false;\r\n            }\r\n            const relu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\r\n            const re = new RegExp(relu);\r\n            if (value.search(re) === -1){\r\n                callback(new Error('姓名输入只能为中英文'));\r\n                return false;\r\n            } else {\r\n                if(this.value.length>32){\r\n                    callback(new Error('仅支持32字符以内输入'));\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                    }\r\n                }\r\n\r\n        };\r\n        return{\r\n            dialogVisible:false,\r\n            ruleForm:{\r\n            },\r\n            editRules :({\r\n                name: [\r\n                    { validator: namecheck,trigger: 'blur'}\r\n                ],\r\n                id: [\r\n                    {\r\n                        required: true,\r\n                        message: '请输入学号/工号',\r\n                        trigger: 'blur',\r\n                    },\r\n                    { type:'number',message:'输入只能为数字',trigger: 'change'},\r\n                ],\r\n                idNumber: [\r\n                    {\r\n                        required: true,\r\n                        message: '请输入身份证号',\r\n                        trigger: 'blur',\r\n                    },\r\n                    {pattern:'/(^\\\\d{15}$)|(^\\\\d{18}$)|(^\\\\d{17}(\\\\d|X|x)$)/',message:'输入格式不正确，请检查输入',trigger: 'blur'}\r\n                ],\r\n                phoneNumber:[\r\n                    {pattern:'^1[0-9]{10}$',message:'请输入以1开头的11位数字',trigger:'blur',}\r\n                ],\r\n                email:[\r\n                    {pattern:'/^([a-zA-Z0-9]+[-_\\\\.]?)+@[a-zA-Z0-9]+\\\\.[a-z]+$/',message:'邮箱格式不正确，请重新输入',trigger:'blur',}\r\n                ],\r\n                role: [\r\n                    {\r\n                        required: true,\r\n                        message: '请选择角色',\r\n                        trigger: 'blur',\r\n                    },\r\n                ]\r\n            }),\r\n            tableData : [\r\n                {\r\n                    role: '0',\r\n                    name: 'admin',\r\n                    id:'000000',\r\n                    idNumber:'123456789012345678',\r\n                    phoneNumber:'12345678901',\r\n                    email:'12345678901@test.cn',\r\n                    state: 1\r\n                },\r\n                {\r\n                    role: '1',\r\n                    name: 'test',\r\n                    id:'000000',\r\n                    idNumber:'123456789012345678',\r\n                    phoneNumber:'12345678901',\r\n                    email:'12345678901@test.cn',\r\n                    state:3\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created(){\r\n\r\n    },\r\n\r\n    methods:{\r\n        getUserForm(){\r\n            this.$axios.get(\"/sys/menu/list\").then(res=>{\r\n                this.tableData=res.data.data;\r\n            })\r\n        },\r\n        submitForm(){\r\n            this.$refs.ruleForm.validate(valid=>{\r\n                if(valid){\r\n                    //this.$axios.post('/sys/menu/'+(this.ruleForm.id?'update':'save'),this.ruleForm)\r\n                    //.then(res=>{\r\n                    this.$message({\r\n                            showClose: true,\r\n                            message: '添加成功',\r\n                            type: 'success',\r\n                            onClose:()=>{\r\n                                this.getUserForm()\r\n                            }\r\n                            //})\r\n                        }\r\n                    )\r\n                }\r\n                else{\r\n                    this.$nextTick(() => {\r\n                        this.scrollToTop(this.$refs[formName].$el)\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        editHandle(id){\r\n            this.$axios.get('/sys/menu/info/'+id).then(res=>{\r\n                this.ruleForm=res.data.data;\r\n                this.dialogVisible=true;\r\n            })\r\n        },\r\n        scrollToTop (node) {\r\n            const ChildHasError = Array.from(node.querySelectorAll('.is-error'))\r\n            if (!ChildHasError.length) throw new Error('有错误，但是找不到错误位置')\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}