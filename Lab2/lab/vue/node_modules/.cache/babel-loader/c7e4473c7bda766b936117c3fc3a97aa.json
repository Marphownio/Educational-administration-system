{"ast":null,"code":"import '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nconst avatarProps = buildProps({\n  size: {\n    type: [Number, String],\n    values: [\"large\", \"default\", \"small\"],\n    default: \"default\",\n    validator: val => typeof val === \"number\"\n  },\n  shape: {\n    type: String,\n    values: [\"circle\", \"square\"],\n    default: \"circle\"\n  },\n  icon: {\n    type: iconPropType\n  },\n  src: {\n    type: String,\n    default: \"\"\n  },\n  alt: String,\n  srcSet: String,\n  fit: {\n    type: definePropType(String),\n    default: \"cover\"\n  }\n});\nconst avatarEmits = {\n  error: evt => evt instanceof Event\n};\nexport { avatarEmits, avatarProps };","map":{"version":3,"mappings":";;;AACY,MAACA,WAAW,GAAGC,UAAU,CAAC;AACpCC,MAAI,EAAE;AACJC,QAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADF;AAEJC,UAAM,EAAE,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,CAFJ;AAGJC,WAAO,EAAE,SAHL;AAIJC,aAAS,EAAGC,GAAD,IAAS,OAAOA,GAAP,KAAe;AAJ/B,GAD8B;AAOpCC,OAAK,EAAE;AACLP,QAAI,EAAEE,MADD;AAELC,UAAM,EAAE,CAAC,QAAD,EAAW,QAAX,CAFH;AAGLC,WAAO,EAAE;AAHJ,GAP6B;AAYpCI,MAAI,EAAE;AACJR,QAAI,EAAES;AADF,GAZ8B;AAepCC,KAAG,EAAE;AACHV,QAAI,EAAEE,MADH;AAEHE,WAAO,EAAE;AAFN,GAf+B;AAmBpCO,KAAG,EAAET,MAnB+B;AAoBpCU,QAAM,EAAEV,MApB4B;AAqBpCW,KAAG,EAAE;AACHb,QAAI,EAAEc,cAAc,CAACZ,MAAD,CADjB;AAEHE,WAAO,EAAE;AAFN;AArB+B,CAAD,CAAzB;AA0BA,MAACW,WAAW,GAAG;AACzBC,OAAK,EAAGC,GAAD,IAASA,GAAG,YAAYC;AADN,CAAf","names":["avatarProps","buildProps","size","type","Number","String","values","default","validator","val","shape","icon","iconPropType","src","alt","srcSet","fit","definePropType","avatarEmits","error","evt","Event"],"sources":["../../../../../../packages/components/avatar/src/avatar.ts"],"sourcesContent":["import { buildProps, definePropType, iconPropType } from '@element-plus/utils'\nimport type { ExtractPropTypes } from 'vue'\nimport type { ObjectFitProperty } from 'csstype'\nimport type Avatar from './avatar.vue'\n\nexport const avatarProps = buildProps({\n  size: {\n    type: [Number, String],\n    values: ['large', 'default', 'small'],\n    default: 'default',\n    validator: (val: unknown): val is number => typeof val === 'number',\n  },\n  shape: {\n    type: String,\n    values: ['circle', 'square'],\n    default: 'circle',\n  },\n  icon: {\n    type: iconPropType,\n  },\n  src: {\n    type: String,\n    default: '',\n  },\n  alt: String,\n  srcSet: String,\n  fit: {\n    type: definePropType<ObjectFitProperty>(String),\n    default: 'cover',\n  },\n} as const)\nexport type AvatarProps = ExtractPropTypes<typeof avatarProps>\n\nexport const avatarEmits = {\n  error: (evt: Event) => evt instanceof Event,\n}\nexport type AvatarEmits = typeof avatarEmits\n\nexport type AvatarInstance = InstanceType<typeof Avatar>\n"]},"metadata":{},"sourceType":"module"}