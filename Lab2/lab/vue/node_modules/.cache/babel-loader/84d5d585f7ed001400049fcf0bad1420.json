{"ast":null,"code":"import { defineComponent, vModelText, provide, reactive, toRefs, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, renderSlot, createCommentVNode, normalizeStyle, toDisplayString, createBlock, Fragment, renderList, withKeys, resolveDynamicComponent, vShow, normalizeProps, guardReactiveProps } from 'vue';\nimport '../../../directives/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../constants/index.mjs';\nimport _sfc_main$1 from './select-dropdown.mjs';\nimport useSelect from './useSelect.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport { SelectProps } from './defaults.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElSelectV2\",\n  components: {\n    ElSelectMenu: _sfc_main$1,\n    ElTag,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside,\n    ModelText: vModelText\n  },\n  props: SelectProps,\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n\n  setup(props, {\n    emit\n  }) {\n    const API = useSelect(props, emit);\n    provide(selectV2InjectionKey, {\n      props: reactive({ ...toRefs(props),\n        height: API.popupHeight\n      }),\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect\n    });\n    return API;\n  }\n\n});\n\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"id\", \"autocomplete\", \"aria-expanded\", \"aria-labelledby\", \"disabled\", \"readonly\", \"name\", \"unselectable\"];\nconst _hoisted_3 = [\"textContent\"];\nconst _hoisted_4 = [\"id\", \"aria-labelledby\", \"aria-expanded\", \"autocomplete\", \"disabled\", \"name\", \"readonly\", \"unselectable\"];\nconst _hoisted_5 = [\"textContent\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n\n  const _directive_model_text = resolveDirective(\"model-text\");\n\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectRef\",\n    class: normalizeClass([_ctx.nsSelectV2.b(), _ctx.nsSelectV2.m(_ctx.selectSize)]),\n    onClick: _cache[24] || (_cache[24] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"])),\n    onMouseenter: _cache[25] || (_cache[25] = $event => _ctx.states.comboBoxHovering = true),\n    onMouseleave: _cache[26] || (_cache[26] = $event => _ctx.states.comboBoxHovering = false)\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"popper\",\n    visible: _ctx.dropdownMenuVisible,\n    \"onUpdate:visible\": _cache[22] || (_cache[22] = $event => _ctx.dropdownMenuVisible = $event),\n    teleported: _ctx.compatTeleported,\n    \"popper-class\": [_ctx.nsSelectV2.e(\"popper\"), _ctx.popperClass],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    effect: _ctx.effect,\n    placement: \"bottom-start\",\n    pure: \"\",\n    transition: `${_ctx.nsSelectV2.namespace.value}-zoom-in-top`,\n    trigger: \"click\",\n    persistent: _ctx.persistent,\n    onBeforeShow: _ctx.handleMenuEnter,\n    onHide: _cache[23] || (_cache[23] = $event => _ctx.states.inputValue = _ctx.states.displayInputValue)\n  }, {\n    default: withCtx(() => {\n      var _a;\n\n      return [createElementVNode(\"div\", {\n        ref: \"selectionRef\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"wrapper\"), _ctx.nsSelectV2.is(\"focused\", _ctx.states.isComposing), _ctx.nsSelectV2.is(\"hovering\", _ctx.states.comboBoxHovering), _ctx.nsSelectV2.is(\"filterable\", _ctx.filterable), _ctx.nsSelectV2.is(\"disabled\", _ctx.selectDisabled)])\n      }, [_ctx.$slots.prefix ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"prefix\")])) : createCommentVNode(\"v-if\", true), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selection\"))\n      }, [_ctx.collapseTags && _ctx.modelValue.length > 0 ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n      }, [createVNode(_component_el_tag, {\n        closable: !_ctx.selectDisabled && !((_a = _ctx.states.cachedOptions[0]) == null ? void 0 : _a.disable),\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\",\n        onClose: _cache[0] || (_cache[0] = $event => _ctx.deleteTag($event, _ctx.states.cachedOptions[0]))\n      }, {\n        default: withCtx(() => {\n          var _a2;\n\n          return [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString((_a2 = _ctx.states.cachedOptions[0]) == null ? void 0 : _a2.label), 7)];\n        }),\n        _: 1\n      }, 8, [\"closable\", \"size\"]), _ctx.modelValue.length > 1 ? (openBlock(), createBlock(_component_el_tag, {\n        key: 0,\n        closable: false,\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\"\n      }, {\n        default: withCtx(() => [_ctx.collapseTagsTooltip ? (openBlock(), createBlock(_component_el_tooltip, {\n          key: 0,\n          disabled: _ctx.dropdownMenuVisible,\n          \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n          effect: _ctx.effect,\n          placement: \"bottom\",\n          teleported: false\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, \"+ \" + toDisplayString(_ctx.modelValue.length - 1), 7)]),\n          content: withCtx(() => [createElementVNode(\"div\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"selection\"))\n          }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.states.cachedOptions, (selected, idx) => {\n            return openBlock(), createElementBlock(\"div\", {\n              key: idx,\n              class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n            }, [(openBlock(), createBlock(_component_el_tag, {\n              key: _ctx.getValueKey(selected),\n              closable: !_ctx.selectDisabled && !selected.disabled,\n              size: _ctx.collapseTagSize,\n              class: \"in-tooltip\",\n              type: \"info\",\n              \"disable-transitions\": \"\",\n              onClose: $event => _ctx.deleteTag($event, selected)\n            }, {\n              default: withCtx(() => [createElementVNode(\"span\", {\n                class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n                style: normalizeStyle({\n                  maxWidth: `${_ctx.tagMaxWidth}px`\n                })\n              }, toDisplayString(_ctx.getLabel(selected)), 7)]),\n              _: 2\n            }, 1032, [\"closable\", \"size\", \"onClose\"]))], 2);\n          }), 128))], 2)]),\n          _: 1\n        }, 8, [\"disabled\", \"effect\"])) : (openBlock(), createElementBlock(\"span\", {\n          key: 1,\n          class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n          style: normalizeStyle({\n            maxWidth: `${_ctx.tagMaxWidth}px`\n          })\n        }, \"+ \" + toDisplayString(_ctx.modelValue.length - 1), 7))]),\n        _: 1\n      }, 8, [\"size\"])) : createCommentVNode(\"v-if\", true)], 2)) : (openBlock(true), createElementBlock(Fragment, {\n        key: 1\n      }, renderList(_ctx.states.cachedOptions, (selected, idx) => {\n        return openBlock(), createElementBlock(\"div\", {\n          key: idx,\n          class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n        }, [(openBlock(), createBlock(_component_el_tag, {\n          key: _ctx.getValueKey(selected),\n          closable: !_ctx.selectDisabled && !selected.disabled,\n          size: _ctx.collapseTagSize,\n          type: \"info\",\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, selected)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString(_ctx.getLabel(selected)), 7)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"onClose\"]))], 2);\n      }), 128)), createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")]),\n        style: normalizeStyle(_ctx.inputWrapperStyle)\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        autocomplete: _ctx.autocomplete,\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        autocapitalize: \"off\",\n        \"aria-expanded\": _ctx.expanded,\n        \"aria-labelledby\": _ctx.label,\n        class: normalizeClass([_ctx.nsSelectV2.is(_ctx.selectSize), _ctx.nsSelectV2.e(\"combobox-input\")]),\n        disabled: _ctx.disabled,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        name: _ctx.name,\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args)),\n        onFocus: _cache[2] || (_cache[2] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onInput: _cache[3] || (_cache[3] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onCompositionstart: _cache[4] || (_cache[4] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[5] || (_cache[5] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[6] || (_cache[6] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onKeydown: [_cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[10] || (_cache[10] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"])), _cache[11] || (_cache[11] = withKeys(withModifiers((...args) => _ctx.handleDel && _ctx.handleDel(...args), [\"stop\"]), [\"delete\"]))]\n      }, null, 42, _hoisted_2), [[_directive_model_text, _ctx.states.displayInputValue]]), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass(_ctx.nsSelectV2.e(\"input-calculator\")),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_3)) : createCommentVNode(\"v-if\", true)], 6)], 2)) : (openBlock(), createElementBlock(Fragment, {\n        key: 2\n      }, [createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")])\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-labelledby\": _ctx.label,\n        \"aria-expanded\": _ctx.expanded,\n        autocapitalize: \"off\",\n        autocomplete: _ctx.autocomplete,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"combobox-input\")),\n        disabled: _ctx.disabled,\n        name: _ctx.name,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        onCompositionstart: _cache[12] || (_cache[12] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[13] || (_cache[13] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[14] || (_cache[14] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onFocus: _cache[15] || (_cache[15] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onInput: _cache[16] || (_cache[16] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onKeydown: [_cache[17] || (_cache[17] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[18] || (_cache[18] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[19] || (_cache[19] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[20] || (_cache[20] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"]))],\n        \"onUpdate:modelValue\": _cache[21] || (_cache[21] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args))\n      }, null, 42, _hoisted_4), [[_directive_model_text, _ctx.states.displayInputValue]])], 2), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-calculator\")]),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_5)) : createCommentVNode(\"v-if\", true)], 64)), _ctx.shouldShowPlaceholder ? (openBlock(), createElementBlock(\"span\", {\n        key: 3,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"placeholder\"), _ctx.nsSelectV2.is(\"transparent\", _ctx.states.isComposing || (_ctx.placeholder && _ctx.multiple ? _ctx.modelValue.length === 0 : !_ctx.hasModelValue))])\n      }, toDisplayString(_ctx.currentPlaceholder), 3)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"suffix\"))\n      }, [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.iconReverse])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n        _: 1\n      }, 8, [\"class\"])), [[vShow, !_ctx.showClearBtn]]) : createCommentVNode(\"v-if\", true), _ctx.showClearBtn && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\")]),\n        onClick: withModifiers(_ctx.handleClear, [\"prevent\", \"stop\"])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.validateState && _ctx.validateIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 2,\n        class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsInput.e(\"validateIcon\")])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.validateIcon)))]),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 2)];\n    }),\n    content: withCtx(() => [createVNode(_component_el_select_menu, {\n      ref: \"menuRef\",\n      data: _ctx.filteredOptions,\n      width: _ctx.popperSize,\n      \"hovering-index\": _ctx.states.hoveringIndex,\n      \"scrollbar-always-on\": _ctx.scrollbarAlwaysOn\n    }, {\n      default: withCtx(scope => [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(scope)))]),\n      empty: withCtx(() => [renderSlot(_ctx.$slots, \"empty\", {}, () => [createElementVNode(\"p\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"empty\"))\n      }, toDisplayString(_ctx.emptyText ? _ctx.emptyText : \"\"), 3)])]),\n      _: 3\n    }, 8, [\"data\", \"width\", \"hovering-index\", \"scrollbar-always-on\"])]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"effect\", \"transition\", \"persistent\", \"onBeforeShow\"])], 34)), [[_directive_click_outside, _ctx.handleClickOutside, _ctx.popperRef]]);\n}\n\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Select as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElSelectMenu","ElTag","ElTooltip","ElIcon","directives","ClickOutside","ModelText","props","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","useSelect","provide","selectV2InjectionKey","reactive","toRefs","height","API","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","_createElementBlock","ref","class","_ctx","b","m","onClick","_cache","onMouseenter","comboBoxHovering","onMouseleave","_createVNode","visible","teleported","e","effect","placement","pure","transition","namespace","value","trigger","persistent","onBeforeShow","onHide","inputValue","displayInputValue","default","_withCtx","_a","_createElementVNode","_renderSlot","_createCommentVNode","_openBlock","key","closable","size","type","_a2","style","maxWidth","_toDisplayString","cachedOptions","_","disabled","selected","onClose","_withDirectives","id","autocomplete","autocapitalize","is","role","readonly","spellcheck","unselectable","expanded","onFocus","onInput","onCompositionstart","handleCompositionStart","onCompositionupdate","handleCompositionUpdate","onCompositionend","onKeydown","_withKeys","_hoisted_2","textContent","_hoisted_3","_hoisted_4","_hoisted_5","content","data","width","empty"],"sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelectV2.b(), nsSelectV2.m(selectSize)]\"\n    @click.stop=\"toggleMenu\"\n    @mouseenter=\"states.comboBoxHovering = true\"\n    @mouseleave=\"states.comboBoxHovering = false\"\n  >\n    <el-tooltip\n      ref=\"popper\"\n      v-model:visible=\"dropdownMenuVisible\"\n      :teleported=\"compatTeleported\"\n      :popper-class=\"[nsSelectV2.e('popper'), popperClass]\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      placement=\"bottom-start\"\n      pure\n      :transition=\"`${nsSelectV2.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.inputValue = states.displayInputValue\"\n    >\n      <template #default>\n        <div\n          ref=\"selectionRef\"\n          :class=\"[\n            nsSelectV2.e('wrapper'),\n            nsSelectV2.is('focused', states.isComposing),\n            nsSelectV2.is('hovering', states.comboBoxHovering),\n            nsSelectV2.is('filterable', filterable),\n            nsSelectV2.is('disabled', selectDisabled),\n          ]\"\n        >\n          <div v-if=\"$slots.prefix\">\n            <slot name=\"prefix\"></slot>\n          </div>\n          <div v-if=\"multiple\" :class=\"nsSelectV2.e('selection')\">\n            <template v-if=\"collapseTags && modelValue.length > 0\">\n              <div :class=\"nsSelectV2.e('selected-item')\">\n                <el-tag\n                  :closable=\"\n                    !selectDisabled && !states.cachedOptions[0]?.disable\n                  \"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, states.cachedOptions[0])\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ states.cachedOptions[0]?.label }}</span\n                  >\n                </el-tag>\n                <el-tag\n                  v-if=\"modelValue.length > 1\"\n                  :closable=\"false\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                >\n                  <el-tooltip\n                    v-if=\"collapseTagsTooltip\"\n                    :disabled=\"dropdownMenuVisible\"\n                    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                    :effect=\"effect\"\n                    placement=\"bottom\"\n                    :teleported=\"false\"\n                  >\n                    <template #default>\n                      <span\n                        :class=\"nsSelectV2.e('tags-text')\"\n                        :style=\"{\n                          maxWidth: `${tagMaxWidth}px`,\n                        }\"\n                        >+ {{ modelValue.length - 1 }}</span\n                      >\n                    </template>\n                    <template #content>\n                      <div :class=\"nsSelectV2.e('selection')\">\n                        <div\n                          v-for=\"(selected, idx) in states.cachedOptions\"\n                          :key=\"idx\"\n                          :class=\"nsSelectV2.e('selected-item')\"\n                        >\n                          <el-tag\n                            :key=\"getValueKey(selected)\"\n                            :closable=\"!selectDisabled && !selected.disabled\"\n                            :size=\"collapseTagSize\"\n                            class=\"in-tooltip\"\n                            type=\"info\"\n                            disable-transitions\n                            @close=\"deleteTag($event, selected)\"\n                          >\n                            <span\n                              :class=\"nsSelectV2.e('tags-text')\"\n                              :style=\"{\n                                maxWidth: `${tagMaxWidth}px`,\n                              }\"\n                              >{{ getLabel(selected) }}</span\n                            >\n                          </el-tag>\n                        </div>\n                      </div>\n                    </template>\n                  </el-tooltip>\n                  <span\n                    v-else\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >+ {{ modelValue.length - 1 }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n\n            <template v-else>\n              <div\n                v-for=\"(selected, idx) in states.cachedOptions\"\n                :key=\"idx\"\n                :class=\"nsSelectV2.e('selected-item')\"\n              >\n                <el-tag\n                  :key=\"getValueKey(selected)\"\n                  :closable=\"!selectDisabled && !selected.disabled\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, selected)\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ getLabel(selected) }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n              :style=\"inputWrapperStyle\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                :autocomplete=\"autocomplete\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-labelledby=\"label\"\n                :class=\"[\n                  nsSelectV2.is(selectSize),\n                  nsSelectV2.e('combobox-input'),\n                ]\"\n                :disabled=\"disabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @update:modelValue=\"onUpdateInputValue\"\n                @focus=\"handleFocus\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelectV2.e('input-calculator')\"\n                v-text=\"states.displayInputValue\"\n              >\n              </span>\n            </div>\n          </div>\n          <template v-else>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                :aria-labelledby=\"label\"\n                :aria-expanded=\"expanded\"\n                autocapitalize=\"off\"\n                :autocomplete=\"autocomplete\"\n                :class=\"nsSelectV2.e('combobox-input')\"\n                :disabled=\"disabled\"\n                :name=\"name\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @focus=\"handleFocus\"\n                @input=\"onInput\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @update:modelValue=\"onUpdateInputValue\"\n              />\n            </div>\n            <span\n              v-if=\"filterable\"\n              ref=\"calculatorRef\"\n              aria-hidden=\"true\"\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-calculator'),\n              ]\"\n              v-text=\"states.displayInputValue\"\n            >\n            </span>\n          </template>\n          <span\n            v-if=\"shouldShowPlaceholder\"\n            :class=\"[\n              nsSelectV2.e('placeholder'),\n              nsSelectV2.is(\n                'transparent',\n                states.isComposing ||\n                  (placeholder && multiple\n                    ? modelValue.length === 0\n                    : !hasModelValue)\n              ),\n            ]\"\n          >\n            {{ currentPlaceholder }}\n          </span>\n          <span :class=\"nsSelectV2.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon')]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon\"\n              :class=\"[nsInput.e('icon'), nsInput.e('validateIcon')]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </span>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\"></slot>\n          </template>\n          <template #empty>\n            <slot name=\"empty\">\n              <p :class=\"nsSelectV2.e('empty')\">\n                {{ emptyText ? emptyText : '' }}\n              </p>\n            </slot>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, provide, toRefs, reactive, vModelText } from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '@element-plus/constants'\nimport ElSelectMenu from './select-dropdown.vue'\nimport useSelect from './useSelect'\nimport { selectV2InjectionKey } from './token'\nimport { SelectProps } from './defaults'\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside, ModelText: vModelText },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, { emit }) {\n    const API = useSelect(props, emit)\n    // TODO, remove the any cast to align the actual API.\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n      }),\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    } as any)\n\n    return API\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}