{"ast":null,"code":"import { defineComponent, inject, ref, watch, nextTick, computed, unref, provide, resolveComponent, openBlock, createBlock, mergeProps, withCtx, normalizeClass, normalizeStyle, withModifiers, resolveDynamicComponent, createCommentVNode, createElementBlock, createElementVNode, renderSlot, toDisplayString } from 'vue';\nimport dayjs from 'dayjs';\nimport { isEqual } from 'lodash-unified';\nimport { onClickOutside } from '@vueuse/core';\nimport '../../../../hooks/index.mjs';\nimport '../../../../tokens/index.mjs';\nimport { ElInput } from '../../../input/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ElTooltip } from '../../../tooltip/index.mjs';\nimport '../../../../utils/index.mjs';\nimport '../../../../constants/index.mjs';\nimport { Clock, Calendar } from '@element-plus/icons-vue';\nimport { timePickerDefaultProps } from './props.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { isEmpty } from '../../../../utils/types.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { formContextKey, formItemContextKey } from '../../../../tokens/form.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\nimport { useSize } from '../../../../hooks/use-common-props/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nconst dateEquals = function (a, b) {\n  const aIsDate = a instanceof Date;\n  const bIsDate = b instanceof Date;\n\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime();\n  }\n\n  if (!aIsDate && !bIsDate) {\n    return a === b;\n  }\n\n  return false;\n};\n\nconst valueEquals = function (a, b) {\n  const aIsArray = Array.isArray(a);\n  const bIsArray = Array.isArray(b);\n\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every((item, index) => dateEquals(item, b[index]));\n  }\n\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b);\n  }\n\n  return false;\n};\n\nconst parser = function (date, format, lang) {\n  const day = isEmpty(format) || format === \"x\" ? dayjs(date).locale(lang) : dayjs(date, format).locale(lang);\n  return day.isValid() ? day : void 0;\n};\n\nconst formatter = function (date, format, lang) {\n  if (isEmpty(format)) return date;\n  if (format === \"x\") return +date;\n  return dayjs(date).locale(lang).format(format);\n};\n\nconst _sfc_main = defineComponent({\n  name: \"Picker\",\n  components: {\n    ElInput,\n    ElTooltip,\n    ElIcon\n  },\n  props: timePickerDefaultProps,\n  emits: [\"update:modelValue\", \"change\", \"focus\", \"blur\", \"calendar-change\", \"panel-change\", \"visible-change\"],\n\n  setup(props, ctx) {\n    const {\n      lang\n    } = useLocale();\n    const elForm = inject(formContextKey, {});\n    const elFormItem = inject(formItemContextKey, {});\n    const elPopperOptions = inject(\"ElPopperOptions\", {});\n    const refPopper = ref();\n    const inputRef = ref();\n    const pickerVisible = ref(false);\n    const pickerActualVisible = ref(false);\n    const valueOnOpen = ref(null);\n    watch(pickerVisible, val => {\n      var _a;\n\n      if (!val) {\n        userInput.value = null;\n        nextTick(() => {\n          emitChange(props.modelValue);\n        });\n        ctx.emit(\"blur\");\n        blurInput();\n        props.validateEvent && ((_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"blur\").catch(err => debugWarn(err)));\n      } else {\n        valueOnOpen.value = props.modelValue;\n      }\n    });\n\n    const emitChange = (val, isClear) => {\n      var _a;\n\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        ctx.emit(\"change\", val);\n        props.validateEvent && ((_a = elFormItem.validate) == null ? void 0 : _a.call(elFormItem, \"change\").catch(err => debugWarn(err)));\n      }\n    };\n\n    const emitInput = val => {\n      if (!valueEquals(props.modelValue, val)) {\n        let formatValue;\n\n        if (Array.isArray(val)) {\n          formatValue = val.map(_ => formatter(_, props.valueFormat, lang.value));\n        } else if (val) {\n          formatValue = formatter(val, props.valueFormat, lang.value);\n        }\n\n        ctx.emit(\"update:modelValue\", val ? formatValue : val, lang.value);\n      }\n    };\n\n    const refInput = computed(() => {\n      if (inputRef.value) {\n        const _r = isRangeInput.value ? inputRef.value : inputRef.value.$el;\n\n        return Array.from(_r.querySelectorAll(\"input\"));\n      }\n\n      return [];\n    });\n    const refStartInput = computed(() => {\n      return refInput == null ? void 0 : refInput.value[0];\n    });\n    const refEndInput = computed(() => {\n      return refInput == null ? void 0 : refInput.value[1];\n    });\n\n    const setSelectionRange = (start, end, pos) => {\n      const _inputs = refInput.value;\n      if (!_inputs.length) return;\n\n      if (!pos || pos === \"min\") {\n        _inputs[0].setSelectionRange(start, end);\n\n        _inputs[0].focus();\n      } else if (pos === \"max\") {\n        _inputs[1].setSelectionRange(start, end);\n\n        _inputs[1].focus();\n      }\n    };\n\n    const onPick = (date = \"\", visible = false) => {\n      pickerVisible.value = visible;\n      let result;\n\n      if (Array.isArray(date)) {\n        result = date.map(_ => _.toDate());\n      } else {\n        result = date ? date.toDate() : date;\n      }\n\n      userInput.value = null;\n      emitInput(result);\n    };\n\n    const onBeforeShow = () => {\n      pickerActualVisible.value = true;\n    };\n\n    const onShow = () => {\n      ctx.emit(\"visible-change\", true);\n    };\n\n    const onHide = () => {\n      pickerActualVisible.value = false;\n      ctx.emit(\"visible-change\", false);\n    };\n\n    const focus = (focusStartInput = true) => {\n      let input = refStartInput.value;\n\n      if (!focusStartInput && isRangeInput.value) {\n        input = refEndInput.value;\n      }\n\n      if (input) {\n        input.focus();\n      }\n    };\n\n    const handleFocus = e => {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value) return;\n      pickerVisible.value = true;\n      ctx.emit(\"focus\", e);\n    };\n\n    const handleBlur = () => {\n      var _a;\n\n      (_a = refPopper.value) == null ? void 0 : _a.onClose();\n      blurInput();\n    };\n\n    const pickerDisabled = computed(() => {\n      return props.disabled || elForm.disabled;\n    });\n    const parsedValue = computed(() => {\n      let result;\n\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          result = pickerOptions.value.getDefaultValue();\n        }\n      } else {\n        if (Array.isArray(props.modelValue)) {\n          result = props.modelValue.map(_ => parser(_, props.valueFormat, lang.value));\n        } else {\n          result = parser(props.modelValue, props.valueFormat, lang.value);\n        }\n      }\n\n      if (pickerOptions.value.getRangeAvailableTime) {\n        const availableResult = pickerOptions.value.getRangeAvailableTime(result);\n\n        if (!isEqual(availableResult, result)) {\n          result = availableResult;\n          emitInput(Array.isArray(result) ? result.map(_ => _.toDate()) : result.toDate());\n        }\n      }\n\n      if (Array.isArray(result) && result.some(_ => !_)) {\n        result = [];\n      }\n\n      return result;\n    });\n    const displayValue = computed(() => {\n      if (!pickerOptions.value.panelReady) return;\n      const formattedValue = formatDayjsToString(parsedValue.value);\n\n      if (Array.isArray(userInput.value)) {\n        return [userInput.value[0] || formattedValue && formattedValue[0] || \"\", userInput.value[1] || formattedValue && formattedValue[1] || \"\"];\n      } else if (userInput.value !== null) {\n        return userInput.value;\n      }\n\n      if (!isTimePicker.value && valueIsEmpty.value) return;\n      if (!pickerVisible.value && valueIsEmpty.value) return;\n\n      if (formattedValue) {\n        return isDatesPicker.value ? formattedValue.join(\", \") : formattedValue;\n      }\n\n      return \"\";\n    });\n    const isTimeLikePicker = computed(() => props.type.includes(\"time\"));\n    const isTimePicker = computed(() => props.type.startsWith(\"time\"));\n    const isDatesPicker = computed(() => props.type === \"dates\");\n    const triggerIcon = computed(() => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar));\n    const showClose = ref(false);\n\n    const onClearIconClick = event => {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (showClose.value) {\n        event.stopPropagation();\n        emitInput(null);\n        emitChange(null, true);\n        showClose.value = false;\n        pickerVisible.value = false;\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear();\n      }\n    };\n\n    const valueIsEmpty = computed(() => {\n      return !props.modelValue || Array.isArray(props.modelValue) && !props.modelValue.length;\n    });\n\n    const onMouseEnter = () => {\n      if (props.readonly || pickerDisabled.value) return;\n\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true;\n      }\n    };\n\n    const onMouseLeave = () => {\n      showClose.value = false;\n    };\n\n    const isRangeInput = computed(() => {\n      return props.type.includes(\"range\");\n    });\n    const pickerSize = useSize();\n    const popperPaneRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = refPopper.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const popperEl = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = unref(refPopper)) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const actualInputRef = computed(() => {\n      var _a;\n\n      if (unref(isRangeInput)) {\n        return unref(inputRef);\n      }\n\n      return (_a = unref(inputRef)) == null ? void 0 : _a.$el;\n    });\n    onClickOutside(actualInputRef, e => {\n      const unrefedPopperEl = unref(popperEl);\n      const inputEl = unref(actualInputRef);\n      if (unrefedPopperEl && (e.target === unrefedPopperEl || e.composedPath().includes(unrefedPopperEl)) || e.target === inputEl || e.composedPath().includes(inputEl)) return;\n      pickerVisible.value = false;\n    });\n    const userInput = ref(null);\n\n    const handleChange = () => {\n      if (userInput.value) {\n        const value = parseUserInputToDayjs(displayValue.value);\n\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(Array.isArray(value) ? value.map(_ => _.toDate()) : value.toDate());\n            userInput.value = null;\n          }\n        }\n      }\n\n      if (userInput.value === \"\") {\n        emitInput(null);\n        emitChange(null);\n        userInput.value = null;\n      }\n    };\n\n    const blurInput = () => {\n      refInput.value.forEach(input => input.blur());\n    };\n\n    const parseUserInputToDayjs = value => {\n      if (!value) return null;\n      return pickerOptions.value.parseUserInput(value);\n    };\n\n    const formatDayjsToString = value => {\n      if (!value) return null;\n      return pickerOptions.value.formatToString(value);\n    };\n\n    const isValidValue = value => {\n      return pickerOptions.value.isValidValue(value);\n    };\n\n    const handleKeydown = event => {\n      const code = event.code;\n\n      if (code === EVENT_CODE.esc) {\n        pickerVisible.value = false;\n        event.stopPropagation();\n        return;\n      }\n\n      if (code === EVENT_CODE.tab) {\n        if (!isRangeInput.value) {\n          handleChange();\n          pickerVisible.value = false;\n          event.stopPropagation();\n        } else {\n          setTimeout(() => {\n            if (!refInput.value.includes(document.activeElement)) {\n              pickerVisible.value = false;\n              blurInput();\n            }\n          }, 0);\n        }\n\n        return;\n      }\n\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (userInput.value === null || userInput.value === \"\" || isValidValue(parseUserInputToDayjs(displayValue.value))) {\n          handleChange();\n          pickerVisible.value = false;\n        }\n\n        event.stopPropagation();\n        return;\n      }\n\n      if (userInput.value) {\n        event.stopPropagation();\n        return;\n      }\n\n      if (pickerOptions.value.handleKeydown) {\n        pickerOptions.value.handleKeydown(event);\n      }\n    };\n\n    const onUserInput = e => {\n      userInput.value = e;\n    };\n\n    const handleStartInput = event => {\n      if (userInput.value) {\n        userInput.value = [event.target.value, userInput.value[1]];\n      } else {\n        userInput.value = [event.target.value, null];\n      }\n    };\n\n    const handleEndInput = event => {\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], event.target.value];\n      } else {\n        userInput.value = [null, event.target.value];\n      }\n    };\n\n    const handleStartChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[0]);\n\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), displayValue.value[1]];\n        const newValue = [value, parsedValue.value && parsedValue.value[1]];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    const handleEndChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[1]);\n\n      if (value && value.isValid()) {\n        userInput.value = [displayValue.value[0], formatDayjsToString(value)];\n        const newValue = [parsedValue.value && parsedValue.value[0], value];\n\n        if (isValidValue(newValue)) {\n          emitInput(newValue);\n          userInput.value = null;\n        }\n      }\n    };\n\n    const pickerOptions = ref({});\n\n    const onSetPickerOption = e => {\n      pickerOptions.value[e[0]] = e[1];\n      pickerOptions.value.panelReady = true;\n    };\n\n    const onCalendarChange = e => {\n      ctx.emit(\"calendar-change\", e);\n    };\n\n    const onPanelChange = (value, mode, view) => {\n      ctx.emit(\"panel-change\", value, mode, view);\n    };\n\n    provide(\"EP_PICKER_BASE\", {\n      props\n    });\n    return {\n      elPopperOptions,\n      isDatesPicker,\n      handleEndChange,\n      handleStartChange,\n      handleStartInput,\n      handleEndInput,\n      onUserInput,\n      handleChange,\n      handleKeydown,\n      popperPaneRef,\n      onClickOutside,\n      pickerSize,\n      isRangeInput,\n      onMouseLeave,\n      onMouseEnter,\n      onClearIconClick,\n      showClose,\n      triggerIcon,\n      onPick,\n      handleFocus,\n      handleBlur,\n      pickerVisible,\n      pickerActualVisible,\n      displayValue,\n      parsedValue,\n      setSelectionRange,\n      refPopper,\n      inputRef,\n      pickerDisabled,\n      onSetPickerOption,\n      onCalendarChange,\n      onPanelChange,\n      focus,\n      onShow,\n      onBeforeShow,\n      onHide\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\nconst _hoisted_2 = {\n  class: \"el-range-separator\"\n};\nconst _hoisted_3 = [\"id\", \"name\", \"placeholder\", \"value\", \"disabled\", \"readonly\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_el_input = resolveComponent(\"el-input\");\n\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  return openBlock(), createBlock(_component_el_tooltip, mergeProps({\n    ref: \"refPopper\",\n    visible: _ctx.pickerVisible,\n    \"onUpdate:visible\": _cache[17] || (_cache[17] = $event => _ctx.pickerVisible = $event),\n    effect: \"light\",\n    pure: \"\",\n    trigger: \"click\"\n  }, _ctx.$attrs, {\n    \"append-to-body\": \"\",\n    transition: \"el-zoom-in-top\",\n    \"popper-class\": `el-picker__popper ${_ctx.popperClass}`,\n    \"popper-options\": _ctx.elPopperOptions,\n    \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"hide-after\": 0,\n    persistent: \"\",\n    onBeforeShow: _ctx.onBeforeShow,\n    onShow: _ctx.onShow,\n    onHide: _ctx.onHide\n  }), {\n    default: withCtx(() => [!_ctx.isRangeInput ? (openBlock(), createBlock(_component_el_input, {\n      key: 0,\n      id: _ctx.id,\n      ref: \"inputRef\",\n      \"model-value\": _ctx.displayValue,\n      name: _ctx.name,\n      size: _ctx.pickerSize,\n      disabled: _ctx.pickerDisabled,\n      placeholder: _ctx.placeholder,\n      class: normalizeClass([\"el-date-editor\", [\"el-date-editor--\" + _ctx.type, _ctx.$attrs.class || void 0]]),\n      style: normalizeStyle(_ctx.$attrs.style || void 0),\n      readonly: !_ctx.editable || _ctx.readonly || _ctx.isDatesPicker || _ctx.type === \"week\",\n      onInput: _ctx.onUserInput,\n      onFocus: _ctx.handleFocus,\n      onKeydown: _ctx.handleKeydown,\n      onChange: _ctx.handleChange,\n      onMouseenter: _ctx.onMouseEnter,\n      onMouseleave: _ctx.onMouseLeave,\n      onClick: _cache[0] || (_cache[0] = withModifiers(() => {}, [\"stop\"]))\n    }, {\n      prefix: withCtx(() => [_ctx.triggerIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: \"el-input__icon\",\n        onClick: _ctx.handleFocus\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.triggerIcon)))]),\n        _: 1\n      }, 8, [\"onClick\"])) : createCommentVNode(\"v-if\", true)]),\n      suffix: withCtx(() => [_ctx.showClose && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: \"el-input__icon clear-icon\",\n        onClick: _ctx.onClearIconClick\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"onClick\"])) : createCommentVNode(\"v-if\", true)]),\n      _: 1\n    }, 8, [\"id\", \"model-value\", \"name\", \"size\", \"disabled\", \"placeholder\", \"class\", \"style\", \"readonly\", \"onInput\", \"onFocus\", \"onKeydown\", \"onChange\", \"onMouseenter\", \"onMouseleave\"])) : (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      ref: \"inputRef\",\n      class: normalizeClass([\"el-date-editor el-range-editor el-input__inner\", [\"el-date-editor--\" + _ctx.type, _ctx.pickerSize ? `el-range-editor--${_ctx.pickerSize}` : \"\", _ctx.pickerDisabled ? \"is-disabled\" : \"\", _ctx.pickerVisible ? \"is-active\" : \"\", _ctx.$attrs.class || void 0]]),\n      style: normalizeStyle(_ctx.$attrs.style || void 0),\n      onClick: _cache[7] || (_cache[7] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n      onMouseenter: _cache[8] || (_cache[8] = (...args) => _ctx.onMouseEnter && _ctx.onMouseEnter(...args)),\n      onMouseleave: _cache[9] || (_cache[9] = (...args) => _ctx.onMouseLeave && _ctx.onMouseLeave(...args)),\n      onKeydown: _cache[10] || (_cache[10] = (...args) => _ctx.handleKeydown && _ctx.handleKeydown(...args))\n    }, [_ctx.triggerIcon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 0,\n      class: \"el-input__icon el-range__icon\",\n      onClick: _ctx.handleFocus\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.triggerIcon)))]),\n      _: 1\n    }, 8, [\"onClick\"])) : createCommentVNode(\"v-if\", true), createElementVNode(\"input\", {\n      id: _ctx.id && _ctx.id[0],\n      autocomplete: \"off\",\n      name: _ctx.name && _ctx.name[0],\n      placeholder: _ctx.startPlaceholder,\n      value: _ctx.displayValue && _ctx.displayValue[0],\n      disabled: _ctx.pickerDisabled,\n      readonly: !_ctx.editable || _ctx.readonly,\n      class: \"el-range-input\",\n      onInput: _cache[1] || (_cache[1] = (...args) => _ctx.handleStartInput && _ctx.handleStartInput(...args)),\n      onChange: _cache[2] || (_cache[2] = (...args) => _ctx.handleStartChange && _ctx.handleStartChange(...args)),\n      onFocus: _cache[3] || (_cache[3] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args))\n    }, null, 40, _hoisted_1), renderSlot(_ctx.$slots, \"range-separator\", {}, () => [createElementVNode(\"span\", _hoisted_2, toDisplayString(_ctx.rangeSeparator), 1)]), createElementVNode(\"input\", {\n      id: _ctx.id && _ctx.id[1],\n      autocomplete: \"off\",\n      name: _ctx.name && _ctx.name[1],\n      placeholder: _ctx.endPlaceholder,\n      value: _ctx.displayValue && _ctx.displayValue[1],\n      disabled: _ctx.pickerDisabled,\n      readonly: !_ctx.editable || _ctx.readonly,\n      class: \"el-range-input\",\n      onFocus: _cache[4] || (_cache[4] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n      onInput: _cache[5] || (_cache[5] = (...args) => _ctx.handleEndInput && _ctx.handleEndInput(...args)),\n      onChange: _cache[6] || (_cache[6] = (...args) => _ctx.handleEndChange && _ctx.handleEndChange(...args))\n    }, null, 40, _hoisted_3), _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n      key: 1,\n      class: normalizeClass([\"el-input__icon el-range__close-icon\", {\n        \"el-range__close-icon--hidden\": !_ctx.showClose\n      }]),\n      onClick: _ctx.onClearIconClick\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 38))]),\n    content: withCtx(() => [renderSlot(_ctx.$slots, \"default\", {\n      visible: _ctx.pickerVisible,\n      actualVisible: _ctx.pickerActualVisible,\n      parsedValue: _ctx.parsedValue,\n      format: _ctx.format,\n      unlinkPanels: _ctx.unlinkPanels,\n      type: _ctx.type,\n      defaultValue: _ctx.defaultValue,\n      onPick: _cache[11] || (_cache[11] = (...args) => _ctx.onPick && _ctx.onPick(...args)),\n      onSelectRange: _cache[12] || (_cache[12] = (...args) => _ctx.setSelectionRange && _ctx.setSelectionRange(...args)),\n      onSetPickerOption: _cache[13] || (_cache[13] = (...args) => _ctx.onSetPickerOption && _ctx.onSetPickerOption(...args)),\n      onCalendarChange: _cache[14] || (_cache[14] = (...args) => _ctx.onCalendarChange && _ctx.onCalendarChange(...args)),\n      onPanelChange: _cache[15] || (_cache[15] = (...args) => _ctx.onPanelChange && _ctx.onPanelChange(...args)),\n      onMousedown: _cache[16] || (_cache[16] = withModifiers(() => {}, [\"stop\"]))\n    })]),\n    _: 3\n  }, 16, [\"visible\", \"popper-class\", \"popper-options\", \"onBeforeShow\", \"onShow\", \"onHide\"]);\n}\n\nvar CommonPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { CommonPicker as default };","map":{"version":3,"mappings":"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","names":["dateEquals","a","b","aIsDate","bIsDate","getTime","valueEquals","Array","isArray","aIsArray","bIsArray","length","every","item","index","parser","date","format","lang","day","dayjs","locale","isValid","formatter","isEmpty","_sfc_main","defineComponent","name","components","ElInput","ElTooltip","ElIcon","props","emits","setup","ctx","useLocale","inject","formContextKey","formItemContextKey","refPopper","inputRef","pickerVisible","ref","pickerActualVisible","valueOnOpen","watch","val","_a","userInput","value","nextTick","emitChange","blurInput","formatValue","_","valueFormat","computed","refInput","setSelectionRange","_inputs","pos","start","end","focus","visible","result","emitInput","emit","onHide","refStartInput","input","pickerDisabled","e","pickerOptions","getDefaultValue","modelValue","getRangeAvailableTime","panelReady","formattedValue","formatDayjsToString","valueIsEmpty","isTimeLikePicker","includes","isTimePicker","onClearIconClick","event","showClose","onMouseEnter","isRangeInput","popperPaneRef","_b","unref","onClickOutside","forEach","parseUserInput","formatToString","handleChange","setTimeout","document","code","handleKeydown","handleStartInput","displayValue","newValue","parsedValue","provide","elPopperOptions","isDatesPicker","handleEndChange","handleStartChange","handleEndInput","onUserInput","pickerSize","onMouseLeave","triggerIcon","onPick","handleFocus","handleBlur","onSetPickerOption","onCalendarChange","_hoisted_1","_hoisted_2","class","_hoisted_3","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_component_el_input","_component_el_tooltip","effect","pure","trigger","transition","onBeforeShow","onShow","default","_openBlock","key","id","size","disabled","placeholder","style","readonly","onInput","onFocus","onKeydown","onChange","onMouseleave","onClick","prefix","_createCommentVNode","suffix","createCommentVNode","onMouseenter","_createElementVNode","autocomplete","_renderSlot","content","actualVisible","unlinkPanels","type","defaultValue","onSelectRange"],"sources":["../../../../../../../packages/components/time-picker/src/common/picker.vue"],"sourcesContent":["<template>\n  <el-tooltip\n    ref=\"refPopper\"\n    v-model:visible=\"pickerVisible\"\n    effect=\"light\"\n    pure\n    trigger=\"click\"\n    v-bind=\"$attrs\"\n    append-to-body\n    transition=\"el-zoom-in-top\"\n    :popper-class=\"`el-picker__popper ${popperClass}`\"\n    :popper-options=\"elPopperOptions\"\n    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n    :gpu-acceleration=\"false\"\n    :stop-popper-mouse-event=\"false\"\n    :hide-after=\"0\"\n    persistent\n    @before-show=\"onBeforeShow\"\n    @show=\"onShow\"\n    @hide=\"onHide\"\n  >\n    <template #default>\n      <el-input\n        v-if=\"!isRangeInput\"\n        :id=\"id\"\n        ref=\"inputRef\"\n        :model-value=\"displayValue\"\n        :name=\"name\"\n        :size=\"pickerSize\"\n        :disabled=\"pickerDisabled\"\n        :placeholder=\"placeholder\"\n        class=\"el-date-editor\"\n        :class=\"['el-date-editor--' + type, $attrs.class || undefined]\"\n        :style=\"$attrs.style || undefined\"\n        :readonly=\"!editable || readonly || isDatesPicker || type === 'week'\"\n        @input=\"onUserInput\"\n        @focus=\"handleFocus\"\n        @keydown=\"handleKeydown\"\n        @change=\"handleChange\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @click.stop\n      >\n        <template #prefix>\n          <el-icon\n            v-if=\"triggerIcon\"\n            class=\"el-input__icon\"\n            @click=\"handleFocus\"\n          >\n            <component :is=\"triggerIcon\"></component>\n          </el-icon>\n        </template>\n        <template #suffix>\n          <el-icon\n            v-if=\"showClose && clearIcon\"\n            class=\"el-input__icon clear-icon\"\n            @click=\"onClearIconClick\"\n          >\n            <component :is=\"clearIcon\" />\n          </el-icon>\n        </template>\n      </el-input>\n      <div\n        v-else\n        ref=\"inputRef\"\n        class=\"el-date-editor el-range-editor el-input__inner\"\n        :class=\"[\n          'el-date-editor--' + type,\n          pickerSize ? `el-range-editor--${pickerSize}` : '',\n          pickerDisabled ? 'is-disabled' : '',\n          pickerVisible ? 'is-active' : '',\n          $attrs.class || undefined,\n        ]\"\n        :style=\"$attrs.style || undefined\"\n        @click=\"handleFocus\"\n        @mouseenter=\"onMouseEnter\"\n        @mouseleave=\"onMouseLeave\"\n        @keydown=\"handleKeydown\"\n      >\n        <el-icon\n          v-if=\"triggerIcon\"\n          class=\"el-input__icon el-range__icon\"\n          @click=\"handleFocus\"\n        >\n          <component :is=\"triggerIcon\"></component>\n        </el-icon>\n        <input\n          :id=\"id && id[0]\"\n          autocomplete=\"off\"\n          :name=\"name && name[0]\"\n          :placeholder=\"startPlaceholder\"\n          :value=\"displayValue && displayValue[0]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          class=\"el-range-input\"\n          @input=\"handleStartInput\"\n          @change=\"handleStartChange\"\n          @focus=\"handleFocus\"\n        />\n        <slot name=\"range-separator\">\n          <span class=\"el-range-separator\">{{ rangeSeparator }}</span>\n        </slot>\n        <input\n          :id=\"id && id[1]\"\n          autocomplete=\"off\"\n          :name=\"name && name[1]\"\n          :placeholder=\"endPlaceholder\"\n          :value=\"displayValue && displayValue[1]\"\n          :disabled=\"pickerDisabled\"\n          :readonly=\"!editable || readonly\"\n          class=\"el-range-input\"\n          @focus=\"handleFocus\"\n          @input=\"handleEndInput\"\n          @change=\"handleEndChange\"\n        />\n        <el-icon\n          v-if=\"clearIcon\"\n          class=\"el-input__icon el-range__close-icon\"\n          :class=\"{\n            'el-range__close-icon--hidden': !showClose,\n          }\"\n          @click=\"onClearIconClick\"\n        >\n          <component :is=\"clearIcon\" />\n        </el-icon>\n      </div>\n    </template>\n    <template #content>\n      <slot\n        :visible=\"pickerVisible\"\n        :actual-visible=\"pickerActualVisible\"\n        :parsed-value=\"parsedValue\"\n        :format=\"format\"\n        :unlink-panels=\"unlinkPanels\"\n        :type=\"type\"\n        :default-value=\"defaultValue\"\n        @pick=\"onPick\"\n        @select-range=\"setSelectionRange\"\n        @set-picker-option=\"onSetPickerOption\"\n        @calendar-change=\"onCalendarChange\"\n        @panel-change=\"onPanelChange\"\n        @mousedown.stop\n      ></slot>\n    </template>\n  </el-tooltip>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  computed,\n  nextTick,\n  inject,\n  watch,\n  provide,\n  unref,\n} from 'vue'\nimport dayjs from 'dayjs'\nimport { isEqual } from 'lodash-unified'\nimport { onClickOutside } from '@vueuse/core'\nimport { useLocale, useSize } from '@element-plus/hooks'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport ElInput from '@element-plus/components/input'\nimport ElIcon from '@element-plus/components/icon'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { debugWarn, isEmpty } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { Clock, Calendar } from '@element-plus/icons-vue'\nimport { timePickerDefaultProps } from './props'\n\nimport type { Dayjs } from 'dayjs'\nimport type { ComponentPublicInstance } from 'vue'\nimport type { FormContext, FormItemContext } from '@element-plus/tokens'\nimport type { Options } from '@popperjs/core'\n\ninterface PickerOptions {\n  isValidValue: (date: Dayjs) => boolean\n  handleKeydown: (event: KeyboardEvent) => void\n  parseUserInput: (value: Dayjs) => dayjs.Dayjs\n  formatToString: (value: Dayjs) => string | string[]\n  getRangeAvailableTime: (date: Dayjs) => dayjs.Dayjs\n  getDefaultValue: () => Dayjs\n  panelReady: boolean\n  handleClear: () => void\n}\n\n// Date object and string\nconst dateEquals = function (a: Date | any, b: Date | any) {\n  const aIsDate = a instanceof Date\n  const bIsDate = b instanceof Date\n  if (aIsDate && bIsDate) {\n    return a.getTime() === b.getTime()\n  }\n  if (!aIsDate && !bIsDate) {\n    return a === b\n  }\n  return false\n}\n\nconst valueEquals = function (a: Array<Date> | any, b: Array<Date> | any) {\n  const aIsArray = Array.isArray(a)\n  const bIsArray = Array.isArray(b)\n  if (aIsArray && bIsArray) {\n    if (a.length !== b.length) {\n      return false\n    }\n    return (a as Array<Date>).every((item, index) => dateEquals(item, b[index]))\n  }\n  if (!aIsArray && !bIsArray) {\n    return dateEquals(a, b)\n  }\n  return false\n}\n\nconst parser = function (\n  date: string | number | Date,\n  format: string,\n  lang: string\n): Dayjs {\n  const day =\n    isEmpty(format) || format === 'x'\n      ? dayjs(date).locale(lang)\n      : dayjs(date, format).locale(lang)\n  return day.isValid() ? day : undefined\n}\n\nconst formatter = function (\n  date: string | number | Date,\n  format: string,\n  lang: string\n) {\n  if (isEmpty(format)) return date\n  if (format === 'x') return +date\n  return dayjs(date).locale(lang).format(format)\n}\n\nexport default defineComponent({\n  name: 'Picker',\n  components: {\n    ElInput,\n    ElTooltip,\n    ElIcon,\n  },\n  props: timePickerDefaultProps,\n  emits: [\n    'update:modelValue',\n    'change',\n    'focus',\n    'blur',\n    'calendar-change',\n    'panel-change',\n    'visible-change',\n  ],\n  setup(props, ctx) {\n    const { lang } = useLocale()\n\n    const elForm = inject(formContextKey, {} as FormContext)\n    const elFormItem = inject(formItemContextKey, {} as FormItemContext)\n    const elPopperOptions = inject('ElPopperOptions', {} as Options)\n\n    const refPopper = ref<InstanceType<typeof ElTooltip>>()\n    const inputRef = ref<HTMLElement | ComponentPublicInstance>()\n    const pickerVisible = ref(false)\n    const pickerActualVisible = ref(false)\n    const valueOnOpen = ref(null)\n\n    watch(pickerVisible, (val) => {\n      if (!val) {\n        userInput.value = null\n        nextTick(() => {\n          emitChange(props.modelValue)\n        })\n        ctx.emit('blur')\n        blurInput()\n        props.validateEvent &&\n          elFormItem.validate?.('blur').catch((err) => debugWarn(err))\n      } else {\n        valueOnOpen.value = props.modelValue\n      }\n    })\n    const emitChange = (val, isClear?: boolean) => {\n      // determine user real change only\n      if (isClear || !valueEquals(val, valueOnOpen.value)) {\n        ctx.emit('change', val)\n        props.validateEvent &&\n          elFormItem.validate?.('change').catch((err) => debugWarn(err))\n      }\n    }\n    const emitInput = (val) => {\n      if (!valueEquals(props.modelValue, val)) {\n        let formatValue\n        if (Array.isArray(val)) {\n          formatValue = val.map((_) =>\n            formatter(_, props.valueFormat, lang.value)\n          )\n        } else if (val) {\n          formatValue = formatter(val, props.valueFormat, lang.value)\n        }\n        ctx.emit('update:modelValue', val ? formatValue : val, lang.value)\n      }\n    }\n    const refInput = computed<HTMLInputElement[]>(() => {\n      if (inputRef.value) {\n        const _r = isRangeInput.value\n          ? inputRef.value\n          : (inputRef.value as any as ComponentPublicInstance).$el\n        return Array.from<HTMLInputElement>(_r.querySelectorAll('input'))\n      }\n      return []\n    })\n    const refStartInput = computed(() => {\n      return refInput?.value[0]\n    })\n    const refEndInput = computed(() => {\n      return refInput?.value[1]\n    })\n    const setSelectionRange = (start, end, pos) => {\n      const _inputs = refInput.value\n      if (!_inputs.length) return\n      if (!pos || pos === 'min') {\n        _inputs[0].setSelectionRange(start, end)\n        _inputs[0].focus()\n      } else if (pos === 'max') {\n        _inputs[1].setSelectionRange(start, end)\n        _inputs[1].focus()\n      }\n    }\n    const onPick = (date: any = '', visible = false) => {\n      pickerVisible.value = visible\n      let result\n      if (Array.isArray(date)) {\n        result = date.map((_) => _.toDate())\n      } else {\n        // clear btn emit null\n        result = date ? date.toDate() : date\n      }\n      userInput.value = null\n      emitInput(result)\n    }\n\n    const onBeforeShow = () => {\n      pickerActualVisible.value = true\n    }\n\n    const onShow = () => {\n      ctx.emit('visible-change', true)\n    }\n\n    const onHide = () => {\n      pickerActualVisible.value = false\n      ctx.emit('visible-change', false)\n    }\n\n    const focus = (focusStartInput = true) => {\n      let input = refStartInput.value\n      if (!focusStartInput && isRangeInput.value) {\n        input = refEndInput.value\n      }\n      if (input) {\n        input.focus()\n      }\n    }\n\n    const handleFocus = (e) => {\n      if (props.readonly || pickerDisabled.value || pickerVisible.value) return\n      pickerVisible.value = true\n      ctx.emit('focus', e)\n    }\n\n    const handleBlur = () => {\n      refPopper.value?.onClose()\n      blurInput()\n    }\n\n    const pickerDisabled = computed(() => {\n      return props.disabled || elForm.disabled\n    })\n\n    const parsedValue = computed(() => {\n      let result\n      if (valueIsEmpty.value) {\n        if (pickerOptions.value.getDefaultValue) {\n          result = pickerOptions.value.getDefaultValue()\n        }\n      } else {\n        if (Array.isArray(props.modelValue)) {\n          result = props.modelValue.map((_) =>\n            parser(_, props.valueFormat, lang.value)\n          )\n        } else {\n          result = parser(props.modelValue, props.valueFormat, lang.value)\n        }\n      }\n\n      if (pickerOptions.value.getRangeAvailableTime) {\n        const availableResult =\n          pickerOptions.value.getRangeAvailableTime(result)\n        if (!isEqual(availableResult, result)) {\n          result = availableResult\n          emitInput(\n            Array.isArray(result)\n              ? result.map((_) => _.toDate())\n              : result.toDate()\n          )\n        }\n      }\n      if (Array.isArray(result) && result.some((_) => !_)) {\n        result = []\n      }\n      return result\n    })\n\n    const displayValue = computed(() => {\n      if (!pickerOptions.value.panelReady) return\n      const formattedValue = formatDayjsToString(parsedValue.value)\n      if (Array.isArray(userInput.value)) {\n        return [\n          userInput.value[0] || (formattedValue && formattedValue[0]) || '',\n          userInput.value[1] || (formattedValue && formattedValue[1]) || '',\n        ]\n      } else if (userInput.value !== null) {\n        return userInput.value\n      }\n      if (!isTimePicker.value && valueIsEmpty.value) return\n      if (!pickerVisible.value && valueIsEmpty.value) return\n      if (formattedValue) {\n        return isDatesPicker.value\n          ? (formattedValue as Array<string>).join(', ')\n          : formattedValue\n      }\n      return ''\n    })\n\n    const isTimeLikePicker = computed(() => props.type.includes('time'))\n\n    const isTimePicker = computed(() => props.type.startsWith('time'))\n\n    const isDatesPicker = computed(() => props.type === 'dates')\n\n    const triggerIcon = computed(\n      () => props.prefixIcon || (isTimeLikePicker.value ? Clock : Calendar)\n    )\n\n    const showClose = ref(false)\n\n    const onClearIconClick = (event) => {\n      if (props.readonly || pickerDisabled.value) return\n      if (showClose.value) {\n        event.stopPropagation()\n        emitInput(null)\n        emitChange(null, true)\n        showClose.value = false\n        pickerVisible.value = false\n        pickerOptions.value.handleClear && pickerOptions.value.handleClear()\n      }\n    }\n    const valueIsEmpty = computed(() => {\n      return (\n        !props.modelValue ||\n        (Array.isArray(props.modelValue) && !props.modelValue.length)\n      )\n    })\n    const onMouseEnter = () => {\n      if (props.readonly || pickerDisabled.value) return\n      if (!valueIsEmpty.value && props.clearable) {\n        showClose.value = true\n      }\n    }\n    const onMouseLeave = () => {\n      showClose.value = false\n    }\n    const isRangeInput = computed(() => {\n      return props.type.includes('range')\n    })\n\n    const pickerSize = useSize()\n\n    const popperPaneRef = computed(() => {\n      return refPopper.value?.popperRef?.contentRef\n    })\n\n    const popperEl = computed(() => unref(refPopper)?.popperRef?.contentRef)\n    const actualInputRef = computed(() => {\n      if (unref(isRangeInput)) {\n        return unref(inputRef)\n      }\n\n      return (unref(inputRef) as ComponentPublicInstance)?.$el\n    })\n\n    onClickOutside(actualInputRef, (e: PointerEvent) => {\n      const unrefedPopperEl = unref(popperEl)\n      const inputEl = unref(actualInputRef)\n      if (\n        (unrefedPopperEl &&\n          (e.target === unrefedPopperEl ||\n            e.composedPath().includes(unrefedPopperEl))) ||\n        e.target === inputEl ||\n        e.composedPath().includes(inputEl)\n      )\n        return\n      pickerVisible.value = false\n    })\n\n    const userInput = ref(null)\n\n    const handleChange = () => {\n      if (userInput.value) {\n        const value = parseUserInputToDayjs(displayValue.value)\n        if (value) {\n          if (isValidValue(value)) {\n            emitInput(\n              Array.isArray(value)\n                ? value.map((_) => _.toDate())\n                : value.toDate()\n            )\n            userInput.value = null\n          }\n        }\n      }\n      if (userInput.value === '') {\n        emitInput(null)\n        emitChange(null)\n        userInput.value = null\n      }\n    }\n\n    const blurInput = () => {\n      refInput.value.forEach((input) => input.blur())\n    }\n\n    const parseUserInputToDayjs = (value) => {\n      if (!value) return null\n      return pickerOptions.value.parseUserInput(value)\n    }\n\n    const formatDayjsToString = (value) => {\n      if (!value) return null\n      return pickerOptions.value.formatToString(value)\n    }\n\n    const isValidValue = (value) => {\n      return pickerOptions.value.isValidValue(value)\n    }\n\n    const handleKeydown = (event) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.esc) {\n        pickerVisible.value = false\n        event.stopPropagation()\n        return\n      }\n\n      if (code === EVENT_CODE.tab) {\n        if (!isRangeInput.value) {\n          handleChange()\n          pickerVisible.value = false\n          event.stopPropagation()\n        } else {\n          // user may change focus between two input\n          setTimeout(() => {\n            if (!refInput.value.includes(document.activeElement)) {\n              pickerVisible.value = false\n              blurInput()\n            }\n          }, 0)\n        }\n        return\n      }\n\n      if (code === EVENT_CODE.enter || code === EVENT_CODE.numpadEnter) {\n        if (\n          userInput.value === null ||\n          userInput.value === '' ||\n          isValidValue(parseUserInputToDayjs(displayValue.value))\n        ) {\n          handleChange()\n          pickerVisible.value = false\n        }\n        event.stopPropagation()\n        return\n      }\n\n      // if user is typing, do not let picker handle key input\n      if (userInput.value) {\n        event.stopPropagation()\n        return\n      }\n\n      if (pickerOptions.value.handleKeydown) {\n        pickerOptions.value.handleKeydown(event)\n      }\n    }\n    const onUserInput = (e) => {\n      userInput.value = e\n    }\n\n    const handleStartInput = (event) => {\n      if (userInput.value) {\n        userInput.value = [event.target.value, userInput.value[1]]\n      } else {\n        userInput.value = [event.target.value, null]\n      }\n    }\n\n    const handleEndInput = (event) => {\n      if (userInput.value) {\n        userInput.value = [userInput.value[0], event.target.value]\n      } else {\n        userInput.value = [null, event.target.value]\n      }\n    }\n\n    const handleStartChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[0])\n      if (value && value.isValid()) {\n        userInput.value = [formatDayjsToString(value), displayValue.value[1]]\n        const newValue = [value, parsedValue.value && parsedValue.value[1]]\n        if (isValidValue(newValue)) {\n          emitInput(newValue)\n          userInput.value = null\n        }\n      }\n    }\n\n    const handleEndChange = () => {\n      const value = parseUserInputToDayjs(userInput.value && userInput.value[1])\n      if (value && value.isValid()) {\n        userInput.value = [displayValue.value[0], formatDayjsToString(value)]\n        const newValue = [parsedValue.value && parsedValue.value[0], value]\n        if (isValidValue(newValue)) {\n          emitInput(newValue)\n          userInput.value = null\n        }\n      }\n    }\n\n    const pickerOptions = ref<Partial<PickerOptions>>({})\n    const onSetPickerOption = <T extends keyof PickerOptions>(\n      e: [T, PickerOptions[T]]\n    ) => {\n      pickerOptions.value[e[0]] = e[1]\n      pickerOptions.value.panelReady = true\n    }\n\n    const onCalendarChange = (e) => {\n      ctx.emit('calendar-change', e)\n    }\n\n    const onPanelChange = (value, mode, view) => {\n      ctx.emit('panel-change', value, mode, view)\n    }\n\n    provide('EP_PICKER_BASE', {\n      props,\n    })\n\n    return {\n      // injected popper options\n      elPopperOptions,\n\n      isDatesPicker,\n      handleEndChange,\n      handleStartChange,\n      handleStartInput,\n      handleEndInput,\n      onUserInput,\n      handleChange,\n      handleKeydown,\n      popperPaneRef,\n      onClickOutside,\n      pickerSize,\n      isRangeInput,\n      onMouseLeave,\n      onMouseEnter,\n      onClearIconClick,\n      showClose,\n      triggerIcon,\n      onPick,\n      handleFocus,\n      handleBlur,\n      pickerVisible,\n      pickerActualVisible,\n      displayValue,\n      parsedValue,\n      setSelectionRange,\n      refPopper,\n      inputRef,\n      pickerDisabled,\n      onSetPickerOption,\n      onCalendarChange,\n      onPanelChange,\n      focus,\n      onShow,\n      onBeforeShow,\n      onHide,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}