{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, normalizeClass, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElContainer\",\n  props: {\n    direction: {\n      type: String,\n      default: \"\"\n    }\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const ns = useNamespace(\"container\");\n    const isVertical = computed(() => {\n      if (props.direction === \"vertical\") {\n        return true;\n      } else if (props.direction === \"horizontal\") {\n        return false;\n      }\n\n      if (slots && slots.default) {\n        const vNodes = slots.default();\n        return vNodes.some(vNode => {\n          const tag = vNode.type.name;\n          return tag === \"ElHeader\" || tag === \"ElFooter\";\n        });\n      } else {\n        return false;\n      }\n    });\n    return {\n      isVertical,\n      ns\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"section\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.is(\"vertical\", _ctx.isVertical)])\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\n\nvar Container = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Container as default };","map":{"version":3,"mappings":";;;;;AAWA,MAAKA,YAAaC,eAAa;AAC7BC,MAAM,eADuB;AAE7BC,OAAO;AACLC,aAAW;AACTC,UAAM,QADG;AAETC,aAAS;AAFA;AADN,GAFsB;;AAQ7BC,QAAMJ,KAAN,EAAa;AAAEK;AAAF,GAAb,EAAwB;AACtB,UAAMC,KAAKC,YAAa,aAAxB;AAEM,uBAAaC,SAAS,MAAM;AAC5B,gBAAMP,SAAN,KAAoB,UAApB,EAAgC;AAC3B;AACE,OAFP,MAEO,UAAMA,SAAN,KAAoB,YAApB,EAAkC;AACpC;AAAA;;AAEL,mBAASI,MAAMF,OAAf,EAAwB;AAC1B,cAAMM,SAAkBJ,KAAM,QAAN,EAAxB;AACO,sBAAOK,IAAP,CAAaC,KAAD,IAAW;AACtB,sBAAOA,MAAMT,IAAN,CAAyBH,IAAhC;AACC,yBAAQ,UAAR,IAAsBa,GAAQ,eAA9B;AAA8B,SAFhC;AAIF,OANH,MAMG;AACE;AAAA;AAAA,KAbQ,CAAb;AAgBC;AACLC,gBADK;AAELP;AAFK;AAEL;;AA7ByB,EAA/B;;;sBAVEQ,kBAEU;AAFAC,WAAKC,cAAG,UAAGC,CAAH,IAAQC,QAAGC,EAAH,CAAK,UAAL,EAAkBD,eAAlB,CAAR;AAER,KAFkC,CAC1CE,UAAa,wBAD6B,CAElC,EADK,CACL","names":["_sfc_main","defineComponent","name","props","direction","type","default","setup","slots","ns","useNamespace","computed","vNodes","some","vNode","tag","isVertical","_createElementBlock","class","_normalizeClass","b","_ctx","is","_renderSlot"],"sources":["../../../../../../packages/components/container/src/container.vue"],"sourcesContent":["<template>\n  <section :class=\"[ns.b(), ns.is('vertical', isVertical)]\">\n    <slot></slot>\n  </section>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\n\nimport type { Component, VNode } from 'vue'\n\nexport default defineComponent({\n  name: 'ElContainer',\n  props: {\n    direction: {\n      type: String,\n      default: '',\n    },\n  },\n  setup(props, { slots }) {\n    const ns = useNamespace('container')\n\n    const isVertical = computed(() => {\n      if (props.direction === 'vertical') {\n        return true\n      } else if (props.direction === 'horizontal') {\n        return false\n      }\n      if (slots && slots.default) {\n        const vNodes: VNode[] = slots.default()\n        return vNodes.some((vNode) => {\n          const tag = (vNode.type as Component).name\n          return tag === 'ElHeader' || tag === 'ElFooter'\n        })\n      } else {\n        return false\n      }\n    })\n    return {\n      isVertical,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}