{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport Nav from \"@/views/inc/Nav.vue\";\nexport default {\n  name: \"userManage\",\n  components: {\n    Nav\n  },\n\n  data() {\n    let namecheck = (rule, value, callback) => {\n      const relu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\n      const re = new RegExp(relu);\n\n      if (value.search(re) === -1) {\n        callback(new Error('姓名输入只能为中英文'));\n        return false;\n      } else {\n        if (this.length > 32) {\n          callback(new Error('仅支持32字符以内输入'));\n          return false;\n        } else {\n          return true;\n        }\n      }\n    };\n\n    let idcheck = (rule, value, callback) => {\n      console.log(this.ruleForm.role);\n\n      if (value[0] != 2 || value[1] != 2) {\n        //这里改成！==的话貌似会报错\n        callback(new Error('工号/学号前两位需为22'));\n        return false;\n      } else if (isNaN(value)) {\n        callback(new Error('输入只能为数字'));\n        return false;\n      } else if (this.ruleForm.role === '1') {\n        if (value.length !== 8) {\n          callback(new Error('请输入8位工号'));\n          return false;\n        } else return true;\n      } else if (this.ruleForm.role === '2') {\n        if (value.length !== 6) {\n          callback(new Error('请输入6位学号'));\n          return false;\n        } else return true;\n      }\n    };\n\n    return {\n      dialogVisible: false,\n      ruleForm: {},\n      editRules: {\n        name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }, {\n          validator: namecheck,\n          trigger: 'blur'\n        }],\n        id: [{\n          required: true,\n          message: '请输入学号/工号',\n          trigger: 'blur'\n        }, {\n          validator: idcheck,\n          trigger: 'blur'\n        }],\n        idNumber: [{\n          required: true,\n          message: '请输入身份证号',\n          trigger: 'blur'\n        }, {\n          pattern: '/(^\\\\d{15}$)|(^\\\\d{18}$)|(^\\\\d{17}(\\\\d|X|x)$)/',\n          message: '输入格式不正确，请检查输入',\n          trigger: 'blur'\n        }],\n        phoneNumber: [{\n          pattern: '^1[0-9]{10}$',\n          message: '请输入以1开头的11位数字',\n          trigger: 'blur'\n        }],\n        email: [{\n          pattern: '^[\\\\w\\\\-.]+@[a-z0-9]+(-[a-z0-9]+)?(\\\\.[a-z0-9]+(-[a-z0-9]+)?)*\\\\.[a-z]{2,4}$',\n          message: '邮箱格式不正确',\n          trigger: 'blur'\n        }],\n        role: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'change'\n        }]\n      },\n      tableData: [{\n        role: '0',\n        name: 'admin',\n        id: '000000',\n        idNumber: '123456789012345678',\n        phoneNumber: '12345678901',\n        email: '12345678901@test.cn',\n        state: 1,\n        major: '专业1',\n        college: '学院1'\n      }, {\n        role: '1',\n        name: 'test',\n        id: '000000',\n        idNumber: '123456789012345678',\n        phoneNumber: '12345678901',\n        email: '12345678901@test.cn',\n        state: 3\n      }]\n    };\n  },\n\n  created() {\n    this.getUserForm();\n  },\n\n  methods: {\n    getUserForm() {\n      this.$axios.get(\"/admin/user/list\").then(res => {\n        this.tableData = res.data.data;\n      });\n    },\n\n    submitForm() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          this.$axios.post('/admin/user/' + (this.ruleForm.id ? 'update' : 'save'), this.ruleForm).then(res => {\n            this.$message({\n              showClose: true,\n              message: '操作成功',\n              type: 'success',\n              onClose: () => {\n                this.getUserForm();\n              }\n            });\n            this.dialogVisible = false;\n          });\n        } else {\n          this.$nextTick(() => {\n            this.scrollToTop(this.$refs.ruleForm.$el);\n          });\n        }\n      });\n    },\n\n    handleChange(file, fileList) {\n      this.fileTemp = file.raw;\n\n      if (this.fileTemp) {\n        if (this.fileTemp.type === '.csv' || this.fileTemp.type === 'application/vnd.ms-excel') {\n          this.importcsv(file.raw);\n        } else {\n          this.$message({\n            type: 'warning',\n            message: '附件格式错误，请删除后重新上传！'\n          });\n        }\n      } else {\n        this.$message({\n          type: 'warning',\n          message: '请上传附件！'\n        });\n      }\n    },\n\n    importcsv(obj) {\n      let _this = this; //如果需要点击事件结束之后对DOM进行操作使用)_this.xx=xx进行操作\n\n\n      Papa.parse(obj, {\n        complete(results) {\n          console.log(results); //调试查看csv文件的数据\n\n          let data = []; //遍历csv文件中的数据，存放到data中\n\n          for (let i = 0; i < results.data.length; i++) {\n            let obj = {};\n            obj.number = results.data[i][0];\n            obj.name = results.data[i][1];\n            obj.nameRemark = results.data[i][2];\n            obj.index = results.data[i][3];\n            data.push(obj);\n          }\n\n          data.splice(0, 1); //将数组第一位的表格名称去除\n\n          console.log('data', data);\n          _this.tableData = data; //将数据放入要展示的表格中\n        }\n\n      });\n    },\n\n    editHandle(id) {\n      this.$axios.get('/sys/menu/info/' + id).then(res => {\n        this.ruleForm = res.data.data;\n        this.dialogVisible = true;\n      });\n    },\n\n    scrollToTop(node) {\n      const ChildHasError = Array.from(node.querySelectorAll('.is-error'));\n      if (!ChildHasError.length) throw new Error('有错误，但是找不到错误位置');\n    }\n\n  }\n};","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab3/vueadmin-vue/src/assets/js/usermanage.js"],"names":["Nav","name","components","data","namecheck","rule","value","callback","relu","re","RegExp","search","Error","length","idcheck","console","log","ruleForm","role","isNaN","dialogVisible","editRules","required","message","trigger","validator","id","idNumber","pattern","phoneNumber","email","tableData","state","major","college","created","getUserForm","methods","$axios","get","then","res","submitForm","$refs","validate","valid","post","$message","showClose","type","onClose","$nextTick","scrollToTop","$el","handleChange","file","fileList","fileTemp","raw","importcsv","obj","_this","Papa","parse","complete","results","i","number","nameRemark","index","push","splice","editHandle","node","ChildHasError","Array","from","querySelectorAll"],"mappings":"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","sourcesContent":["import Nav from \"@/views/inc/Nav.vue\";\r\n\r\nexport default {\r\n    name: \"userManage\",\r\n    components:{\r\n        Nav\r\n    },\r\n    data(){\r\n        let namecheck=(rule,value,callback)=>{\r\n            const relu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\r\n            const re = new RegExp(relu);\r\n            if (value.search(re) === -1){\r\n                callback(new Error('姓名输入只能为中英文'));\r\n                return false;\r\n            } else {\r\n                if(this.length>32){\r\n                    callback(new Error('仅支持32字符以内输入'));\r\n                    return false;\r\n                }\r\n                else {\r\n                    return true;\r\n                    }\r\n                }\r\n\r\n        };\r\n        let idcheck=(rule,value,callback)=>{\r\n            console.log(this.ruleForm.role);\r\n            if(value[0]!=2||value[1]!=2){           //这里改成！==的话貌似会报错\r\n                callback(new Error('工号/学号前两位需为22'));\r\n                return false;\r\n            }\r\n            else if(isNaN(value))\r\n            {\r\n                callback(new Error('输入只能为数字'));\r\n                return false;\r\n            }\r\n            else if(this.ruleForm.role==='1')\r\n            {\r\n                if(value.length!==8)\r\n                {\r\n                    callback(new Error('请输入8位工号'))\r\n                    return false;\r\n                }\r\n                else\r\n                    return true;\r\n            }\r\n            else if(this.ruleForm.role==='2')\r\n            {\r\n                if(value.length!==6)\r\n                {\r\n                    callback(new Error('请输入6位学号'))\r\n                    return false;\r\n                }\r\n                else\r\n                    return true;\r\n            }\r\n        };\r\n        return{\r\n            dialogVisible:false,\r\n            ruleForm:{\r\n            },\r\n            editRules :({\r\n                name: [\r\n                    {\r\n                        required: true,\r\n                        message: '请输入姓名',\r\n                        trigger: 'blur'\r\n                    },\r\n                    { validator: namecheck,trigger: 'blur'}\r\n                ],\r\n                id: [\r\n                    {\r\n                        required: true,\r\n                        message: '请输入学号/工号',\r\n                        trigger: 'blur',\r\n                    },\r\n                    { validator: idcheck,trigger: 'blur'}\r\n                ],\r\n                idNumber: [\r\n                    {\r\n                        required: true,\r\n                        message: '请输入身份证号',\r\n                        trigger: 'blur',\r\n                    },\r\n                    {pattern:'/(^\\\\d{15}$)|(^\\\\d{18}$)|(^\\\\d{17}(\\\\d|X|x)$)/',message:'输入格式不正确，请检查输入',trigger: 'blur'}\r\n                ],\r\n                phoneNumber:[\r\n                    {pattern:'^1[0-9]{10}$',message:'请输入以1开头的11位数字',trigger:'blur',}\r\n                ],\r\n                email:[\r\n                    {pattern:'^[\\\\w\\\\-.]+@[a-z0-9]+(-[a-z0-9]+)?(\\\\.[a-z0-9]+(-[a-z0-9]+)?)*\\\\.[a-z]{2,4}$',message:'邮箱格式不正确',trigger: 'blur'}\r\n                ],\r\n                role: [\r\n                    {\r\n                        required: true,\r\n                        message: '请选择角色',\r\n                        trigger: 'change',\r\n                    },\r\n                ]\r\n            }),\r\n            tableData : [\r\n                {\r\n                    role: '0',\r\n                    name: 'admin',\r\n                    id:'000000',\r\n                    idNumber:'123456789012345678',\r\n                    phoneNumber:'12345678901',\r\n                    email:'12345678901@test.cn',\r\n                    state: 1,\r\n                    major:'专业1',\r\n                    college:'学院1'\r\n                },\r\n                {\r\n                    role: '1',\r\n                    name: 'test',\r\n                    id:'000000',\r\n                    idNumber:'123456789012345678',\r\n                    phoneNumber:'12345678901',\r\n                    email:'12345678901@test.cn',\r\n                    state:3\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created(){\r\n        this.getUserForm()\r\n    },\r\n\r\n    methods:{\r\n        getUserForm(){\r\n            this.$axios.get(\"/admin/user/list\").then(res=>{\r\n                this.tableData=res.data.data;\r\n            })\r\n        },\r\n        submitForm(){\r\n            this.$refs.ruleForm.validate(valid=>{\r\n                if(valid){\r\n                    this.$axios.post('/admin/user/'+(this.ruleForm.id?'update':'save'),this.ruleForm)\r\n                    .then(res=>{\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: '操作成功',\r\n                            type: 'success',\r\n                            onClose:()=>{\r\n                                this.getUserForm()\r\n                            }\r\n                            });\r\n                        this.dialogVisible=false;\r\n                        }\r\n                    )\r\n                }\r\n                else{\r\n                    this.$nextTick(() => {\r\n                        this.scrollToTop(this.$refs.ruleForm.$el)\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        handleChange(file, fileList) {\r\n            this.fileTemp = file.raw\r\n            if (this.fileTemp) {\r\n                if ((this.fileTemp.type === '.csv') || (this.fileTemp.type === 'application/vnd.ms-excel')) {\r\n                    this.importcsv(file.raw)\r\n                } else {\r\n                    this.$message({\r\n                        type: 'warning',\r\n                        message: '附件格式错误，请删除后重新上传！'\r\n                    })\r\n                }\r\n            } else {\r\n                this.$message({\r\n                    type: 'warning',\r\n                    message: '请上传附件！'\r\n                })\r\n            }\r\n        },\r\n        importcsv (obj) {\r\n            let _this = this//如果需要点击事件结束之后对DOM进行操作使用)_this.xx=xx进行操作\r\n            Papa.parse(obj, {\r\n                complete (results) {\r\n                    console.log(results)//调试查看csv文件的数据\r\n                    let data = []\r\n                    //遍历csv文件中的数据，存放到data中\r\n                    for (let i = 0; i < results.data.length; i++) {\r\n                        let obj = {}\r\n                        obj.number = results.data[i][0]\r\n                        obj.name = results.data[i][1]\r\n                        obj.nameRemark = results.data[i][2]\r\n                        obj.index = results.data[i][3]\r\n                        data.push(obj)\r\n                    }\r\n                    data.splice(0, 1)//将数组第一位的表格名称去除\r\n                    console.log('data', data)\r\n                    _this.tableData = data//将数据放入要展示的表格中\r\n                }\r\n            })\r\n        },\r\n        editHandle(id){\r\n            this.$axios.get('/sys/menu/info/'+id).then(res=>{\r\n                this.ruleForm=res.data.data\r\n                this.dialogVisible=true\r\n            })\r\n        },\r\n        scrollToTop (node) {\r\n            const ChildHasError = Array.from(node.querySelectorAll('.is-error'))\r\n            if (!ChildHasError.length) throw new Error('有错误，但是找不到错误位置')\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}