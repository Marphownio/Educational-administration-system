{"ast":null,"code":"import baseIsArrayBuffer from './_baseIsArrayBuffer.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n/* Node.js helper references. */\n\nvar nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;\n/**\r\n * Checks if `value` is classified as an `ArrayBuffer` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\r\n * @example\r\n *\r\n * _.isArrayBuffer(new ArrayBuffer(2));\r\n * // => true\r\n *\r\n * _.isArrayBuffer(new Array(2));\r\n * // => false\r\n */\n\nvar isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\nexport default isArrayBuffer;","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab2/lab/vue/node_modules/lodash-es/isArrayBuffer.js"],"names":["baseIsArrayBuffer","baseUnary","nodeUtil","nodeIsArrayBuffer","isArrayBuffer"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,yBAA9B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA;;AACA,IAAIC,iBAAiB,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,aAA7C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,aAAa,GAAGD,iBAAiB,GAAGF,SAAS,CAACE,iBAAD,CAAZ,GAAkCH,iBAAvE;AAEA,eAAeI,aAAf","sourcesContent":["import baseIsArrayBuffer from './_baseIsArrayBuffer.js';\r\nimport baseUnary from './_baseUnary.js';\r\nimport nodeUtil from './_nodeUtil.js';\r\n\r\n/* Node.js helper references. */\r\nvar nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;\r\n\r\n/**\r\n * Checks if `value` is classified as an `ArrayBuffer` object.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.3.0\r\n * @category Lang\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\r\n * @example\r\n *\r\n * _.isArrayBuffer(new ArrayBuffer(2));\r\n * // => true\r\n *\r\n * _.isArrayBuffer(new Array(2));\r\n * // => false\r\n */\r\nvar isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\r\n\r\nexport default isArrayBuffer;\r\n"]},"metadata":{},"sourceType":"module"}