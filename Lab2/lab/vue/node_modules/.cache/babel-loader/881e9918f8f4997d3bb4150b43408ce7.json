{"ast":null,"code":"import { defineComponent, computed, ref, inject, resolveComponent, openBlock, createElementBlock, createElementVNode, toDisplayString, normalizeClass, createVNode, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport { union } from 'lodash-unified';\nimport '../../../../hooks/index.mjs';\nimport '../../../../constants/index.mjs';\nimport TimeSpinner from './basic-time-spinner.mjs';\nimport { useOldValue, getAvailableArrs } from './useTimePicker.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nconst makeSelectRange = (start, end) => {\n  const result = [];\n\n  for (let i = start; i <= end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nconst _sfc_main = defineComponent({\n  components: {\n    TimeSpinner\n  },\n  props: {\n    visible: Boolean,\n    actualVisible: Boolean,\n    parsedValue: {\n      type: [Array]\n    },\n    format: {\n      type: String,\n      default: \"\"\n    }\n  },\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n\n  setup(props, ctx) {\n    const {\n      t,\n      lang\n    } = useLocale();\n    const minDate = computed(() => props.parsedValue[0]);\n    const maxDate = computed(() => props.parsedValue[1]);\n    const oldValue = useOldValue(props);\n\n    const handleCancel = () => {\n      ctx.emit(\"pick\", oldValue.value, null);\n    };\n\n    const showSeconds = computed(() => {\n      return props.format.includes(\"ss\");\n    });\n    const amPmMode = computed(() => {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n    const minSelectableRange = ref([]);\n    const maxSelectableRange = ref([]);\n\n    const handleConfirm = (visible = false) => {\n      ctx.emit(\"pick\", [minDate.value, maxDate.value], visible);\n    };\n\n    const handleMinChange = date => {\n      handleChange(date.millisecond(0), maxDate.value);\n    };\n\n    const handleMaxChange = date => {\n      handleChange(minDate.value, date.millisecond(0));\n    };\n\n    const isValidValue = _date => {\n      const parsedDate = _date.map(_ => dayjs(_).locale(lang.value));\n\n      const result = getRangeAvailableTime(parsedDate);\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1]);\n    };\n\n    const handleChange = (_minDate, _maxDate) => {\n      ctx.emit(\"pick\", [_minDate, _maxDate], true);\n    };\n\n    const btnConfirmDisabled = computed(() => {\n      return minDate.value > maxDate.value;\n    });\n    const selectionRange = ref([0, 2]);\n\n    const setMinSelectionRange = (start, end) => {\n      ctx.emit(\"select-range\", start, end, \"min\");\n      selectionRange.value = [start, end];\n    };\n\n    const offset = computed(() => showSeconds.value ? 11 : 8);\n\n    const setMaxSelectionRange = (start, end) => {\n      ctx.emit(\"select-range\", start, end, \"max\");\n      selectionRange.value = [start + offset.value, end + offset.value];\n    };\n\n    const changeSelectionRange = step => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];\n      const mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      const index = list.indexOf(selectionRange.value[0]);\n      const next = (index + step + list.length) % list.length;\n      const half = list.length / 2;\n\n      if (next < half) {\n        timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n      } else {\n        timePickerOptions[\"end_emitSelectRange\"](mapping[next - half]);\n      }\n    };\n\n    const handleKeydown = event => {\n      const code = event.code;\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1;\n        const role = selectionRange.value[0] < offset.value ? \"start\" : \"end\";\n        timePickerOptions[`${role}_scrollDown`](step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value);\n      const compareHour = compareDate.hour();\n      const nextDisable = isStart ? makeSelectRange(compareHour + 1, 23) : makeSelectRange(0, compareHour - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value);\n      const compareHour = compareDate.hour();\n\n      if (hour !== compareHour) {\n        return defaultDisable;\n      }\n\n      const compareMinute = compareDate.minute();\n      const nextDisable = isStart ? makeSelectRange(compareMinute + 1, 59) : makeSelectRange(0, compareMinute - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds ? disabledSeconds(hour, minute, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value);\n      const compareHour = compareDate.hour();\n      const compareMinute = compareDate.minute();\n\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable;\n      }\n\n      const compareSecond = compareDate.second();\n      const nextDisable = isStart ? makeSelectRange(compareSecond + 1, 59) : makeSelectRange(0, compareSecond - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    const getRangeAvailableTime = dates => {\n      return dates.map((_, index) => getRangeAvailableTimeEach(dates[0], dates[1], index === 0 ? \"start\" : \"end\"));\n    };\n\n    const {\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    } = getAvailableArrs(disabledHours_, disabledMinutes_, disabledSeconds_);\n\n    const getRangeAvailableTimeEach = (startDate, endDate, role) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds\n      };\n      const isStart = role === \"start\";\n      let result = isStart ? startDate : endDate;\n      const compareDate = isStart ? endDate : startDate;\n      [\"hour\", \"minute\", \"second\"].forEach(_ => {\n        if (availableMap[_]) {\n          let availableArr;\n          const method = availableMap[_];\n\n          if (_ === \"minute\") {\n            availableArr = method(result.hour(), role, compareDate);\n          } else if (_ === \"second\") {\n            availableArr = method(result.hour(), result.minute(), role, compareDate);\n          } else {\n            availableArr = method(role, compareDate);\n          }\n\n          if (availableArr && availableArr.length && !availableArr.includes(result[_]())) {\n            const pos = isStart ? 0 : availableArr.length - 1;\n            result = result[_](availableArr[pos]);\n          }\n        }\n      });\n      return result;\n    };\n\n    const parseUserInput = value => {\n      if (!value) return null;\n\n      if (Array.isArray(value)) {\n        return value.map(_ => dayjs(_, props.format).locale(lang.value));\n      }\n\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    const formatToString = value => {\n      if (!value) return null;\n\n      if (Array.isArray(value)) {\n        return value.map(_ => _.format(props.format));\n      }\n\n      return value.format(props.format);\n    };\n\n    const getDefaultValue = () => {\n      if (Array.isArray(defaultValue)) {\n        return defaultValue.map(_ => dayjs(_).locale(lang.value));\n      }\n\n      const defaultDay = dayjs(defaultValue).locale(lang.value);\n      return [defaultDay, defaultDay.add(60, \"m\")];\n    };\n\n    ctx.emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    ctx.emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    ctx.emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    ctx.emit(\"set-picker-option\", [\"handleKeydown\", handleKeydown]);\n    ctx.emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    ctx.emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    const timePickerOptions = {};\n\n    const onSetOption = e => {\n      timePickerOptions[e[0]] = e[1];\n    };\n\n    const pickerBase = inject(\"EP_PICKER_BASE\");\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue\n    } = pickerBase.props;\n    return {\n      arrowControl,\n      onSetOption,\n      setMaxSelectionRange,\n      setMinSelectionRange,\n      btnConfirmDisabled,\n      handleCancel,\n      handleConfirm,\n      t,\n      showSeconds,\n      minDate,\n      maxDate,\n      amPmMode,\n      handleMinChange,\n      handleMaxChange,\n      minSelectableRange,\n      maxSelectableRange,\n      disabledHours_,\n      disabledMinutes_,\n      disabledSeconds_\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"el-time-range-picker el-picker-panel\"\n};\nconst _hoisted_2 = {\n  class: \"el-time-range-picker__content\"\n};\nconst _hoisted_3 = {\n  class: \"el-time-range-picker__cell\"\n};\nconst _hoisted_4 = {\n  class: \"el-time-range-picker__header\"\n};\nconst _hoisted_5 = {\n  class: \"el-time-range-picker__cell\"\n};\nconst _hoisted_6 = {\n  class: \"el-time-range-picker__header\"\n};\nconst _hoisted_7 = {\n  class: \"el-time-panel__footer\"\n};\nconst _hoisted_8 = [\"disabled\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_time_spinner = resolveComponent(\"time-spinner\");\n\n  return _ctx.actualVisible ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"div\", _hoisted_2, [createElementVNode(\"div\", _hoisted_3, [createElementVNode(\"div\", _hoisted_4, toDisplayString(_ctx.t(\"el.datepicker.startTime\")), 1), createElementVNode(\"div\", {\n    class: normalizeClass([{\n      \"has-seconds\": _ctx.showSeconds,\n      \"is-arrow\": _ctx.arrowControl\n    }, \"el-time-range-picker__body el-time-panel__content\"])\n  }, [createVNode(_component_time_spinner, {\n    ref: \"minSpinner\",\n    role: \"start\",\n    \"show-seconds\": _ctx.showSeconds,\n    \"am-pm-mode\": _ctx.amPmMode,\n    \"arrow-control\": _ctx.arrowControl,\n    \"spinner-date\": _ctx.minDate,\n    \"disabled-hours\": _ctx.disabledHours_,\n    \"disabled-minutes\": _ctx.disabledMinutes_,\n    \"disabled-seconds\": _ctx.disabledSeconds_,\n    onChange: _ctx.handleMinChange,\n    onSetOption: _ctx.onSetOption,\n    onSelectRange: _ctx.setMinSelectionRange\n  }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2)]), createElementVNode(\"div\", _hoisted_5, [createElementVNode(\"div\", _hoisted_6, toDisplayString(_ctx.t(\"el.datepicker.endTime\")), 1), createElementVNode(\"div\", {\n    class: normalizeClass([{\n      \"has-seconds\": _ctx.showSeconds,\n      \"is-arrow\": _ctx.arrowControl\n    }, \"el-time-range-picker__body el-time-panel__content\"])\n  }, [createVNode(_component_time_spinner, {\n    ref: \"maxSpinner\",\n    role: \"end\",\n    \"show-seconds\": _ctx.showSeconds,\n    \"am-pm-mode\": _ctx.amPmMode,\n    \"arrow-control\": _ctx.arrowControl,\n    \"spinner-date\": _ctx.maxDate,\n    \"disabled-hours\": _ctx.disabledHours_,\n    \"disabled-minutes\": _ctx.disabledMinutes_,\n    \"disabled-seconds\": _ctx.disabledSeconds_,\n    onChange: _ctx.handleMaxChange,\n    onSetOption: _ctx.onSetOption,\n    onSelectRange: _ctx.setMaxSelectionRange\n  }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2)])]), createElementVNode(\"div\", _hoisted_7, [createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"el-time-panel__btn cancel\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.handleCancel())\n  }, toDisplayString(_ctx.t(\"el.datepicker.cancel\")), 1), createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"el-time-panel__btn confirm\",\n    disabled: _ctx.btnConfirmDisabled,\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.handleConfirm())\n  }, toDisplayString(_ctx.t(\"el.datepicker.confirm\")), 9, _hoisted_8)])])) : createCommentVNode(\"v-if\", true);\n}\n\nvar TimeRangePanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { TimeRangePanel as default };","map":{"version":3,"mappings":"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","names":["makeSelectRange","start","end","result","i","push","_sfc_main","defineComponent","components","TimeSpinner","props","visible","actualVisible","parsedValue","type","Array","format","default","emits","setup","ctx","t","lang","useLocale","minDate","maxDate","oldValue","useOldValue","handleCancel","value","computed","includes","minSelectableRange","ref","maxSelectableRange","emit","date","handleChange","millisecond","_date","map","_","dayjs","locale","getRangeAvailableTime","isSame","parsedDate","_minDate","_maxDate","selectionRange","offset","showSeconds","step","list","concat","index","indexOf","next","length","half","timePickerOptions","mapping","event","code","left","EVENT_CODE","right","changeSelectionRange","up","down","role","compare","disabledHours","isStart","compareDate","compareHour","union","defaultDisable","nextDisable","disabledMinutes_","hour","disabledMinutes","compareMinute","disabledSeconds_","minute","disabledSeconds","compareSecond","dates","getRangeAvailableTimeEach","getAvailableHours","getAvailableMinutes","getAvailableSeconds","getAvailableArrs","disabledHours_","startDate","endDate","availableMap","second","forEach","method","availableArr","pos","isArray","getDefaultValue","defaultValue","defaultDay","formatToString","parseUserInput","isValidValue","handleKeydown","e","pickerBase","inject","arrowControl","onSetOption","setMaxSelectionRange","setMinSelectionRange","btnConfirmDisabled","handleConfirm","amPmMode","handleMinChange","handleMaxChange","class","_ctx","_openBlock","_createElementVNode","_hoisted_4","_createVNode","onChange","onSelectRange","_hoisted_6","onClick","_cache","_toDisplayString","disabled","_hoisted_8","_createCommentVNode"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-range.vue"],"sourcesContent":["<template>\n  <div v-if=\"actualVisible\" class=\"el-time-range-picker el-picker-panel\">\n    <div class=\"el-time-range-picker__content\">\n      <div class=\"el-time-range-picker__cell\">\n        <div class=\"el-time-range-picker__header\">\n          {{ t('el.datepicker.startTime') }}\n        </div>\n        <div\n          :class=\"{ 'has-seconds': showSeconds, 'is-arrow': arrowControl }\"\n          class=\"el-time-range-picker__body el-time-panel__content\"\n        >\n          <time-spinner\n            ref=\"minSpinner\"\n            role=\"start\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"minDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMinChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMinSelectionRange\"\n          />\n        </div>\n      </div>\n      <div class=\"el-time-range-picker__cell\">\n        <div class=\"el-time-range-picker__header\">\n          {{ t('el.datepicker.endTime') }}\n        </div>\n        <div\n          :class=\"{ 'has-seconds': showSeconds, 'is-arrow': arrowControl }\"\n          class=\"el-time-range-picker__body el-time-panel__content\"\n        >\n          <time-spinner\n            ref=\"maxSpinner\"\n            role=\"end\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"maxDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMaxChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMaxSelectionRange\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"el-time-panel__footer\">\n      <button\n        type=\"button\"\n        class=\"el-time-panel__btn cancel\"\n        @click=\"handleCancel()\"\n      >\n        {{ t('el.datepicker.cancel') }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"el-time-panel__btn confirm\"\n        :disabled=\"btnConfirmDisabled\"\n        @click=\"handleConfirm()\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, inject } from 'vue'\nimport dayjs from 'dayjs'\nimport { union } from 'lodash-unified'\nimport { useLocale } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nconst makeSelectRange = (start: number, end: number) => {\n  const result = []\n  for (let i = start; i <= end; i++) {\n    result.push(i)\n  }\n  return result\n}\nexport default defineComponent({\n  components: { TimeSpinner },\n\n  props: {\n    visible: Boolean,\n    actualVisible: Boolean,\n    parsedValue: {\n      type: [Array] as PropType<Array<Dayjs>>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    const minDate = computed(() => props.parsedValue[0])\n    const maxDate = computed(() => props.parsedValue[1])\n    const oldValue = useOldValue(props)\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, null)\n    }\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n\n    const minSelectableRange = ref([])\n    const maxSelectableRange = ref([])\n\n    const handleConfirm = (visible = false) => {\n      ctx.emit('pick', [minDate.value, maxDate.value], visible)\n    }\n\n    const handleMinChange = (date) => {\n      handleChange(date.millisecond(0), maxDate.value)\n    }\n    const handleMaxChange = (date) => {\n      handleChange(minDate.value, date.millisecond(0))\n    }\n\n    const isValidValue = (_date: Dayjs[]) => {\n      const parsedDate = _date.map((_) => dayjs(_).locale(lang.value))\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1])\n    }\n\n    const handleChange = (_minDate, _maxDate) => {\n      // todo getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', [_minDate, _maxDate], true)\n    }\n    const btnConfirmDisabled = computed(() => {\n      return minDate.value > maxDate.value\n    })\n\n    const selectionRange = ref([0, 2])\n    const setMinSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'min')\n      selectionRange.value = [start, end]\n    }\n\n    const offset = computed(() => (showSeconds.value ? 11 : 8))\n    const setMaxSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'max')\n      selectionRange.value = [start + offset.value, end + offset.value]\n    }\n\n    const changeSelectionRange = (step) => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11]\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      const half = list.length / 2\n      if (next < half) {\n        timePickerOptions['start_emitSelectRange'](mapping[next])\n      } else {\n        timePickerOptions['end_emitSelectRange'](mapping[next - half])\n      }\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        const role = selectionRange.value[0] < offset.value ? 'start' : 'end'\n        timePickerOptions[`${role}_scrollDown`](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const nextDisable = isStart\n        ? makeSelectRange(compareHour + 1, 23)\n        : makeSelectRange(0, compareHour - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      if (hour !== compareHour) {\n        return defaultDisable\n      }\n      const compareMinute = compareDate.minute()\n      const nextDisable = isStart\n        ? makeSelectRange(compareMinute + 1, 59)\n        : makeSelectRange(0, compareMinute - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds\n        ? disabledSeconds(hour, minute, role)\n        : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const compareMinute = compareDate.minute()\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable\n      }\n      const compareSecond = compareDate.second()\n      const nextDisable = isStart\n        ? makeSelectRange(compareSecond + 1, 59)\n        : makeSelectRange(0, compareSecond - 1)\n      return union(defaultDisable, nextDisable)\n    }\n\n    const getRangeAvailableTime = (dates: Array<Dayjs>) => {\n      return dates.map((_, index) =>\n        getRangeAvailableTimeEach(\n          dates[0],\n          dates[1],\n          index === 0 ? 'start' : 'end'\n        )\n      )\n    }\n\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours_, disabledMinutes_, disabledSeconds_)\n\n    const getRangeAvailableTimeEach = (\n      startDate: Dayjs,\n      endDate: Dayjs,\n      role\n    ) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      const isStart = role === 'start'\n      let result = isStart ? startDate : endDate\n      const compareDate = isStart ? endDate : startDate\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), role, compareDate)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              role,\n              compareDate\n            )\n          } else {\n            availableArr = method(role, compareDate)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            const pos = isStart ? 0 : availableArr.length - 1\n            result = result[_](availableArr[pos])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => dayjs(_, props.format).locale(lang.value))\n      }\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => _.format(props.format))\n      }\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      if (Array.isArray(defaultValue)) {\n        return defaultValue.map((_) => dayjs(_).locale(lang.value))\n      }\n      const defaultDay = dayjs(defaultValue).locale(lang.value)\n      return [defaultDay, defaultDay.add(60, 'm')]\n    }\n\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n\n    return {\n      arrowControl,\n      onSetOption,\n      setMaxSelectionRange,\n      setMinSelectionRange,\n      btnConfirmDisabled,\n      handleCancel,\n      handleConfirm,\n      t,\n      showSeconds,\n      minDate,\n      maxDate,\n      amPmMode,\n      handleMinChange,\n      handleMaxChange,\n      minSelectableRange,\n      maxSelectableRange,\n      disabledHours_,\n      disabledMinutes_,\n      disabledSeconds_,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}