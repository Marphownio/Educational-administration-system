{"ast":null,"code":"import { defineComponent, getCurrentInstance, reactive, inject, computed, onMounted, toRefs, onUnmounted, withDirectives, openBlock, createElementBlock, normalizeClass, normalizeStyle, vShow, createCommentVNode, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { debugWarn } from '../../../utils/error.mjs';\nconst CARD_SCALE = 0.83;\n\nconst _sfc_main = defineComponent({\n  name: \"ElCarouselItem\",\n  props: {\n    name: {\n      type: String,\n      default: \"\"\n    },\n    label: {\n      type: [String, Number],\n      default: \"\"\n    }\n  },\n\n  setup(props) {\n    const ns = useNamespace(\"carousel\");\n    const instance = getCurrentInstance();\n    const data = reactive({\n      hover: false,\n      translate: 0,\n      scale: 1,\n      active: false,\n      ready: false,\n      inStage: false,\n      animating: false\n    });\n    const injectCarouselScope = inject(\"injectCarouselScope\");\n    const parentDirection = computed(() => {\n      return injectCarouselScope.direction;\n    });\n    const itemStyle = computed(() => {\n      const translateType = parentDirection.value === \"vertical\" ? \"translateY\" : \"translateX\";\n      const value = `${translateType}(${data.translate}px) scale(${data.scale})`;\n      const style = {\n        transform: value\n      };\n      return style;\n    });\n\n    function processIndex(index, activeIndex, length) {\n      if (activeIndex === 0 && index === length - 1) {\n        return -1;\n      } else if (activeIndex === length - 1 && index === 0) {\n        return length;\n      } else if (index < activeIndex - 1 && activeIndex - index >= length / 2) {\n        return length + 1;\n      } else if (index > activeIndex + 1 && index - activeIndex >= length / 2) {\n        return -2;\n      }\n\n      return index;\n    }\n\n    function calcCardTranslate(index, activeIndex) {\n      var _a;\n\n      const parentWidth = ((_a = injectCarouselScope.root.value) == null ? void 0 : _a.offsetWidth) || 0;\n\n      if (data.inStage) {\n        return parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1) / 4;\n      } else if (index < activeIndex) {\n        return -(1 + CARD_SCALE) * parentWidth / 4;\n      } else {\n        return (3 + CARD_SCALE) * parentWidth / 4;\n      }\n    }\n\n    function calcTranslate(index, activeIndex, isVertical) {\n      var _a, _b;\n\n      const distance = (isVertical ? (_a = injectCarouselScope.root.value) == null ? void 0 : _a.offsetHeight : (_b = injectCarouselScope.root.value) == null ? void 0 : _b.offsetWidth) || 0;\n      return distance * (index - activeIndex);\n    }\n\n    const translateItem = (index, activeIndex, oldIndex) => {\n      const parentType = injectCarouselScope.type;\n      const length = injectCarouselScope.items.value.length;\n\n      if (parentType !== \"card\" && oldIndex !== void 0) {\n        data.animating = index === activeIndex || index === oldIndex;\n      }\n\n      if (index !== activeIndex && length > 2 && injectCarouselScope.loop) {\n        index = processIndex(index, activeIndex, length);\n      }\n\n      if (parentType === \"card\") {\n        if (parentDirection.value === \"vertical\") {\n          debugWarn(\"Carousel\", \"vertical direction is not supported in card mode\");\n        }\n\n        data.inStage = Math.round(Math.abs(index - activeIndex)) <= 1;\n        data.active = index === activeIndex;\n        data.translate = calcCardTranslate(index, activeIndex);\n        data.scale = data.active ? 1 : CARD_SCALE;\n      } else {\n        data.active = index === activeIndex;\n        const isVertical = parentDirection.value === \"vertical\";\n        data.translate = calcTranslate(index, activeIndex, isVertical);\n      }\n\n      data.ready = true;\n    };\n\n    function handleItemClick() {\n      if (injectCarouselScope && injectCarouselScope.type === \"card\") {\n        const index = injectCarouselScope.items.value.map(d => d.uid).indexOf(instance.uid);\n        injectCarouselScope.setActiveItem(index);\n      }\n    }\n\n    onMounted(() => {\n      if (injectCarouselScope.addItem) {\n        injectCarouselScope.addItem({\n          uid: instance.uid,\n          ...props,\n          ...toRefs(data),\n          translateItem\n        });\n      }\n    });\n    onUnmounted(() => {\n      if (injectCarouselScope.removeItem) {\n        injectCarouselScope.removeItem(instance.uid);\n      }\n    });\n    return {\n      data,\n      itemStyle,\n      translateItem,\n      type: injectCarouselScope.type,\n      handleItemClick,\n      ns\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.e(\"item\"), _ctx.ns.is(\"active\", _ctx.data.active), _ctx.ns.is(\"in-stage\", _ctx.data.inStage), _ctx.ns.is(\"hover\", _ctx.data.hover), _ctx.ns.is(\"animating\", _ctx.data.animating), {\n      [_ctx.ns.em(\"item\", \"card\")]: _ctx.type === \"card\"\n    }]),\n    style: normalizeStyle(_ctx.itemStyle),\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleItemClick && _ctx.handleItemClick(...args))\n  }, [_ctx.type === \"card\" ? withDirectives((openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: normalizeClass(_ctx.ns.e(\"mask\"))\n  }, null, 2)), [[vShow, !_ctx.data.active]]) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")], 6)), [[vShow, _ctx.data.ready]]);\n}\n\nvar CarouselItem = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { CarouselItem as default };","map":{"version":3,"mappings":"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","names":["CARD_SCALE","_sfc_main","defineComponent","name","props","type","default","label","String","Number","setup","ns","useNamespace","instance","data","reactive","hover","translate","scale","active","ready","inStage","animating","injectCarouselScope","inject","computed","translateType","value","style","transform","activeIndex","length","index","isVertical","distance","oldIndex","debugWarn","calcTranslate","onMounted","uid","translateItem","onUnmounted","itemStyle","handleItemClick","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","class","e","is","em","onClick","key","_createCommentVNode"],"sources":["../../../../../../packages/components/carousel/src/item.vue"],"sourcesContent":["<template>\n  <div\n    v-show=\"data.ready\"\n    :class=\"[\n      ns.e('item'),\n      ns.is('active', data.active),\n      ns.is('in-stage', data.inStage),\n      ns.is('hover', data.hover),\n      ns.is('animating', data.animating),\n      { [ns.em('item', 'card')]: type === 'card' },\n    ]\"\n    :style=\"itemStyle\"\n    @click=\"handleItemClick\"\n  >\n    <div\n      v-if=\"type === 'card'\"\n      v-show=\"!data.active\"\n      :class=\"ns.e('mask')\"\n    ></div>\n    <slot></slot>\n  </div>\n</template>\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  reactive,\n  onMounted,\n  inject,\n  computed,\n  toRefs,\n  getCurrentInstance,\n  onUnmounted,\n} from 'vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { CSSProperties } from 'vue'\nimport type { InjectCarouselScope, ICarouselItemProps } from './carousel'\n\nconst CARD_SCALE = 0.83\nexport default defineComponent({\n  name: 'ElCarouselItem',\n  props: {\n    name: { type: String, default: '' },\n    label: {\n      type: [String, Number],\n      default: '',\n    },\n  },\n  setup(props: ICarouselItemProps) {\n    const ns = useNamespace('carousel')\n    // instance\n    const instance = getCurrentInstance()\n\n    // data\n    const data = reactive({\n      hover: false,\n      translate: 0,\n      scale: 1,\n      active: false,\n      ready: false,\n      inStage: false,\n      animating: false,\n    })\n\n    // inject\n    const injectCarouselScope: InjectCarouselScope = inject(\n      'injectCarouselScope'\n    )\n\n    // computed\n    const parentDirection = computed(() => {\n      return injectCarouselScope.direction\n    })\n\n    const itemStyle = computed(() => {\n      const translateType =\n        parentDirection.value === 'vertical' ? 'translateY' : 'translateX'\n      const value = `${translateType}(${data.translate}px) scale(${data.scale})`\n      const style: CSSProperties = {\n        transform: value,\n      }\n      return style\n    })\n\n    // methods\n\n    function processIndex(index, activeIndex, length) {\n      if (activeIndex === 0 && index === length - 1) {\n        return -1\n      } else if (activeIndex === length - 1 && index === 0) {\n        return length\n      } else if (index < activeIndex - 1 && activeIndex - index >= length / 2) {\n        return length + 1\n      } else if (index > activeIndex + 1 && index - activeIndex >= length / 2) {\n        return -2\n      }\n      return index\n    }\n\n    function calcCardTranslate(index, activeIndex) {\n      const parentWidth = injectCarouselScope.root.value?.offsetWidth || 0\n      if (data.inStage) {\n        return (\n          (parentWidth * ((2 - CARD_SCALE) * (index - activeIndex) + 1)) / 4\n        )\n      } else if (index < activeIndex) {\n        return (-(1 + CARD_SCALE) * parentWidth) / 4\n      } else {\n        return ((3 + CARD_SCALE) * parentWidth) / 4\n      }\n    }\n\n    function calcTranslate(index, activeIndex, isVertical) {\n      const distance =\n        (isVertical\n          ? injectCarouselScope.root.value?.offsetHeight\n          : injectCarouselScope.root.value?.offsetWidth) || 0\n      return distance * (index - activeIndex)\n    }\n\n    const translateItem = (\n      index: number,\n      activeIndex: number,\n      oldIndex: number\n    ) => {\n      const parentType = injectCarouselScope.type\n      const length = injectCarouselScope.items.value.length\n      if (parentType !== 'card' && oldIndex !== undefined) {\n        data.animating = index === activeIndex || index === oldIndex\n      }\n      if (index !== activeIndex && length > 2 && injectCarouselScope.loop) {\n        index = processIndex(index, activeIndex, length)\n      }\n      if (parentType === 'card') {\n        if (parentDirection.value === 'vertical') {\n          debugWarn(\n            'Carousel',\n            'vertical direction is not supported in card mode'\n          )\n        }\n        data.inStage = Math.round(Math.abs(index - activeIndex)) <= 1\n        data.active = index === activeIndex\n        data.translate = calcCardTranslate(index, activeIndex)\n        data.scale = data.active ? 1 : CARD_SCALE\n      } else {\n        data.active = index === activeIndex\n        const isVertical = parentDirection.value === 'vertical'\n        data.translate = calcTranslate(index, activeIndex, isVertical)\n      }\n      data.ready = true\n    }\n\n    function handleItemClick() {\n      if (injectCarouselScope && injectCarouselScope.type === 'card') {\n        const index = injectCarouselScope.items.value\n          .map((d) => d.uid)\n          .indexOf(instance.uid)\n        injectCarouselScope.setActiveItem(index)\n      }\n    }\n\n    // lifecycle\n    onMounted(() => {\n      if (injectCarouselScope.addItem) {\n        injectCarouselScope.addItem({\n          uid: instance.uid,\n          ...props,\n          ...toRefs(data),\n          translateItem,\n        })\n      }\n    })\n\n    onUnmounted(() => {\n      if (injectCarouselScope.removeItem) {\n        injectCarouselScope.removeItem(instance.uid)\n      }\n    })\n\n    return {\n      data,\n      itemStyle,\n      translateItem,\n      type: injectCarouselScope.type,\n      handleItemClick,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}