{"ast":null,"code":"import baseRandom from './_baseRandom.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseFloat = parseFloat;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n/**\r\n * Produces a random number between the inclusive `lower` and `upper` bounds.\r\n * If only one argument is provided a number between `0` and the given number\r\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\r\n * floats, a floating-point number is returned instead of an integer.\r\n *\r\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\r\n * floating-point values which can produce unexpected results.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.7.0\r\n * @category Number\r\n * @param {number} [lower=0] The lower bound.\r\n * @param {number} [upper=1] The upper bound.\r\n * @param {boolean} [floating] Specify returning a floating-point number.\r\n * @returns {number} Returns the random number.\r\n * @example\r\n *\r\n * _.random(0, 5);\r\n * // => an integer between 0 and 5\r\n *\r\n * _.random(5);\r\n * // => also an integer between 0 and 5\r\n *\r\n * _.random(5, true);\r\n * // => a floating-point number between 0 and 5\r\n *\r\n * _.random(1.2, 5.2);\r\n * // => a floating-point number between 1.2 and 5.2\r\n */\n\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    } else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  } else {\n    lower = toFinite(lower);\n\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1))), upper);\n  }\n\n  return baseRandom(lower, upper);\n}\n\nexport default random;","map":{"version":3,"sources":["E:/Git/Git/ss2022_group16/Lab2/lab/vue/node_modules/lodash-es/random.js"],"names":["baseRandom","isIterateeCall","toFinite","freeParseFloat","parseFloat","nativeMin","Math","min","nativeRandom","random","lower","upper","floating","undefined","temp","rand","length"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,cAAP,MAA2B,sBAA3B;AACA,OAAOC,QAAP,MAAqB,eAArB;AAEA;;AACA,IAAIC,cAAc,GAAGC,UAArB;AAEA;;AACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAArB;AAAA,IACIC,YAAY,GAAGF,IAAI,CAACG,MADxB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwC;AACtC,MAAIA,QAAQ,IAAI,OAAOA,QAAP,IAAmB,SAA/B,IAA4CX,cAAc,CAACS,KAAD,EAAQC,KAAR,EAAeC,QAAf,CAA9D,EAAwF;AACtFD,IAAAA,KAAK,GAAGC,QAAQ,GAAGC,SAAnB;AACD;;AACD,MAAID,QAAQ,KAAKC,SAAjB,EAA4B;AAC1B,QAAI,OAAOF,KAAP,IAAgB,SAApB,EAA+B;AAC7BC,MAAAA,QAAQ,GAAGD,KAAX;AACAA,MAAAA,KAAK,GAAGE,SAAR;AACD,KAHD,MAIK,IAAI,OAAOH,KAAP,IAAgB,SAApB,EAA+B;AAClCE,MAAAA,QAAQ,GAAGF,KAAX;AACAA,MAAAA,KAAK,GAAGG,SAAR;AACD;AACF;;AACD,MAAIH,KAAK,KAAKG,SAAV,IAAuBF,KAAK,KAAKE,SAArC,EAAgD;AAC9CH,IAAAA,KAAK,GAAG,CAAR;AACAC,IAAAA,KAAK,GAAG,CAAR;AACD,GAHD,MAIK;AACHD,IAAAA,KAAK,GAAGR,QAAQ,CAACQ,KAAD,CAAhB;;AACA,QAAIC,KAAK,KAAKE,SAAd,EAAyB;AACvBF,MAAAA,KAAK,GAAGD,KAAR;AACAA,MAAAA,KAAK,GAAG,CAAR;AACD,KAHD,MAGO;AACLC,MAAAA,KAAK,GAAGT,QAAQ,CAACS,KAAD,CAAhB;AACD;AACF;;AACD,MAAID,KAAK,GAAGC,KAAZ,EAAmB;AACjB,QAAIG,IAAI,GAAGJ,KAAX;AACAA,IAAAA,KAAK,GAAGC,KAAR;AACAA,IAAAA,KAAK,GAAGG,IAAR;AACD;;AACD,MAAIF,QAAQ,IAAIF,KAAK,GAAG,CAApB,IAAyBC,KAAK,GAAG,CAArC,EAAwC;AACtC,QAAII,IAAI,GAAGP,YAAY,EAAvB;AACA,WAAOH,SAAS,CAACK,KAAK,GAAIK,IAAI,IAAIJ,KAAK,GAAGD,KAAR,GAAgBP,cAAc,CAAC,SAAS,CAACY,IAAI,GAAG,EAAR,EAAYC,MAAZ,GAAqB,CAA9B,CAAD,CAAlC,CAAd,EAAsFL,KAAtF,CAAhB;AACD;;AACD,SAAOX,UAAU,CAACU,KAAD,EAAQC,KAAR,CAAjB;AACD;;AAED,eAAeF,MAAf","sourcesContent":["import baseRandom from './_baseRandom.js';\r\nimport isIterateeCall from './_isIterateeCall.js';\r\nimport toFinite from './toFinite.js';\r\n\r\n/** Built-in method references without a dependency on `root`. */\r\nvar freeParseFloat = parseFloat;\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min,\r\n    nativeRandom = Math.random;\r\n\r\n/**\r\n * Produces a random number between the inclusive `lower` and `upper` bounds.\r\n * If only one argument is provided a number between `0` and the given number\r\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\r\n * floats, a floating-point number is returned instead of an integer.\r\n *\r\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\r\n * floating-point values which can produce unexpected results.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.7.0\r\n * @category Number\r\n * @param {number} [lower=0] The lower bound.\r\n * @param {number} [upper=1] The upper bound.\r\n * @param {boolean} [floating] Specify returning a floating-point number.\r\n * @returns {number} Returns the random number.\r\n * @example\r\n *\r\n * _.random(0, 5);\r\n * // => an integer between 0 and 5\r\n *\r\n * _.random(5);\r\n * // => also an integer between 0 and 5\r\n *\r\n * _.random(5, true);\r\n * // => a floating-point number between 0 and 5\r\n *\r\n * _.random(1.2, 5.2);\r\n * // => a floating-point number between 1.2 and 5.2\r\n */\r\nfunction random(lower, upper, floating) {\r\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\r\n    upper = floating = undefined;\r\n  }\r\n  if (floating === undefined) {\r\n    if (typeof upper == 'boolean') {\r\n      floating = upper;\r\n      upper = undefined;\r\n    }\r\n    else if (typeof lower == 'boolean') {\r\n      floating = lower;\r\n      lower = undefined;\r\n    }\r\n  }\r\n  if (lower === undefined && upper === undefined) {\r\n    lower = 0;\r\n    upper = 1;\r\n  }\r\n  else {\r\n    lower = toFinite(lower);\r\n    if (upper === undefined) {\r\n      upper = lower;\r\n      lower = 0;\r\n    } else {\r\n      upper = toFinite(upper);\r\n    }\r\n  }\r\n  if (lower > upper) {\r\n    var temp = lower;\r\n    lower = upper;\r\n    upper = temp;\r\n  }\r\n  if (floating || lower % 1 || upper % 1) {\r\n    var rand = nativeRandom();\r\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\r\n  }\r\n  return baseRandom(lower, upper);\r\n}\r\n\r\nexport default random;\r\n"]},"metadata":{},"sourceType":"module"}