{"ast":null,"code":"import { defineComponent, ref, getCurrentInstance, provide, reactive, toRefs, inject, onMounted, toRaw, watch, withDirectives, openBlock, createElementBlock, normalizeClass, createElementVNode, toDisplayString, renderSlot, vShow } from 'vue';\nimport '../../../hooks/index.mjs';\nimport { selectGroupKey, selectKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElOptionGroup\",\n  componentName: \"ElOptionGroup\",\n  props: {\n    label: String,\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  setup(props) {\n    const ns = useNamespace(\"select\");\n    const visible = ref(true);\n    const instance = getCurrentInstance();\n    const children = ref([]);\n    provide(selectGroupKey, reactive({ ...toRefs(props)\n    }));\n    const select = inject(selectKey);\n    onMounted(() => {\n      children.value = flattedChildren(instance.subTree);\n    });\n\n    const flattedChildren = node => {\n      const children2 = [];\n\n      if (Array.isArray(node.children)) {\n        node.children.forEach(child => {\n          var _a;\n\n          if (child.type && child.type.name === \"ElOption\" && child.component && child.component.proxy) {\n            children2.push(child.component.proxy);\n          } else if ((_a = child.children) == null ? void 0 : _a.length) {\n            children2.push(...flattedChildren(child));\n          }\n        });\n      }\n\n      return children2;\n    };\n\n    const {\n      groupQueryChange\n    } = toRaw(select);\n    watch(groupQueryChange, () => {\n      visible.value = children.value.some(option => option.visible === true);\n    });\n    return {\n      visible,\n      ns\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return withDirectives((openBlock(), createElementBlock(\"ul\", {\n    class: normalizeClass(_ctx.ns.be(\"group\", \"wrap\"))\n  }, [createElementVNode(\"li\", {\n    class: normalizeClass(_ctx.ns.be(\"group\", \"title\"))\n  }, toDisplayString(_ctx.label), 3), createElementVNode(\"li\", null, [createElementVNode(\"ul\", {\n    class: normalizeClass(_ctx.ns.b(\"group\"))\n  }, [renderSlot(_ctx.$slots, \"default\")], 2)])], 2)), [[vShow, _ctx.visible]]);\n}\n\nvar OptionGroup = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { OptionGroup as default };","map":{"version":3,"mappings":";;;;;;AA2BA,MAAKA,YAAaC,eAAa;AAC7BC,MAAM,iBADuB;AAE7BC,eAAe,iBAFc;AAI7BC,OAAO;AACLC,SAAO,QADF;AAELC,YAAU;AACRC,UAAM,SADE;AAERC,aAAS;AAFD;AAFL,GAJsB;;AAW7BC,QAAML,KAAN,EAAa;AACX,UAAMM,KAAKC,YAAa,UAAxB;AACA,UAAMC,UAAUC,GAAI,MAApB;AACA,UAAMC,QAAW,uBAAjB;AACA,UAAMC,WAAWF,GAAI,IAArB;AAEAG,YACEC,cADF,EAEEC,QAAS,MACJC,MAAO;AADH,MAFX;AAOA,UAAMC,SAASC,MAAO,WAAtB;AAEAC,cAAU,MAAM;AACLP,uBAAQQ,gBAAgBT,QAAS,QAAzB,CAAR;AAAiC,KAD5C;;AAKM,4BAAmBU,IAAD,IAAU;AAChC,YAAMC,SAAW,KAAjB;;AACI,gBAAMC,OAAN,CAAcF,KAAKT,QAAnB,GAA8B;AAC3BS,sBAASG,OAAT,CAAkBC,KAAD,IAAW;AAE7B;;AAKS,iCAAW,CAAUrB,IAArB,CAAqBL,IAArB,KAAqB,UAArB,IAAqB0B,eAArB,IAAqBA,qBAArB,EAAqB;AACrBH,2BAAMG,gBAAkBC,KAAxB;AACA,WAFA,MAEA,UAAKD,KAAmB,SAAxB,KAAwB,IAAxB,GAAwB,MAAxB,GAAwBE,SAAxB,EAAwB;AAAAL;AAAA;AAAA,SAThC;AAaA;;AAAA;AAGH,KAnBA;;AAoBN,UAAM;AAAAM;AAAA,QAAwBC,aAA9B;AACEC,4BAAyB;AAA0CrB;AAG9D,KAHL;AAIA;AACAA,aADA;AACAF;AADA;AACA;;AAzDyB,EAA/B;;2CAnBOwB;AAPiB,uBAAO,WAAK;AAAAC;AAAA,KACqB,CAAhDC,kBAAO;AAAKD,yBAA4B;AAAjC,KAKPE,2BALO,EAKP,CALO,CAAyC,EAKhDD,kBADE,cAFAA,kBAAO;AAAID;AAAJ,KACG,oCADH,IAEP,EAJ8C,CADrB,EAAtB,CAAsB,CAAL,GAAjB,uBAAiB,CAAP","names":["_sfc_main","defineComponent","name","componentName","props","label","disabled","type","default","setup","ns","useNamespace","visible","ref","instance","children","provide","selectGroupKey","reactive","toRefs","select","inject","onMounted","flattedChildren","node","children2","isArray","forEach","child","proxy","_a","groupQueryChange","toRaw","watch","$setup","class","_createElementVNode","_toDisplayString"],"sources":["../../../../../../packages/components/select/src/option-group.vue"],"sourcesContent":["<template>\n  <ul v-show=\"visible\" :class=\"ns.be('group', 'wrap')\">\n    <li :class=\"ns.be('group', 'title')\">{{ label }}</li>\n    <li>\n      <ul :class=\"ns.b('group')\">\n        <slot></slot>\n      </ul>\n    </li>\n  </ul>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  provide,\n  inject,\n  ref,\n  reactive,\n  toRefs,\n  getCurrentInstance,\n  onMounted,\n  watch,\n  toRaw,\n} from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { selectGroupKey, selectKey } from './token'\n\nexport default defineComponent({\n  name: 'ElOptionGroup',\n  componentName: 'ElOptionGroup',\n\n  props: {\n    label: String,\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    const ns = useNamespace('select')\n    const visible = ref(true)\n    const instance = getCurrentInstance()\n    const children = ref([])\n\n    provide(\n      selectGroupKey,\n      reactive({\n        ...toRefs(props),\n      })\n    )\n\n    const select = inject(selectKey)\n\n    onMounted(() => {\n      children.value = flattedChildren(instance.subTree)\n    })\n\n    // get all instances of options\n    const flattedChildren = (node) => {\n      const children = []\n      if (Array.isArray(node.children)) {\n        node.children.forEach((child) => {\n          if (\n            child.type &&\n            child.type.name === 'ElOption' &&\n            child.component &&\n            child.component.proxy\n          ) {\n            children.push(child.component.proxy)\n          } else if (child.children?.length) {\n            children.push(...flattedChildren(child))\n          }\n        })\n      }\n      return children\n    }\n\n    const { groupQueryChange } = toRaw(select)\n    watch(groupQueryChange, () => {\n      visible.value = children.value.some((option) => option.visible === true)\n    })\n\n    return {\n      visible,\n      ns,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}