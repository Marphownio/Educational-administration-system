{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"head\", null, [/*#__PURE__*/_createElementVNode(\"meta\", {\n  charset: \"UTF-8\"\n}), /*#__PURE__*/_createElementVNode(\"title\", null, \"重置密码\")], -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"showlist\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"添加\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"body\", null, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_form, {\n    ref: \"ruleForm\",\n    model: $data.ruleForm,\n    rules: $data.editRules,\n    \"label-width\": \"120px\",\n    class: \"demo-ruleForm\",\n    size: _ctx.formSize\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"请输入新密码\",\n      prop: \"newpw\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.name,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ruleForm.name = $event)\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, {\n      label: \"请再次确认密码\",\n      prop: \"id\",\n      ref: \"id\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.id,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.ruleForm.id = $event),\n        modelModifiers: {\n          number: true\n        }\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }, 512\n    /* NEED_PATCH */\n    ), _createVNode(_component_el_form_item, {\n      label: \"身份证号\",\n      prop: \"idNumber\",\n      ref: \"idNumber\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.idNumber,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.ruleForm.idNumber = $event)\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }, 512\n    /* NEED_PATCH */\n    ), _createVNode(_component_el_form_item, {\n      label: \"手机号\",\n      prop: \"phoneNumber\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.phoneNumber,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.ruleForm.phoneNumber = $event)\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, {\n      label: \"邮箱\",\n      prop: \"email\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.ruleForm.email,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.ruleForm.email = $event)\n      }, null, 8\n      /* PROPS */\n      , [\"modelValue\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.submitForm\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\", \"rules\", \"size\"])])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACEA,oBAGO,MAHP,EAGO,IAHP,EAGO,cAFLA,oBAAsB,MAAtB,EAAsB;AAAhBC,SAAO,EAAC;AAAQ,CAAtB,CAEK,eADLD,oBAAmB,OAAnB,EAAmB,IAAnB,EAAO,MAAP,CACK,CAHP;;AAAA;;;AAMKE,OAAK,EAAC;;;iDA0B4C;;;;;;;;;;;6DAhCvDC,YAKAH,oBA+BO,MA/BP,EA+BO,IA/BP,EA+BO,CA9BPA,oBA6BM,KA7BN,cA6BM,CA5BFI,aA2BUC,kBA3BV,EA2BU;AA1BNC,OAAG,EAAC,UA0BE;AAzBLC,SAAK,EAAEC,cAyBF;AAxBLC,SAAK,EAAED,eAwBF;AAvBN,mBAAY,OAuBN;AAtBNN,SAAK,EAAC,eAsBA;AArBLQ,QAAI,EAAEC;AAqBD,GA3BV;sBAQE,MAEe,CAFfP,aAEeQ,uBAFf,EAEe;AAFDC,WAAK,EAAC,QAEL;AAFcC,UAAI,EAAC;AAEnB,KAFf;wBACE,MAA6C,CAA7CV,aAA6CW,mBAA7C,EAA6C;oBAA1BP,eAASQ,IAAiB;mEAA1BR,eAASQ,OAAIC;AAAa,OAA7C;;AAAA,uBAA6C;;;;KAD/C,CAEe,EACfb,aAEeQ,uBAFf,EAEe;AAFDC,WAAK,EAAC,SAEL;AAFeC,UAAI,EAAC,IAEpB;AAFyBR,SAAG,EAAC;AAE7B,KAFf;wBACE,MAAkD,CAAlDF,aAAkDW,mBAAlD,EAAkD;oBAAxBP,eAASU,EAAe;mEAAxBV,eAASU,KAAED,OAAa;wBAAxC;AAAAE;AAAA;AAAwC,OAAlD;;AAAA,uBAAkD;;;;KADpD;;AAAA,KADe,EAIff,aAEeQ,uBAFf,EAEe;AAFDC,WAAK,EAAC,MAEL;AAFYC,UAAI,EAAC,UAEjB;AAF4BR,SAAG,EAAC;AAEhC,KAFf;wBACE,MAAiD,CAAjDF,aAAiDW,mBAAjD,EAAiD;oBAA9BP,eAASY,QAAqB;mEAA9BZ,eAASY,WAAQH;AAAa,OAAjD;;AAAA,uBAAiD;;;;KADnD;;AAAA,KAJe,EAOfb,aAEeQ,uBAFf,EAEe;AAFDC,WAAK,EAAC,KAEL;AAFWC,UAAI,EAAC;AAEhB,KAFf;wBACE,MAAoD,CAApDV,aAAoDW,mBAApD,EAAoD;oBAAjCP,eAASa,WAAwB;mEAAjCb,eAASa,cAAWJ;AAAa,OAApD;;AAAA,uBAAoD;;;;KADtD,CAPe,EAUfb,aAEeQ,uBAFf,EAEe;AAFDC,WAAK,EAAC,IAEL;AAFUC,UAAI,EAAC;AAEf,KAFf;wBACE,MAA8C,CAA9CV,aAA8CW,mBAA9C,EAA8C;oBAA3BP,eAASc,KAAkB;mEAA3Bd,eAASc,QAAKL;AAAa,OAA9C;;AAAA,uBAA8C;;;;KADhD,CAVe,EAcfb,aAEeQ,uBAFf,EAEe,IAFf,EAEe;wBADb,MAA6D,CAA7DR,aAA6DmB,oBAA7D,EAA6D;AAAlDC,YAAI,EAAC,SAA6C;AAAlCC,eAAK,EAAEC;AAA2B,OAA7D;0BAA+C,MAAE;;;;OAAjD;;AAAA,oBAA6D,EAChD;;;;AAAA,KAFf,CAde;;;;GAVjB;;AAAA,+BA4BE,CA7BN,CA8BO,CA/BP","names":["_createElementVNode","charset","class","_hoisted_1","_createVNode","_component_el_form","ref","model","$data","rules","size","_ctx","_component_el_form_item","label","prop","_component_el_input","name","$event","id","number","idNumber","phoneNumber","email","_component_el_button","type","onClick","$options"],"sourceRoot":"","sources":["D:\\git\\ss2022_group16\\ss2022_group16\\Lab3\\vueadmin-vue\\src\\views\\passwordreset.vue"],"sourcesContent":["<template>\r\n  <head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>重置密码</title>\r\n  </head>\r\n\r\n  <body>\r\n  <div class=\"showlist\">\r\n      <el-form\r\n          ref=\"ruleForm\"\r\n          :model=\"ruleForm\"\r\n          :rules=\"editRules\"\r\n          label-width=\"120px\"\r\n          class=\"demo-ruleForm\"\r\n          :size=\"formSize\"\r\n        >\r\n        <el-form-item label=\"请输入新密码\" prop=\"newpw\">\r\n          <el-input v-model=\"ruleForm.name\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"请再次确认密码\" prop=\"id\" ref=\"id\">\r\n          <el-input v-model.number=\"ruleForm.id\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"身份证号\" prop=\"idNumber\" ref=\"idNumber\">\r\n          <el-input v-model=\"ruleForm.idNumber\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"手机号\" prop=\"phoneNumber\">\r\n          <el-input v-model=\"ruleForm.phoneNumber\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"邮箱\" prop=\"email\">\r\n          <el-input v-model=\"ruleForm.email\"></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item>\r\n          <el-button type=\"primary\" @click=\"submitForm\" >添加</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n  </div>\r\n  </body>\r\n</template>\r\n\r\n<script>\r\nimport Nav from \"@/views/inc/Nav.vue\";\r\nexport default {\r\n  name: \"userManage\",\r\n  components:{\r\n    Nav\r\n  },\r\n  data(){\r\n    return{\r\n      dialogVisible:false,\r\n      ruleForm:{\r\n      },\r\n      editRules :({\r\n        name: [\r\n          { required: true, message: '请输入姓名', trigger: 'blur' },\r\n          {pattern:'^[a-zA-Z\\u4e00-\\u9fa5]+$',message: '输入只能为中英文',trigger: 'change'}\r\n        ],\r\n        id: [\r\n          {\r\n            required: true,\r\n            message: '请输入学号/工号',\r\n            trigger: 'blur',\r\n          },\r\n          { type:'number',message:'输入只能为数字',trigger: 'change'}\r\n        ],\r\n        idNumber: [\r\n          {\r\n            required: true,\r\n            message: '请输入身份证号',\r\n            trigger: 'blur',\r\n          },\r\n          {pattern:'/(^\\\\d{15}$)|(^\\\\d{18}$)|(^\\\\d{17}(\\\\d|X|x)$)/',message:'输入格式不正确，请检查输入',trigger: 'blur'}\r\n        ],\r\n        phoneNumber:[\r\n          {pattern:'^1[0-9]{10}$',message:'请输入以1开头的11位数字',trigger:'blur',}\r\n        ],\r\n        email:[\r\n          {pattern:'/^([a-zA-Z0-9]+[-_\\\\.]?)+@[a-zA-Z0-9]+\\\\.[a-z]+$/',message:'邮箱格式不正确，请重新输入',trigger:'blur',}\r\n        ],\r\n        role: [\r\n          {\r\n            required: true,\r\n            message: '请选择角色',\r\n            trigger: 'blur',\r\n          },\r\n        ]\r\n      }),\r\n      tableData : [\r\n        {\r\n          role: '0',\r\n          name: 'admin',\r\n          id:'000000',\r\n          idNumber:'123456789012345678',\r\n          phoneNumber:'12345678901',\r\n          email:'12345678901@test.cn'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  created(){\r\n\r\n  },\r\n\r\n  methods:{\r\n    getUserForm(){\r\n      this.$axios.get(\"/sys/menu/list\").then(res=>{\r\n        this.tableData=res.data.data;\r\n      })\r\n    },\r\n    submitForm(){\r\n      this.$refs.ruleForm.validate(valid=>{\r\n        if(valid){\r\n          //this.$axios.post('/sys/menu/'+(this.ruleForm.id?'update':'save'),this.ruleForm)\r\n          //.then(res=>{\r\n          this.$message({\r\n                showClose: true,\r\n                message: '添加成功',\r\n                type: 'success',\r\n                onClose:()=>{\r\n                  this.getUserForm()\r\n                }\r\n                //})\r\n              }\r\n          )\r\n        }\r\n        else{\r\n          this.$nextTick(() => {\r\n            this.scrollToTop(this.$refs[formName].$el)\r\n          })\r\n        }\r\n      })\r\n    },\r\n    nameCheck () {\r\n      const relu = \"^[a-zA-Z\\u4e00-\\u9fa5]+$\";\r\n      const re = new RegExp(relu);\r\n      if (this.value.search(re) !== -1){\r\n      } else {\r\n        message:'输入只能为中英文！'\r\n      }\r\n    },\r\n    editHandle(id){\r\n      this.$axios.get('/sys/menu/info/'+id).then(res=>{\r\n        this.ruleForm=res.data.data;\r\n        this.dialogVisible=true;\r\n      })\r\n    },\r\n    scrollToTop (node) {\r\n      const ChildHasError = Array.from(node.querySelectorAll('.is-error'))\r\n      if (!ChildHasError.length) throw new Error('有错误，但是找不到错误位置')\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!--<template>-->\r\n<!--  <html lang=\"zh-CN\" xmlns:th=\"http://www.thymeleaf.org\">-->\r\n<!--  <form class=\"Preset\" th:action=\"@{/resetPassword}\" >-->\r\n<!--    <h1 style=\"text-align:center\">首次登录请重置密码</h1>-->\r\n<!--    <h4 style=\"text-align:center\">密码需包含大小写字母、数字及字符</h4>-->\r\n\r\n<!--    &lt;!&ndash;如果msg不为空，提示错误&ndash;&gt;-->\r\n<!--    <p style=\"color:red\" th:text=\"${msg}\" th:if=\"${not #strings.isEmpty(msg)}\"></p>-->\r\n\r\n<!--    <input onblur=\"testpassword()\" type=\"password\" id = \"newPassword1\" name=\"newPassword1\" placeholder=\"请输入新密码\">-->\r\n<!--    <span id=\"warn_msg\" style=\"align-content: center;\" >&nbsp;</span>-->\r\n<!--    <input onblur=\"WhetherSame()\" type=\"password\" id = \"newPassword2\" name=\"newPassword2\" placeholder=\"请再次输入密码\">-->\r\n<!--    <input type=\"submit\" value=\"确认\" onclick=\"return submit_check()\" class=\"verify\">-->\r\n<!--  </form>-->\r\n<!--  </html>-->\r\n<!--</template>-->\r\n<!--<script src=\"../assets/js/resetpasswords.js\"></script>-->\r\n<!--<style scoped>-->\r\n<!--@import \"../assets/css/resetPassword.css\";-->\r\n<!--</style>-->"]},"metadata":{},"sourceType":"module"}