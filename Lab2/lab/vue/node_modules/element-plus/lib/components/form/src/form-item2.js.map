{"version":3,"file":"form-item2.js","sources":["../../../../../../packages/components/form/src/form-item.vue"],"sourcesContent":["<template>\n  <div ref=\"formItemRef\" :class=\"formItemClasses\">\n    <form-label-wrap\n      :is-auto-width=\"labelStyle.width === 'auto'\"\n      :update-all=\"formContext.labelWidth === 'auto'\"\n    >\n      <label\n        v-if=\"label || $slots.label\"\n        :for=\"labelFor\"\n        :class=\"ns.e('label')\"\n        :style=\"labelStyle\"\n      >\n        <slot name=\"label\" :label=\"currentLabel\">\n          {{ currentLabel }}\n        </slot>\n      </label>\n    </form-label-wrap>\n\n    <div :class=\"ns.e('content')\" :style=\"contentStyle\">\n      <slot></slot>\n      <transition :name=\"`${ns.namespace.value}-zoom-in-top`\">\n        <slot v-if=\"shouldShowError\" name=\"error\" :error=\"validateMessage\">\n          <div :class=\"validateClasses\">\n            {{ validateMessage }}\n          </div>\n        </slot>\n      </transition>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  inject,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  toRefs,\n  watch,\n  nextTick,\n  useSlots,\n} from 'vue'\nimport AsyncValidator from 'async-validator'\nimport { clone } from 'lodash-unified'\nimport {\n  addUnit,\n  ensureArray,\n  getProp,\n  isString,\n  isBoolean,\n  throwError,\n} from '@element-plus/utils'\nimport { formItemContextKey, formContextKey } from '@element-plus/tokens'\nimport { useSize, useNamespace } from '@element-plus/hooks'\nimport { formItemProps } from './form-item'\nimport FormLabelWrap from './form-label-wrap'\n\nimport type { CSSProperties } from 'vue'\nimport type {\n  RuleItem,\n  ValidateError,\n  ValidateFieldsError,\n} from 'async-validator'\nimport type { FormItemContext } from '@element-plus/tokens'\nimport type { Arrayable } from '@element-plus/utils'\nimport type { FormItemValidateState } from './form-item'\nimport type { FormItemRule } from './types'\n\nconst COMPONENT_NAME = 'ElFormItem'\ndefineOptions({\n  name: 'ElFormItem',\n})\nconst props = defineProps(formItemProps)\nconst slots = useSlots()\n\nconst formContext = inject(formContextKey)\nif (!formContext)\n  throwError(COMPONENT_NAME, 'usage: <el-form><el-form-item /></el-form>')\nconst parentFormItemContext = inject(formItemContextKey, undefined)\n\nconst _size = useSize(undefined, { formItem: false })\nconst ns = useNamespace('form-item')\n\nconst validateState = ref<FormItemValidateState>('')\nconst validateMessage = ref('')\nconst formItemRef = ref<HTMLDivElement>()\nlet initialValue: any = undefined\n\nconst labelStyle = computed<CSSProperties>(() => {\n  if (formContext.labelPosition === 'top') {\n    return {}\n  }\n\n  const labelWidth = addUnit(props.labelWidth || formContext.labelWidth || '')\n  if (labelWidth) return { width: labelWidth }\n  return {}\n})\n\nconst contentStyle = computed<CSSProperties>(() => {\n  if (formContext.labelPosition === 'top' || formContext.inline) {\n    return {}\n  }\n  if (!props.label && !props.labelWidth && isNested) {\n    return {}\n  }\n  const labelWidth = addUnit(props.labelWidth || formContext.labelWidth || '')\n  if (!props.label && !slots.label) {\n    return { marginLeft: labelWidth }\n  }\n  return {}\n})\n\nconst formItemClasses = computed(() => [\n  ns.b(),\n  ns.m(_size.value),\n  ns.is('error', validateState.value === 'error'),\n  ns.is('validating', validateState.value === 'validating'),\n  ns.is('success', validateState.value === 'success'),\n  ns.is('required', isRequired.value || props.required),\n  ns.is('no-asterisk', formContext.hideRequiredAsterisk),\n  { [ns.m('feedback')]: formContext.statusIcon },\n])\n\nconst _inlineMessage = computed(() =>\n  isBoolean(props.inlineMessage)\n    ? props.inlineMessage\n    : formContext.inlineMessage || false\n)\n\nconst validateClasses = computed(() => [\n  ns.e('error'),\n  { [ns.em('error', 'inline')]: _inlineMessage.value },\n])\n\nconst propString = computed(() => {\n  if (!props.prop) return ''\n  return isString(props.prop) ? props.prop : props.prop.join('.')\n})\n\nconst labelFor = computed(() => props.for || propString.value)\n\nconst isNested = !!parentFormItemContext\n\nconst fieldValue = computed(() => {\n  const model = formContext.model\n  if (!model || !props.prop) {\n    return\n  }\n  return getProp(model, props.prop).value\n})\n\nconst _rules = computed(() => {\n  const rules: FormItemRule[] = props.rules ? ensureArray(props.rules) : []\n\n  const formRules = formContext.rules\n  if (formRules && props.prop) {\n    const _rules = getProp<Arrayable<FormItemRule> | undefined>(\n      formRules,\n      props.prop\n    ).value\n    if (_rules) {\n      rules.push(...ensureArray(_rules))\n    }\n  }\n\n  if (props.required !== undefined) {\n    rules.push({ required: !!props.required })\n  }\n\n  return rules\n})\n\nconst validateEnabled = computed(() => _rules.value.length > 0)\n\nconst getFilteredRule = (trigger: string) => {\n  const rules = _rules.value\n  return (\n    rules\n      .filter((rule) => {\n        if (!rule.trigger || !trigger) return true\n        if (Array.isArray(rule.trigger)) {\n          return rule.trigger.includes(trigger)\n        } else {\n          return rule.trigger === trigger\n        }\n      })\n      // exclude trigger\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .map(({ trigger, ...rule }): RuleItem => rule)\n  )\n}\n\nconst isRequired = computed(() =>\n  _rules.value.some((rule) => rule.required === true)\n)\n\nconst shouldShowError = computed(\n  () =>\n    validateState.value === 'error' &&\n    props.showMessage &&\n    formContext.showMessage\n)\n\nconst currentLabel = computed(\n  () => `${props.label || ''}${formContext.labelSuffix || ''}`\n)\n\nconst validate: FormItemContext['validate'] = async (trigger, callback) => {\n  if (callback) {\n    try {\n      validate(trigger)\n      callback(true)\n    } catch (err) {\n      callback(false, err as ValidateFieldsError)\n    }\n\n    validate(trigger)\n      .then(() => callback(true))\n      .catch((fields: ValidateFieldsError) => callback(false, fields))\n    return\n  }\n\n  if (!validateEnabled.value) {\n    return\n  }\n  const rules = getFilteredRule(trigger)\n  if (rules.length === 0) {\n    return\n  }\n\n  validateState.value = 'validating'\n\n  const descriptor = {\n    [propString.value]: rules,\n  }\n  const validator = new AsyncValidator(descriptor)\n  const model = {\n    [propString.value]: fieldValue.value,\n  }\n\n  interface ValidateFailure {\n    errors: ValidateError[] | null\n    fields: ValidateFieldsError\n  }\n\n  return validator\n    .validate(model, { firstFields: true })\n    .then(() => undefined)\n    .catch((err: ValidateFailure) => {\n      const { errors, fields } = err\n      if (!errors || !fields) console.error(err)\n\n      validateState.value = 'error'\n      validateMessage.value = errors\n        ? errors[0].message || `${props.prop} is required`\n        : ''\n      formContext.emit('validate', props.prop!, !errors, validateMessage.value)\n      return Promise.reject(fields)\n    })\n}\n\nconst clearValidate: FormItemContext['clearValidate'] = () => {\n  validateState.value = ''\n  validateMessage.value = ''\n}\n\nconst resetField: FormItemContext['resetField'] = () => {\n  const model = formContext.model\n  if (!model || !props.prop) return\n\n  getProp(model, props.prop).value = initialValue\n  nextTick(() => clearValidate())\n}\n\nwatch(\n  () => props.error,\n  (val) => {\n    validateMessage.value = val || ''\n    validateState.value = val ? 'error' : ''\n  },\n  { immediate: true }\n)\nwatch(\n  () => props.validateStatus,\n  (val) => (validateState.value = val || '')\n)\n\nconst context: FormItemContext = reactive({\n  ...toRefs(props),\n  $el: formItemRef,\n  size: _size,\n  validateState,\n  resetField,\n  clearValidate,\n  validate,\n})\nprovide(formItemContextKey, context)\n\nonMounted(() => {\n  if (props.prop) {\n    formContext.addField(context)\n    initialValue = clone(fieldValue.value)\n  }\n})\nonBeforeUnmount(() => {\n  formContext.removeField(context)\n})\n\ndefineExpose({\n  /** @description form item size */\n  size: _size,\n  /** @description validation message */\n  validateMessage,\n  /** @description validate form item */\n  validate,\n  /** @description clear validation status */\n  clearValidate,\n  /** @description reset field value */\n  resetField,\n})\n</script>\n"],"names":["useSlots","inject","formContextKey","throwError","formItemContextKey","useSize","useNamespace","ref","computed","addUnit","isBoolean","isString","getProp","ensureArray","AsyncValidator","nextTick","watch","reactive","toRefs","provide","onMounted","clone","onBeforeUnmount"],"mappings":"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"}