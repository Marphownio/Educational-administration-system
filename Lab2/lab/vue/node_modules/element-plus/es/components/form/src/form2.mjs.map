{"version":3,"file":"form2.mjs","sources":["../../../../../../packages/components/form/src/form.vue"],"sourcesContent":["<template>\n  <form :class=\"formClasses\">\n    <slot />\n  </form>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, reactive, toRefs, watch } from 'vue'\nimport { debugWarn } from '@element-plus/utils'\nimport { formContextKey } from '@element-plus/tokens'\nimport { useNamespace, useSize } from '@element-plus/hooks'\nimport { formProps, formEmits } from './form'\nimport { useFormLabelWidth, filterFields } from './utils'\nimport type { ValidateFieldsError } from 'async-validator'\nimport type { FormItemContext, FormContext } from '@element-plus/tokens'\nimport type { FormValidateCallback } from './types'\nimport type { FormItemProp } from './form-item'\n\nconst COMPONENT_NAME = 'ElForm'\ndefineOptions({\n  name: 'ElForm',\n})\nconst props = defineProps(formProps)\nconst emit = defineEmits(formEmits)\n\nconst fields: FormItemContext[] = []\n\nconst formSize = useSize()\nconst ns = useNamespace('form')\nconst formClasses = computed(() => {\n  const { labelPosition, inline } = props\n  return [\n    ns.b(),\n    ns.m(formSize.value),\n    {\n      [ns.m(`label-${labelPosition}`)]: labelPosition,\n      [ns.m('inline')]: inline,\n    },\n  ]\n})\n\nconst addField: FormContext['addField'] = (field) => {\n  fields.push(field)\n}\n\nconst removeField: FormContext['removeField'] = (field) => {\n  if (!field.prop) {\n    fields.splice(fields.indexOf(field), 1)\n  }\n}\n\nconst resetFields: FormContext['resetFields'] = (properties = []) => {\n  if (!props.model) {\n    debugWarn(COMPONENT_NAME, 'model is required for resetFields to work.')\n    return\n  }\n  filterFields(fields, properties).forEach((field) => field.resetField())\n}\n\nconst clearValidate: FormContext['clearValidate'] = (props = []) => {\n  filterFields(fields, props).forEach((field) => field.clearValidate())\n}\n\nconst validate = async (callback?: FormValidateCallback): Promise<void> =>\n  validateField(undefined, callback)\n\nconst validateField: FormContext['validateField'] = async (\n  properties = [],\n  callback\n) => {\n  if (callback) {\n    validate()\n      .then(() => callback(true))\n      .catch((fields: ValidateFieldsError) => callback(false, fields))\n    return\n  }\n\n  const { model, scrollToError } = props\n\n  if (!model) {\n    debugWarn(COMPONENT_NAME, 'model is required for form validation!')\n    return\n  }\n  if (fields.length === 0) {\n    return\n  }\n\n  const filteredFields = filterFields(fields, properties)\n  if (!filteredFields.length) {\n    debugWarn(COMPONENT_NAME, 'please pass correct props!')\n    return\n  }\n\n  let valid = true\n  let invalidFields: ValidateFieldsError = {}\n  let firstInvalidFields: ValidateFieldsError | undefined\n\n  for (const field of filteredFields) {\n    const fieldsError = await field\n      .validate('')\n      .catch((fields: ValidateFieldsError) => fields)\n\n    if (fieldsError) {\n      valid = false\n      if (!firstInvalidFields) firstInvalidFields = fieldsError\n    }\n\n    invalidFields = { ...invalidFields, ...fieldsError }\n  }\n\n  if (!valid) {\n    if (scrollToError) scrollToField(Object.keys(firstInvalidFields!)[0])\n    return Promise.reject(invalidFields)\n  }\n}\n\nconst scrollToField = (prop: FormItemProp) => {\n  const field = filterFields(fields, prop)[0]\n  if (field) {\n    field.$el?.scrollIntoView()\n  }\n}\n\nwatch(\n  () => props.rules,\n  () => {\n    if (props.validateOnRuleChange) validate()\n  },\n  { deep: true }\n)\n\nprovide(\n  formContextKey,\n  reactive({\n    ...toRefs(props),\n    emit,\n\n    resetFields,\n    clearValidate,\n    validateField,\n    addField,\n    removeField,\n\n    ...useFormLabelWidth(),\n  })\n)\n\ndefineExpose({\n  /** @description validate form */\n  validate,\n  /** @description validate form field */\n  validateField,\n  /** @description reset fields */\n  resetFields,\n  /** @description clear validation status */\n  clearValidate,\n  /** @description scroll to field */\n  scrollToField,\n})\n</script>\n"],"names":[],"mappings":"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"}