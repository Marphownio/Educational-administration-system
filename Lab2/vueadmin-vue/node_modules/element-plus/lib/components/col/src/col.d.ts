import type { ExtractPropTypes } from 'vue';
export declare type ColSizeObject = {
    span?: number;
    offset?: number;
};
export declare type ColSize = number | ColSizeObject;
export declare const colProps: {
    readonly tag: import("@element-plus/utils").BuildPropReturn<StringConstructor, "div", unknown, unknown, unknown>;
    readonly span: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 24, unknown, unknown, unknown>;
    readonly offset: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly pull: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly push: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly xs: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly sm: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly md: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly lg: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly xl: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
};
export declare type ColProps = ExtractPropTypes<typeof colProps>;
declare const _default: import("vue").DefineComponent<{
    readonly tag: import("@element-plus/utils").BuildPropReturn<StringConstructor, "div", unknown, unknown, unknown>;
    readonly span: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 24, unknown, unknown, unknown>;
    readonly offset: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly pull: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly push: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly xs: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly sm: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly md: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly lg: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly xl: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
}, () => JSX.Element, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<ExtractPropTypes<{
    readonly tag: import("@element-plus/utils").BuildPropReturn<StringConstructor, "div", unknown, unknown, unknown>;
    readonly span: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 24, unknown, unknown, unknown>;
    readonly offset: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly pull: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly push: import("@element-plus/utils").BuildPropReturn<NumberConstructor, 0, unknown, unknown, unknown>;
    readonly xs: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly sm: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly md: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly lg: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
    readonly xl: import("@element-plus/utils").BuildPropReturn<import("@element-plus/utils").PropWrapper<ColSize>, () => import("@element-plus/utils").Mutable<{}>, unknown, unknown, unknown>;
}>>, {
    span: number;
    offset: number;
    push: number;
    tag: string;
    pull: number;
    xs: import("@element-plus/utils").BuildPropType<import("@element-plus/utils").PropWrapper<ColSize>, unknown, unknown>;
    sm: import("@element-plus/utils").BuildPropType<import("@element-plus/utils").PropWrapper<ColSize>, unknown, unknown>;
    md: import("@element-plus/utils").BuildPropType<import("@element-plus/utils").PropWrapper<ColSize>, unknown, unknown>;
    lg: import("@element-plus/utils").BuildPropType<import("@element-plus/utils").PropWrapper<ColSize>, unknown, unknown>;
    xl: import("@element-plus/utils").BuildPropType<import("@element-plus/utils").PropWrapper<ColSize>, unknown, unknown>;
}>;
export default _default;
