{"version":3,"file":"form.js","sources":["../../../../packages/tokens/form.ts"],"sourcesContent":["import type { InjectionKey, SetupContext, UnwrapRef } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type {\n  FormProps,\n  FormEmits,\n  FormItemProp,\n  FormItemProps,\n  FormValidateCallback,\n  FormLabelWidthContext,\n} from '@element-plus/components/form'\nimport type { Arrayable } from '@element-plus/utils'\n\nexport type FormContext = FormProps &\n  UnwrapRef<FormLabelWidthContext> & {\n    emit: SetupContext<FormEmits>['emit']\n\n    // expose\n    addField: (field: FormItemContext) => void\n    removeField: (field: FormItemContext) => void\n    resetFields: (props?: Arrayable<FormItemProp>) => void\n    clearValidate: (props?: Arrayable<FormItemProp>) => void\n    validateField: (\n      props?: Arrayable<FormItemProp>,\n      callback?: FormValidateCallback\n    ) => Promise<void>\n  }\n\nexport interface FormItemContext extends FormItemProps {\n  $el: HTMLDivElement | undefined\n  size: ComponentSize\n  validateState: string\n  validate: (trigger: string, callback?: FormValidateCallback) => Promise<void>\n  resetField(): void\n  clearValidate(): void\n}\n\nexport const formContextKey: InjectionKey<FormContext> =\n  Symbol('formContextKey')\nexport const formItemContextKey: InjectionKey<FormItemContext> =\n  Symbol('formItemContextKey')\n"],"names":[],"mappings":";;;;AAAY,MAAC,cAAc,GAAG,MAAM,CAAC,gBAAgB,EAAE;AAC3C,MAAC,kBAAkB,GAAG,MAAM,CAAC,oBAAoB;;;;;"}